Important links:
=========================
https://code.premierinc.com/docs/display/COGRX/Environments
https://dev.azure.com/premierinc/CognitiveRx/
​https://portal.azure.com/#home

=SUMIF([Result],"Missing in CogRx",[totalspend])

Missing in Cogrx
====================================================================================================
Particular datafactory will load which all database tables

sqlcogrxproditemmaster.database.windows.net	sqldbCogRxProdItemMaster - all the initial setup will be done through this sql database.
This will tell which all datafactory will run for which all clients.
This will also define in this datafactory which all pipeline should run

synccontrol.synclist

adf-coginitverx-daily-prod(adf) - cognitiverx-daily-process-loop(pipeline)
adf-itemmaster-masterdata-receive-prod(adf) - wk pipelines(start with receive and then process pipelines) - receivedwalterkluverpharmacy pipelines
	All these happen on item master and then loaded to clients	
	itemmaster and client db synced by using itemmaster sync process
	premier runs weekly once
	gbo runs weekly five days
adf-itemMasterDataSync-prod(adf)
=========================================================================================================

CogRxDemo (cognitiverxserverstg/CogRxDemo) - Ranjith changes


Tables:
select * from Mapping.[PriceTypeGroupXref]
select * from PriceTypeGroup
select * from PriceList

SP:
[Integrations].[InsertSalesRecordsUsingPremier]
[Premier].[LoadInvoiceAndPO]
[Integrations].[MergeAquisitionCost_Premier]
 
 
 22710489
I hope these are all the places we need to update for story COGRX-807..

==========================================================================================================
DEMO
=========

CliendID	ClientName	HealthSystemID	Secret Key
1	CogRX_Demo	CO5012	Secret-CogRX-DB-Demo
2	CogRX_CommonSpirit	CO5012	Secret-CogRX-DB-CommonSpirit
3	CogRX_Fairview	MN2013	Secret-CogRX-DB-Fairview
4	CogRX_northwell	NY5011	Secret-CogRX-DB-northwell
5	CogRX_stluke	PA0023	Secret-CogRX-DB-stluke
6	CogRX_upmc	743692	Secret-CogRX-DB-upmc
AgxxwUh98W6xdG47IEsT

PROD
=========



Server											Database							Username			Password
sqlcogrxprodcommonspirit.database.windows.net	sqldbCogRxProdCommonSpirit			CogRX_CommonSpirit	AgxxwUh98W6xdG47IEsT
sqlcogrxprodcommonspirit.database.windows.net	sqldbCogRxProdAdvocateAurora		CogRX_AdvAurora	    9!Ns7_Mrt_k9
sqlcogrxproddemo.database.windows.net			sqldbCogRxProdDemo					CogRX_Demo			s7C9bHCf3xMVIVXi23Me
Sqlcogrxprodfairview.database.windows.net		sqldbCogRxProdFairview				CogRX_Fairview		GgMkzT66lIa1ups69Vnh
sqlcogrxprodnorthwell.database.windows.net		sqldbCogRxProdNorthwell				CogRX_northwell		x3Nzwf0iEvVgZITchlMy
sqlcogrxprodstlukes.database.windows.net		sqldbCogRxProdStLukes				CogRX_stluke		6fUzIrSlUQTnvZyHVf9S
sqlcogrxprodupmc.database.windows.net			sqldbCogRxProdUPMC					CogRX_upmc			vlhpM59vC5YSEcRg4LTX
sqlcogrxproddatascience.database.windows.net	sqldbCogRxProdWorkbench	 	 
sqlcogrxproditemmaster.database.windows.net		sqldbCogRxProdItemMaster			CogRX_ItemMaster	328NmtRyj7vZpc1qwLbh
sqlcogrxproditemmaster.database.windows.net		sqldbCogRxProdMasterdataSync		CogRX_ItemMaster	328NmtRyj7vZpc1qwLbh
sqlcogrxproditemmaster.database.windows.net		sqldbCogRxProdNationalWholesaler	CogRX_ItemMaster	328NmtRyj7vZpc1qwLbh
sqlcogrxprodcommonspirit.database.windows.net   sqldbCogRxDevAppCombined            CogRx_AppComb       sQmk3537LK!Smwb

Server=tcp:sqlcogrxprodcommonspirit.database.windows.net;Initial Catalog=sqldbCogRxProdAdvocateAurora;Persist Security Info=False;User ID=CogRX_AdvAurora;Password=9!Ns7_Mrt_k9;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;
Server=tcp:sqlcogrxprodcommonspirit.database.windows.net;Initial Catalog=sqldbCogRxProdCentura;Persist Security Info=False;User ID=CogRx_Centura;Password=MgWX9g^t@CqZh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;
Server=tcp:sqlcogrxprodcommonspirit.database.windows.net;Initial Catalog=sqldbCogRxProdJeffersonHealth;Persist Security Info=False;User ID=CogRX_JefHealth;Password=5l6^L&K#S$9iUFYD;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=120;
jdbc:sqlserver://cognitiverxserverstg.database.windows.net:1433;database=CogRxDemo;user=CogRxUser@cognitiverxserverstg;password=@Password;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;

sqlcogrxprodcommonspirit.database.windows.net
db=sqldbCogRxProdCentura;
UserID=CogRx_Centura;
Password=MgWX9g^t@CqZh;
Cannot open database 'ItemMaster' requested by the login. The login failed.
Login failed for user 'CogRX_ItemMaster'.
Server=tcp:sqlcogrxprodcommonspirit.database.windows.net;Initial Catalog=sqldbCogRxProdAdvocateAurora;Persist Security Info=False;User ID=CogRX_AdvAurora;Password=9!Ns7_Mrt_k9;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;
LOWER ENVIRONMENTS
============================

ID=CogRxUser;Password=@Password


SQL
NationalWholeSaler(itemmasterstgsqlserverpre/NationalWholeSaler)

===========================================================================================================



PremierWholesaleData_Receive  
		PremierHierarchyReport_Receive
				Customer Data Load Loop
					looop under ===> Customer Data Load
									 CopyDataFromProdToDev
									 Sync Price Disruptions
									 
									

Analysis for COGRX-810
-------------------------

QUERY TO GET THE LIST OF STORED PROCEDURES UPDATING A SPECIFIC TABLE.
*********************************************************************

select distinct o.name, o.type_desc, dep.is_updated
FROM sys.sql_modules   m 
INNER JOIN sys.objects o ON m.object_id=o.object_id
INNER JOIN sys.sql_dependencies dep ON m.object_id = dep.object_id
INNER JOIN sys.columns col ON dep.referenced_major_id = col.object_id
INNER JOIN sys.tables tab ON tab.object_id = col.object_id
WHERE tab.name = 'WholesalerInvoices'
and is_updated = 1
ORDER BY O.name

LIST OF STORED PROCEDURES UPDATED THE DBO.CUSTOMER TABLE.
*********************************************************

name                          |type_desc           |is_updated|
------------------------------+--------------------+----------+
DemoDataMasking               |SQL_STORED_PROCEDURE|         1|
InsertSalesRecordsUsingPremier|SQL_STORED_PROCEDURE|         1|
UpdateCustomerAccount         |SQL_STORED_PROCEDURE|         1|
UpdateCustomersFromPremier    |SQL_STORED_PROCEDURE|         1|

PremierDataReceiveStg	Customer Data Load	Process Invoices	[Integrations].[InsertSalesRecordsUsingPremier]
(seems not yet implemented. so out of scope)
hcp-DataReceiveStg	    HcpCustomerAccountData-Process	IntagrateHcpCustomerAccount	[Integrations].[UpdateCustomerAccount]

PremierDataReceiveStg	Customer Data Load	UpdateCustomersFromPremier	[Premier].[UpdateCustomersFromPremier]

Customer data load pipeline:

azure data lake gen2 to azure data lake gen1

blob -/premierdata/WholeSaleData(prod - /premierdata/WholeSaleData/2021/05/27)
adl - /stg/Premier/WholeSaleData


hierarchy report  - /stg/Premier/HierarchyReport/Contracted Premier Hierarchy Report.txt


True condition:
---------------

select *
from [Raw].[PremierCustomerList]
where [Health System ID] = '@{pipeline().parameters.HealthSystemID}'

False Condition:
-------------------
select *
from [Raw].[PremierCustomerList]
where ([Health System ID] = '@{pipeline().parameters.HealthSystemID}'
    and [Facility Direct Parent ID] = '@{pipeline().parameters.FacilityDirectParentID}')
    or [Facility ID] = '@{pipeline().parameters.FacilityDirectParentID}'
	
loaded into the [Raw].[PremierCustomerList] table with truncate condition	
[Raw].[PremierCustomerList]	
select *from [Raw].[PremierCustomerList]

Wholesale process:
------------------------
from adl path using usql combine the files

extract.txt
mindateextract.txt

table [Premier].[WholesalerInvoices] is loaded with /stg/Premier/WholeSaleData/2020/11/12/extract.txt file by combining all the files

-------------------
premierwholesale data process. the customers which are available in the feed is having the address as null in the dbo.customer table.

SELECT * FROM [Raw].[PremierCustomerList]	;

SELECT DISTINCT(FacilityAddress1)  FROM  [Premier].[WholesalerInvoices] ;

SELECT DISTINCT(Supplier) from [Premier].[WholesalerInvoices] ;

SELECT * FROM PREMIER.WholesalerInvoices WHERE FacilityAddress1 = '301 E MAIN ST';

SELECT * FROM DBO.Customer ;
--------------------

How Raw.Sales is updated???

Raw.Sales and customer table comparison and then updating the customer table.


seems to relavant
[Integrations].[InsertSalesRecordsUsingPremier]

hcp-DataReceiveStg
	HcpCustomerAccountData-Process
	
	
DBO.CUSTOMER is the main table for the address book. validated the same from the frontend for the hospital 'SOUTHSIDE HOSPITAL'
	
	301 E MAIN ST
	
address is available in the following table in postgresql - public.member_top_parent_view

Master data sync cogrx daily loop:
==================================
SELECT [HealthSystemID],
       [FacilityDirectParentID],
       [Secret],
       [DatasetInvoiceCode],
       [DatasetPoCode]
  FROM [SyncControl].[PremierCustomerSync]
  where [DataFactory] = 'Customer Data Load Loop'
      and [Status] = 'A'

logicapp:
========

when http request is received is the template to start with

https://prod-00.eastus.logic.azure.com:443/workflows/1c8736b698c24997bd667003eb27c11f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=hJCahSHTy8ik-nsvIPrMmuiO4VwbQ-pAkPXwd1aSULY
method as POST

customize body with header paste in datafactory and in the logic app as well
sample
{
'title':'',
'datafactoryname':''
}

add a variable and format the body of the email using html format

finally send email using office 365


stlukes error:
==============
Operation on target RebuildSalesTotal failed: Execution fail against sql server. Sql error number: 515. Error Message: Cannot insert the value NULL into column 'PriceTypeGroupId', table 'sqldbCogRxProdStLukes.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column 'PriceTypeGroupId', table 'sqldbCogRxProdStLukes.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Warning: Null value is eliminated by an aggregate or other SET operation.
Warning: Null value is eliminated by an aggregate or other SET operation.


source :[dbo].[SalesTotals]
target: [dbo].[SalesTotals]
field : PriceTypeGroupId

Monthly failed process:
=======================

Error fix: 
=============

SET ANSI_WARNINGS  OFF;
-- Your insert TSQL here.
SET ANSI_WARNINGS ON;

Failed for three clients

Error code:2402
Failure type:User configuration issue
Details:

Execution fail against sql server. Sql error number: 2628. Error Message: String or binary data would be truncated in table 'sqldbCogRxProdNorthwell.dbo.SalesArchive', column 'SupplierName'. Truncated value: 'AmerisourceBergen Drug Co'. The statement has been terminated.

Operation on target Monthly Archive of Sales failed: Execution fail against sql server. Sql error number: 2628. Error Message: String or binary data would be truncated in table 'sqldbCogRxProdUPMC.dbo.SalesArchive', column 'SupplierName'. Truncated value: 'AmerisourceBergen Drug Co'.
The statement has been terminated.

Operation on target Monthly Archive of Sales failed: Execution fail against sql server. Sql error number: 2628. Error Message: String or binary data would be truncated in table 'sqldbCogRxProdCommonSpirit.dbo.SalesArchive', column 'SupplierName'. Truncated value: 'AmerisourceBergen Drug Co'.
The statement has been terminated.

pipeline name: Cognitive-Monthly-Processes

sp : [MonthlyMaintinance].[ArchiveSalesData]

target : [dbo].[SalesArchive] - SupplierName - varchar 25 not null
source :  dbo.sales -  SupplierName - varchar 100 not null


impacted clients:
Northwell
UPMC
CommonSpirit

scale down jobs:
===================================================================
Error code  : BadRequest
Failure type : User configuration issue
Details : Operation on target Build Price Disruptions failed: Execution fail against sql server. Sql error number: 40544. Error Message: The database 'sqldbCogRxProdNationalWholesaler' has reached its size quota. Partition or delete data, drop indexes, or consult the documentation for possible resolutions. Warning: Null value is eliminated by an aggregate or other SET operation.

scale down parameters:   {'sku':{'name':'S0','tier':'Standard'},'location':'East US'}

Sql commands:
================

ALTER TABLE CogRxDemo.dbo.SalesArchive ALTER COLUMN SupplierName varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL;

Standup call:
==================

wholesaleinvoices ===> sales ==> customer table

Suggested approach:

PremierDataReceiveStg  ==> customer data process : [Integrations].[InsertSalesRecordsUsingPremier] ==> using sales data the address details are updated in the customer details.

public.member(Postgres table)   ===>   PremierHierarchyReport_Receive   ===>   [Raw].[PremierCustomerList](add new columns with required details)
===> [Premier].[UpdateCustomersFromPremier]

postgresql
-----------


Connection to c3pupgrxsdb1:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
  Connection refused: connect
  Connection refused: connect

Server = c3pupgrxsdb1
Database = rxs_prd
User ID = bm_abi_etl
Welcome@123

public.member

sql to be changed
-------------------------------------------------------------------------------------------------------------------------------------------------
select    max(a14.member_top_parent_info) AS 'Health System',
a14.member_top_parent_id AS 'Health System ID',
max(a13.member_direct_parent_info) AS 'Facility Direct Parent',
a13.member_direct_parent_id AS 'Facility Direct Parent ID',
a12.member_name AS 'Facility Name',
a12.member_id AS 'Facility ID'
from      agg_fact_bp_sales_mth a11
                join        member_view  a12
                  on         (a11.member_key = a12.member_key)
                join        member_direct_parent_view     a13
                  on         (a12.member_direct_parent_key = a13.member_direct_parent_key)
                join        member_top_parent_view         a14
                  on         (a12.member_top_parent_key = a14.member_top_parent_key)
where (a11.month_id between '2018412' and cast(to_char(date_trunc('month', current_date),'YYYYQMM') as int)
--where   (a11.month_id in
--(select cast(to_char((generate_series('20181201',date_trunc('month', current_date),'1 month')),'YYYYQMM') as int) as month_id)
and (a12.member_top_parent_key in (59815, 53168, 61885, 60971)
or a12.member_direct_parent_key in (12103))
and a12.member_status in ('ACTIVE', 'TERMINATED'))
group by              a12.member_top_parent_key,
                a14.member_top_parent_id,
                a12.member_direct_parent_key,
                a13.member_direct_parent_id,
                a12.member_name,
                a12.member_id limit 500001;
-------------------------------------------------------------------------------------------------------------------------------------------------------

MERGE Locations T
USING Locations_stage S ON T.LocationID=S.LocationID
WHEN MATCHED THEN
UPDATE SET LocationName=S.LocationName;


SELECT [Health System], [Health System ID], [Facility Direct Parent], [Facility Direct Parent ID], [Facility Name], [Facility ID], ImportedDate
FROM CogRxDemo.Raw.PremierCustomerList;

CREATE TABLE [dbo].[Locations_testing](
  [LocationID] [int] NULL,
  [LocationName] [varchar](100) NULL) 
  
  

CREATE TABLE [dbo].[Locations_stage_testing](
  [LocationID] [int] NULL,
  [LocationName] [varchar](100) NULL) 
  
  

INSERT INTO Locations_testing values (5,'Richmond Road'),(6,'Brigade Road') ,(7,'Houston Street')
INSERT INTO Locations_stage_testing values (1,'Richmond Cross') ,(3,'Houston Street'), (4,'Canal Street')

select * from dbo.locations_testing;
select * from dbo.Locations_stage_testing;

MERGE Locations_testing T
USING Locations_stage_testing S ON T.LocationID=S.LocationID
WHEN MATCHED THEN
UPDATE SET LocationName=S.LocationName
WHEN NOT MATCHED BY TARGET --if the data is not available in the target then insert from source.
THEN 
INSERT (LocationID,LocationName)
VALUES (S.LocationID,S.LocationName)
WHEN NOT MATCHED BY SOURCE 
THEN 
DELETE;

select * from dbo.Locations_testing;

-------------------------------------------------------------------------------------------------------------------------------------------
sql keyvault secrets
Server=tcp:sqlcogrxdevitemmasterdevn76m.database.windows.net,1433;Initial Catalog=sqldbcogrxdevitemmaster;Persist Security Info=False;User ID=dbasql;Password={your_password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;
				
Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdNationalWholesaler;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;

Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdItemMaster;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;
--------------------------------------------------------------------------------------------------------------------------------------------
New table changes:

				Facility AddrLine1
				Facility AddrLine2
				Facility City
				Facility State
				Facility Zip
				
				
				
ALTER TABLE Raw.PremierCustomerList 
    ADD 
        Facility AddrLine1 VARCHAR (200),
		Facility AddrLine2 VARCHAR (100) NOT NULL,
        Facility City VARCHAR (50) NOT NULL,
		Facility State VARCHAR (10) NOT NULL,
		Facility Zip VARCHAR (30) NOT NULL;
		
		
		
		
		
ALTER TABLE Raw.PremierCustomerList 
    ADD 
        [Facility AddrLine1] VARCHAR (200) ,
		[Facility AddrLine2] VARCHAR (100) ,
        [Facility City] VARCHAR (50) ,
		[Facility State] VARCHAR (10) ,
		[Facility Zip] VARCHAR (30) ,
		[Facility DEA] NVARCHAR (255);
		
ALTER TABLE Raw.PremierCustomerList 
    ADD 
        [Facility AddrLine1] VARCHAR (200) ,
		[Facility AddrLine2] VARCHAR (100) ,
        [Facility City] VARCHAR (50) ,
		[Facility State] VARCHAR (10) ,
		[Facility Zip] VARCHAR (30) ,
		[Facility DEA] NVARCHAR (255);
		
		[Facility AddrLine1] 
		[Facility AddrLine2]
        [Facility City] 
		[Facility State] 
		[Facility Zip] 
		[Facility DEA] 

cogrxpremierdatastore.dfs.core.windows.net

blob ==>  cogrxpremierdatastore    ===>   premierdata/HierarchyReport/Contracted_Premier_Hierarchy_Report.txt
adlgen1 ==>  penspharmstgpreadls   ==>    /stg/Premier/HierarchyReport/2021/06/03  

blobpath = HierarchyReport
Filename = Contracted_Premier_Hierarchy_Report.txt
adlpath  = /stg/Premier/HierarchyReport

Server=tcp:itemmasterstgsqlserverpre.database.windows.net;Initial Catalog=Masterdata_Sync;Persist Security Info=False;User ID=CogRxUser;Password=@Password;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;

SELECT [HealthSystemID],
       [FacilityDirectParentID],
       [Secret],
       [DatasetInvoiceCode],
       [DatasetPoCode]
  FROM [SyncControl].[PremierCustomerSync]
  where [DataFactory] = '@{pipeline().DataFactory}'
      and [Status] = 'A'
	  
	  
	  2021-06-03 05:18:11
	  
select *
from [Raw].[PremierCustomerList]
where ([Health System ID] = 'NY5011'
    and [Facility Direct Parent ID] = 'NY0024')
    or [Facility ID] = 'NY0024'
	
	
	group by              a11.member_key,
               a13.bus_partner_id,
               a12.man_dist limit 500001
			 
St lukes issue reported by client
---------------------------------

SELECT GpiName, HealthSystemId, Gpi10, Inc_Days, MissingDollars, MissingUnits, HsCount, HsMax, IncPerDay, IncPerDay_NoTop, Spread, Filled, ContractCount, GeneratedDate, SyncDate
FROM sqldbCogRxProdStLukes.NationalPriceDisruptions.ResultsGpi;


select * from sqldbCogRxProdStLukes.NationalPriceDisruptions.ResultsGpi

                WITH CTE_ASHP AS (
	                SELECT
						 Ndc
						,UpdatedDate
						,AvailableNdcs
						,AddedDateTime
						,Reasons
						,EstimatedResupply
	                FROM dbo.PharmacyItemShortage
	                WHERE isActive = 1 AND Source = 'ASHP' AND Status <> 'R'
                )
                SELECT 
					 r.Ndc
	                ,r.Gpi10
	                ,r.GpiName
	                ,r.Inc_Days
	                ,r.MissingDollars
	                ,r.MissingUnits
	                ,r.HsCount
	                ,pi.Manufacturer
	                ,pi.ItemDescription
	                ,nat.WacPackagePrice as 'Wac'
                    ,r.AvgPrice
	                ,convert(varchar, ashp.UpdatedDate, 23) as 'ShortUpdate'
                    ,convert(varchar, ashp.AddedDateTime, 23) as 'ShortAdded'
                    ,ashp.AvailableNdcs as 'ShortAvailable'
	                ,ashp.Reasons as 'ShortReasons'
	                ,ashp.EstimatedResupply as 'ShortResupply'
            --    FROM ***PREFIX***ResultsNdc r
	              FROM NationalPriceDisruptions.ResultsNdc r
                JOIN dbo.PharmacyItem pi ON r.Ndc = pi.Ndc
                JOIN dbo.NationalPharmacyItemPriceCurrent nat ON r.Ndc = nat.Ndc
                LEFT JOIN CTE_ASHP ashp ON r.Ndc = ashp.Ndc
                WHERE 
	                GpiName = 'Gabapentin'                        --@gpiname
                ORDER BY Inc_Days DESC;


select * from NationalPriceDisruptions.ResultsNdc


/prod/Premier/HierarchyReport/2021/06/07/

Prod implementation:
--------------------

CognitiveRX-DfDal-ADFItemMasterPRE - provide permission to this group for the gen1 to access the data from datafactory:



@{concat('ALTER TABLE [RawASHP].[ASHPShortageAuthor] DROP CONSTRAINT DF_ASHPShortageAuthor_PipelineRunId; 
ALTER TABLE [RawASHP].[ASHPShortageAuthor] ADD  CONSTRAINT [DF_ASHPShortageAuthor_PipelineRunId]  DEFAULT (','null',') FOR [PipelineRunId];')}


SELECT ClientId, CustomerId, SupplierId, ItemId, SupplierName, TransactionDate, Ndc, ItemDescription, OrderNumber, LineNumber, OrderType, Qty, UnitCost, UnitPrice, UOM, InvoiceNumber, WholesalerAccountNumber, WholesalerCBID, CostofDistribution, Address1, Address2, City, State, ZipCode, ImportedDate, SalesId, PriceTypeGroupId, DataSourceId, QuarterDate, ProcessPipelineId, RepackagedFlag, QtyOrdered
FROM sqldbCogRxProdStLukes.dbo.Sales;


select sa.Ndc,sum(qty * unitprice) 'unitprice', pi2.MfrId from dbo.sales sa join dbo.PharmacyItem pi2 on sa.itemid = pi2.ItemId and sa.Ndc = '57894019506'
--where Ndc = '57894019506' and itemid in (select distinct itemid from PharmacyItem where MfrId=971)
group by sa.Ndc, pi2.MfrId; 


select * from Supplier s ;

select * from mapping.SupplierCustomerXref scx ;


select * from Manufacturer m 
Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdMasterdataSync;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;



SELECT [HealthSystemID],
       [FacilityDirectParentID],
       [Secret],
       [DatasetInvoiceCode],
       [DatasetPoCode]
  FROM [SyncControl].[PremierCustomerSync]
  where [DataFactory] = 'adf-Premier-DataReceive-prod'
      and [Status] = 'A'
'HealthSystemID','FacilityDirectParentID','Secret','DatasetInvoiceCode','DatasetPoCode'
CO5012,,Secret-CogRX-DB-CommonSpirit,PremierWholesaleInvoice,PremierWholesalePO
PA0023,,Secret-CogRX-DB-stluke,PremierWholesaleInvoice,PremierWholesalePO
NY5011,NY0024,Secret-CogRX-DB-northwell,PremierWholesaleInvoice,PremierWholesalePO
MN2013,,Secret-CogRX-DB-Fairview,PremierWholesaleInvoice,PremierWholesalePO
'743692',,Secret-CogRX-DB-upmc,PremierWholesaleInvoice,PremierWholesalePO

select * from [Raw].[PremierCustomerList] where [Health System ID] = 'MN2013'

short units:
------------

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [PriceDisruptions].[BuildPriceDisruptions] @StartDate datetime, @ReportedDate datetime
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--declare @ReportedDate datetime = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0);

declare @StartRun datetime;
declare @EndRun datetime;

--select @ReportedDate
	set @StartRun = getdate()

	exec [PriceDisruptions].[BuildWacPricekey]

	exec [PriceDisruptions].[BuildTransform] @StartDate, @ReportedDate

	exec [PriceDisruptions].[BuildAvgPrices]

	exec [PriceDisruptions].[BuildRawInvoices]

	exec [PriceDisruptions].[BuildFilledUnitsGpi]

	exec [PriceDisruptions].[BuildContractCount]

	exec [PriceDisruptions].[BuildIncidentsGpi] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsNdc] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsGpiMfr] @ReportedDate

	exec [PriceDisruptions].[BuildResultsGpi] @ReportedDate

	EXEC [PriceDisruptions].[BuildResultsNdc] @ReportedDate

	set @EndRun = getdate()

	insert into [dbo].[TempHistoryLog]
	([Reported], [StartDate], [EndDate], [StartRun], [EndRun])
	values
	(@ReportedDate, @StartDate, @ReportedDate, @StartRun, @EndRun)

END


	, i.quantityordered * i.invoiceprice as PotentialSpend
	, CASE WHEN quantityordered != 0 THEN CAST(i.totalunits AS DECIMAL(8,2))/CAST(quantityordered AS DECIMAL(8,2)) ELSE CAST(0 AS DECIMAL(8,2)) END AS FillRate
	, (i.quantityordered * i.invoiceprice) - i.TotalSpend AS MissingDollars
	, i.quantityordered - i.totalunits AS MissingUnits
	, pk.equ_maxwac
	, ap.avgprice
FROM [PriceDisruptions].[Transform] i
	LEFT JOIN [PriceDisruptions].[AvgPrices] ap 
		ON i.ndc = ap.ndc
	LEFT JOIN [PriceDisruptions].[WacPricekey] pk 
		ON i.pricingkey = pk.pricingkey 
	   AND i.isgenericdrug = pk.isgenericdrug;
	   
	   

702156
PA2016

42294	CAROLINAS HEALTHCARE SYSTEM -  658406	63739059110	5/5/2021	0	1	0
44441	YANKEE ALLIANCE -  673415	63739059110	5/5/2021	0	1	0
48390	PROVIDER PPI, LLC -  702156	63739059110	5/5/2021	0	21	0
61657	PANDION OPTIMIZATION ALLIANCE -  NY0029	63739059110	5/5/2021	0	2	0

why does incidents have AA8765 and GA2038 included? none of the fill rates for those health systems on RxSpend Export are between 0,.5





-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [PriceDisruptions].[BuildRawInvoices]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

DELETE [PriceDisruptions].[RawInvoices];

insert into [PriceDisruptions].[RawInvoices]
           ([Ndc]
           ,[QuantityOrdered]
           ,[InvoicePrice]
           ,[TotalSpend]
           ,[TotalUnits]
           ,[ContractNumber]
           ,[HealthSystemId]
           ,[FacilityState]
           ,[FMonth]
           ,[Manufacturer]
           ,[DrugName]
           ,[PricingKey]
           ,[IsGenericDrug]
           ,[DrugStrength]
           ,[DrugId]
           ,[Wac]
           ,[GpiName]
           ,[InvoiceDateString]
           ,[D_Wholesaler]
           ,[DaysAgo]
           ,[PotentialSpend]
           ,[FillRate]
           ,[MissingDollars]
           ,[MissingUnits]
           ,[Equ_MaxWac]
           ,[AvgPrice])
SELECT
       i.[Ndc]
      ,i.[QuantityOrdered]
      ,i.[InvoicePrice]
      ,i.[TotalSpend]
      ,i.[TotalUnits]
      ,i.[ContractNumber]
      ,i.[HealthSystemId]
      ,i.[FacilityState]
      ,i.[FMonth]
      ,i.[Manufacturer]
      ,i.[DrugName]
      ,i.[PricingKey]
      ,i.[IsGenericDrug]
      ,i.[DrugStrength]
      ,i.[DrugId]
      ,i.[Wac]
      ,i.[GpiName]
      ,i.[InvoiceDateString]
      ,i.[D_Wholesaler]
      ,i.[DaysAgo]
	, i.quantityordered * i.invoiceprice as PotentialSpend
	, CASE WHEN quantityordered != 0 THEN CAST(i.totalunits AS DECIMAL(8,2))/CAST(quantityordered AS DECIMAL(8,2)) 
	           ELSE CAST(0 AS DECIMAL(8,2)) END AS FillRate
	, (i.quantityordered * i.invoiceprice) - i.TotalSpend AS MissingDollars
	, i.quantityordered - i.totalunits AS MissingUnits
	, pk.equ_maxwac
	, ap.avgprice
FROM [PriceDisruptions].[Transform] i
	LEFT JOIN [PriceDisruptions].[AvgPrices] ap 
		ON i.ndc = ap.ndc
	LEFT JOIN [PriceDisruptions].[WacPricekey] pk 
		ON i.pricingkey = pk.pricingkey 
	   AND i.isgenericdrug = pk.isgenericdrug;



END




	, CASE WHEN quantityordered != 0 THEN CAST(i.totalunits AS DECIMAL(8,2))/CAST(quantityordered AS DECIMAL(8,2)) ELSE CAST(0 AS DECIMAL(8,2)) END AS FillRate
	, (i.quantityordered * i.invoiceprice) - i.TotalSpend AS MissingDollars
	, i.quantityordered - i.totalunits AS MissingUnits
	, pk.equ_maxwac
	, ap.avgprice
FROM [PriceDisruptions].[Transform] i
	LEFT JOIN [PriceDisruptions].[AvgPrices] ap 
		ON i.ndc = ap.ndc
	LEFT JOIN [PriceDisruptions].[WacPricekey] pk 
		ON i.pricingkey = pk.pricingkey 
	   AND i.isgenericdrug = pk.isgenericdrug;

Scaling up azure db:
====================
@concat('https://management.azure.com/subscriptions/
d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/ITEMMASTER-Stg/providers/Microsoft.Sql/
servers/itemmasterstgsqlserverpre/databases/',pipeline().parameters.datasetGuid,'?api-version=2017-10-01-preview')


https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/CognitiveRx-PROD/providers/Microsoft.Sql/servers/sqlcogrxproditemmaster/databases/sqldbCogRxProdItemMaster?api-version=2017-10-01-preview


*Summary:* Arun's investigation in COGRX-665 showed that 

=======> Short $ is currently calculated as (quantity ordered * invoice price) - total spend. 

This is then summed for the NDC. The business would like to change this logic to use the Avg Invoice Price and Short Units details that are already calculated and displayed on the UI. This way users can see it tie out on the screen.
 
====>  Change Short $ calculation to = Avg Invoice Price * Short Units 



i.[MissingDollars]  - $ logic 

Changes required ===> [PriceDisruptions].[BuildRawInvoices]
				 ===> MissingUnits
				 ===> [PriceDisruptions].[BuildIncidentsNdc]
				 
				 (SUM(missingdollars) as missingdollars, SUM(missingunits) as missingunits)
NDC for testing - 00378668910

NewChanges

ALTER TABLE NationalWholeSaler.PriceDisruptions.IncidentsNdc ADD MissingDollarsEnhanced money NULL;

[PriceDisruptions].[BuildIncidentsNdc] - changes done.
[PriceDisruptions].[BuildIncidentsGpi]
[PriceDisruptions].[BuildIncidentsGpiMfr]



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [PriceDisruptions].[BuildPriceDisruptions] @StartDate datetime, @ReportedDate datetime
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--declare @ReportedDate datetime = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0);

declare @StartRun datetime;
declare @EndRun datetime;

--select @ReportedDate
	set @StartRun = getdate()

	exec [PriceDisruptions].[BuildWacPricekey]

	exec [PriceDisruptions].[BuildTransform] @StartDate, @ReportedDate

	exec [PriceDisruptions].[BuildAvgPrices]

	exec [PriceDisruptions].[BuildRawInvoices]

	exec [PriceDisruptions].[BuildFilledUnitsGpi]

	exec [PriceDisruptions].[BuildContractCount]

	exec [PriceDisruptions].[BuildIncidentsGpi] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsNdc] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsGpiMfr] @ReportedDate

	exec [PriceDisruptions].[BuildResultsGpi] @ReportedDate

	EXEC [PriceDisruptions].[BuildResultsNdc] @ReportedDate

	set @EndRun = getdate()

	insert into [dbo].[TempHistoryLog]
	([Reported], [StartDate], [EndDate], [StartRun], [EndRun])
	values
	(@ReportedDate, @StartDate, @ReportedDate, @StartRun, @EndRun)

END

Navita meeting

Update supplier table with mfr	[DailyMaintinance].[UpdateSupplierWithMfr]











-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DailyMaintinance].[UpdateSupplierWithMfr]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  MERGE [dbo].[Supplier] AS target
  USING (select distinct m.[MfrName] 'SupplierName',
                         3 suppliertypeid, 
						 m.mfrid
		 from pharmacyitem pi
			inner join Manufacturer m
				on pi.MfrId = m.MfrId) AS source
  ON (target.mfrid = source.mfrid
   and target.suppliertypeid = source.suppliertypeid)
  WHEN MATCHED THEN
      UPDATE SET SupplierName = source.SupplierName
  WHEN NOT MATCHED THEN
      INSERT (SupplierName,SupplierTypeId,mfrid)
      VALUES (source.SupplierName,source.SupplierTypeId, source.mfrid);

END

[Integrations].[InsertSalesRecordsUsingPremier]



/premierdata/WholeSaleData



('Gabapentin','Insulin Glargine','Betamethasone Sod Phosphate & Acetate','Cyclopentolate HCl',
'Pantoprazole Sodium','Protamine Sulfate','Magnesium Sulfate','Propofol','Bupivacaine w/ Epinephrine',
'Multiple Vitamin','Insulin Lispro','Enoxaparin Sodium','Losartan Potassium','Leuprolide Acetate',
'Lidocaine HCl (Local Anesth.)','Loperamide HCl','Lidocaine w/ Epinephrine','Lisinopril',
'Bumetanide','Hydromorphone HCl') 

BuyInPackagePrice  ===> DrugPredPipeline.tmp_buy_in_recommendations

calling pipeline of other datafactory using api:
===================================================
https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/CognitiveRx-PROD/providers/Microsoft.DataFactory/factories/adf-ItemMasterDataSync-prod/pipelines/1_SyncItemMasterCognativeRx/createRun?api-version=2018-06-01
adf-ItemMaster-MasterData-Receive-prod


%fs
ls dbfs:/config/price_pred_config.ini     
#/dbfs/config/price_pred_config.r


NationalPharmacyItemPrice
BuyInPackagePrice - DrugPredPipeline.tmp_price_predictions



buyins quarterly impact
ndc filled units logic investigation and data discrepancy
package price

adf-ItemMasterDataSync-prod/SyncItemMasterCognativeRxNationalNdcPricePrediction/



Databricks learning:
================================
Microsoft Windows [Version 10.0.18363.1556]
(c) 2019 Microsoft Corporation. All rights reserved.

E:\akenned2>python
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>
KeyboardInterrupt
>>> ^D
KeyboardInterrupt
>>> ^X
  File "<stdin>", line 1
    
    ^
SyntaxError: invalid syntax
>>>  # create new temp table with customer sample
>>>   lsql = """
  File "<stdin>", line 1
    lsql = """
IndentationError: unexpected indent
>>>     CREATE TABLE DrugPredPipeline.tmp_cust_item_sample AS
  File "<stdin>", line 1
    CREATE TABLE DrugPredPipeline.tmp_cust_item_sample AS
IndentationError: unexpected indent
>>>     SELECT ci.ItemId
  File "<stdin>", line 1
    SELECT ci.ItemId
IndentationError: unexpected indent
>>>       FROM DrugPredPipeline.CustomerItem ci
  File "<stdin>", line 1
    FROM DrugPredPipeline.CustomerItem ci
IndentationError: unexpected indent
>>>      WHERE ci.DefSubInv in ('MAIN', 'FRIDGE', 'SECURE')
  File "<stdin>", line 1
    WHERE ci.DefSubInv in ('MAIN', 'FRIDGE', 'SECURE')
IndentationError: unexpected indent
>>>        AND NOT (ci.DefWareHouseLocator in ('999.99.99', '900.99.99', '800.99.98'))
  File "<stdin>", line 1
    AND NOT (ci.DefWareHouseLocator in ('999.99.99', '900.99.99', '800.99.98'))
IndentationError: unexpected indent
>>>        AND ci.ClientItemStatus = 'Active'
  File "<stdin>", line 1
    AND ci.ClientItemStatus = 'Active'
IndentationError: unexpected indent
>>>        AND ci.ItemId IS NOT NULLChargeCdmNdcXref
  File "<stdin>", line 1
    AND ci.ItemId IS NOT NULL
IndentationError: unexpected indent
>>>        AND ci.ClientId = 1
  File "<stdin>", line 1
    AND ci.ClientId = 1
IndentationError: unexpected indent
>>>     """
  File "<stdin>", line 1
    """
IndentationError: unexpected indent
>>> quit
Use quit() or Ctrl-Z plus Return to exit
>>> ^Z


E:\akenned2>pip install databricks-cli
Collecting databricks-cli
  Downloading databricks-cli-0.14.3.tar.gz (54 kB)
     |████████████████████████████████| 54 kB 983 kB/s
Collecting click>=6.7
  Downloading click-8.0.1-py3-none-any.whl (97 kB)
     |████████████████████████████████| 97 kB 2.3 MB/s
Collecting requests>=2.17.3
  Downloading requests-2.25.1-py2.py3-none-any.whl (61 kB)
     |████████████████████████████████| 61 kB 4.0 MB/s
Collecting tabulate>=0.7.7
  Downloading tabulate-0.8.9-py3-none-any.whl (25 kB)
Collecting six>=1.10.0
  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting colorama
  Downloading colorama-0.4.4-py2.py3-none-any.whl (16 kB)
Collecting idna<3,>=2.5
  Downloading idna-2.10-py2.py3-none-any.whl (58 kB)
     |████████████████████████████████| 58 kB 4.1 MB/s
Collecting chardet<5,>=3.0.2
  Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)
     |████████████████████████████████| 178 kB 6.8 MB/s
Collecting certifi>=2017.4.17
  Downloading certifi-2021.5.30-py2.py3-none-any.whl (145 kB)
     |████████████████████████████████| 145 kB 6.4 MB/s
Collecting urllib3<1.27,>=1.21.1
  Downloading urllib3-1.26.5-py2.py3-none-any.whl (138 kB)
     |████████████████████████████████| 138 kB ...
Using legacy 'setup.py install' for databricks-cli, since package 'wheel' is not installed.
Installing collected packages: urllib3, idna, colorama, chardet, certifi, tabulate, six, requests, click, databricks-cli
    Running setup.py install for databricks-cli ... done
Successfully installed certifi-2021.5.30 chardet-4.0.0 click-8.0.1 colorama-0.4.4 databricks-cli-0.14.3 idna-2.10 requests-2.25.1 six-1.16.0 tabulate-0.8.9 urllib3-1.26.5
WARNING: You are using pip version 21.1.1; however, version 21.1.2 is available.
You should consider upgrading via the 'e:\akenned2\appdata\local\programs\python\python39\python.exe -m pip install --upgrade pip' command.

E:\akenned2>databricks
Usage: databricks [OPTIONS] COMMAND [ARGS]...

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  cluster-policies  Utility to interact with Databricks cluster policies.
  clusters          Utility to interact with Databricks clusters.
  configure         Configures host and authentication info for the CLI.
  fs                Utility to interact with DBFS.
  groups            Utility to interact with Databricks groups.
  instance-pools    Utility to interact with Databricks instance pools.
  jobs              Utility to interact with jobs.
  libraries         Utility to interact with libraries.
  pipelines         Utility to interact with the Databricks Delta Pipelines.
  runs              Utility to interact with the jobs runs.
  secrets           Utility to interact with Databricks secret API.
  stack             [Beta] Utility to deploy and download Databricks resource
                    stacks.
  tokens            Utility to interact with Databricks tokens.
  workspace         Utility to interact with the Databricks workspace.

E:\akenned2>databricks configure --token
Databricks Host (should begin with https://): https://adb-3221342434475318.18.azuredatabricks.net/
Token:

E:\akenned2>databricks workspace ls
Users
Shared
Pipelines
Repos

E:\akenned2>databricks cluster list
Usage: databricks [OPTIONS] COMMAND [ARGS]...
Try 'databricks -h' for help.

Error: No such command 'cluster'.

E:\akenned2>databricks clusters list
0621-103945-manic558  AJM_ML_Basic_01 (clone)   RUNNING
0405-135601-bouts593  AJM_ML_HighPerformance    TERMINATED
1229-111141-lobe165   AJM_ML_Basic              TERMINATED
0428-171713-nigh586   AJM_ML_HighPerformance_2  TERMINATED

E:\akenned2>databricks clusters get cluster-id 0621-103945-manic558
Error: Missing None. One of ['cluster-id', 'cluster-name'] must be provided.

E:\akenned2>databricks fs cat dbfs:/config/price_pred_config.r

E:\akenned2>databricks clusters get --cluster-id 0621-103945-manic558
{
  "cluster_id": "0621-103945-manic558",
  "driver": {
    "public_dns": "40.76.76.58",
    "node_id": "82fe42b063f34476b61a7bb7aa516a92",
    "instance_id": "8cb7391348334bd7994d63c693a4cf89",
    "start_timestamp": 1624430330586,
    "host_private_ip": "10.139.0.5",
    "private_ip": "10.139.64.5"
  },
  "executors": [
    {
      "public_dns": "40.87.81.248",
      "node_id": "60b9913dd8ff4f5fbd0ad9971dbe85db",
      "instance_id": "e726304966424500bbf32579fee4a076",
      "start_timestamp": 1624430330550,
      "host_private_ip": "10.139.0.6",
      "private_ip": "10.139.64.6"
    },
    {
      "public_dns": "40.87.81.122",
      "node_id": "8c466af084bd49389299f052cf181ea1",
      "instance_id": "157359fd3d8549dd92c2c86e61db940e",
      "start_timestamp": 1624430330568,
      "host_private_ip": "10.139.0.4",
      "private_ip": "10.139.64.4"
    }
  ],
  "spark_context_id": 11757507384169798,
  "jdbc_port": 10000,
  "cluster_name": "AJM_ML_Basic_01 (clone)",
  "spark_version": "8.1.x-scala2.12",
  "spark_conf": {
    "spark.databricks.delta.preview.enabled": "true",
    "spark.databricks.conda.condaMagic.enabled": "true",
    "spark.sql.parquet.cacheMetadata": "false",
    "spark.rpc.message.maxSize": "1024"
  },
  "node_type_id": "Standard_DS5_v2",
  "driver_node_type_id": "Standard_DS5_v2",
  "spark_env_vars": {
    "DEVSTAGEPRODIND": "prod"
  },
  "autotermination_minutes": 60,
  "enable_elastic_disk": true,
  "disk_spec": {},
  "cluster_source": "UI",
  "enable_local_disk_encryption": false,
  "azure_attributes": {
    "first_on_demand": 1,
    "availability": "ON_DEMAND_AZURE",
    "spot_bid_max_price": -1.0
  },
  "instance_source": {
    "node_type_id": "Standard_DS5_v2"
  },
  "driver_instance_source": {
    "node_type_id": "Standard_DS5_v2"
  },
  "state": "RUNNING",
  "state_message": "",
  "start_time": 1624271985583,
  "last_state_loss_time": 1624430391016,
  "autoscale": {
    "min_workers": 2,
    "max_workers": 8
  },
  "cluster_memory_mb": 172032,
  "cluster_cores": 48.0,
  "default_tags": {
    "Vendor": "Databricks",
    "Creator": "aravindan_kennedy@premierinc.com",
    "ClusterName": "AJM_ML_Basic_01 (clone)",
    "ClusterId": "0621-103945-manic558"
  },
  "creator_user_name": "aravindan_kennedy@premierinc.com",
  "init_scripts_safe_mode": false
}

E:\akenned2>
E:\akenned2>
E:\akenned2>databricks workspace -h
Usage: databricks workspace [OPTIONS] COMMAND [ARGS]...

  Utility to interact with the Databricks workspace. Workspace paths must be
  absolute and be prefixed with `/`.

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  delete      Deletes objects from the Databricks workspace. rm and delete are
              synonyms.
  export      Exports a file from the Databricks workspace.
  export_dir  Recursively exports a directory from the Databricks workspace.
  import      Imports a file from local to the Databricks workspace.
  import_dir  Recursively imports a directory to the Databricks workspace.
  list        List objects in the Databricks Workspace. ls and list are
              synonyms.
  ls          List objects in the Databricks Workspace. ls and list are
              synonyms.
  mkdirs      Make directories in the Databricks Workspace.
  rm          Deletes objects from the Databricks workspace. rm and delete are
              synonyms.

E:\akenned2>
E:\akenned2>databricks clusters delete --cluster-id 0621-103945-manic558

E:\akenned2>databricks clusters restart --cluster-id 0621-103945-manic558
Error: b'{"error_code":"INVALID_STATE","message":"Cluster 0621-103945-manic558 is in unexpected state Terminated."}'

E:\akenned2>databricks clusters start --cluster-id 0621-103945-manic558

E:\akenned2>databricks clusters list
0405-135601-bouts593  AJM_ML_HighPerformance    RUNNING
0621-103945-manic558  AJM_ML_Basic_01 (clone)   PENDING
1229-111141-lobe165   AJM_ML_Basic              TERMINATED
0428-171713-nigh586   AJM_ML_HighPerformance_2  TERMINATED

E:\akenned2>databricks workspaces list
Usage: databricks [OPTIONS] COMMAND [ARGS]...
Try 'databricks -h' for help.

Error: No such command 'workspaces'.

E:\akenned2>databricks workspaces -h
Usage: databricks [OPTIONS] COMMAND [ARGS]...
Try 'databricks -h' for help.

Error: No such command 'workspaces'.

E:\akenned2>databricks workspace list
Repos
Users
Shared
Pipelines

E:\akenned2>databricks -h
Usage: databricks [OPTIONS] COMMAND [ARGS]...

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  cluster-policies  Utility to interact with Databricks cluster policies.
  clusters          Utility to interact with Databricks clusters.
  configure         Configures host and authentication info for the CLI.
  fs                Utility to interact with DBFS.
  groups            Utility to interact with Databricks groups.
  instance-pools    Utility to interact with Databricks instance pools.
  jobs              Utility to interact with jobs.
  libraries         Utility to interact with libraries.
  pipelines         Utility to interact with the Databricks Delta Pipelines.
  runs              Utility to interact with the jobs runs.
  secrets           Utility to interact with Databricks secret API.
  stack             [Beta] Utility to deploy and download Databricks resource
                    stacks.
  tokens            Utility to interact with Databricks tokens.
  workspace         Utility to interact with the Databricks workspace.

E:\akenned2>databricks secrets list
Usage: databricks secrets list [OPTIONS]
Try 'databricks secrets list -h' for help.

Error: Missing option '--scope'.

E:\akenned2>databricks secrets -h
Usage: databricks secrets [OPTIONS] COMMAND [ARGS]...

  Utility to interact with secret API.

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  create-scope  Creates a secret scope.
  delete        Deletes a secret.
  delete-acl    Deletes an access control rule for a principal.
  delete-scope  Deletes a secret scope.
  get-acl       Gets the details for an access control rule.
  list          Lists all the secrets in a scope.
  list-acls     Lists all access control rules for a given secret scope.
  list-scopes   Lists all secret scopes.
  put           Puts a secret in a scope. "write" is an alias for "put".
  put-acl       Creates or overwrites an access control rule for a principal
                applied to a given secret scope. "write-acl" is an alias for
                "put-acl".
  write         Puts a secret in a scope. "write" is an alias for "put".
  write-acl     Creates or overwrites an access control rule for a principal
                applied to a given secret scope. "write-acl" is an alias for
                "put-acl".

E:\akenned2>databricks secrets list
Usage: databricks secrets list [OPTIONS]
Try 'databricks secrets list -h' for help.

Error: Missing option '--scope'.

E:\akenned2>databricks secrets list -h
Usage: databricks secrets list [OPTIONS]

  Lists the secret keys that are stored at this scope. Also lists the last
  updated timestamp (UNIX time in milliseconds) if available.

Options:
  --scope SCOPE    The name of the secret scope.  [required]
  --output FORMAT  can be "JSON" or "TABLE". Set to TABLE by default.
  --debug          Debug Mode. Shows full stack trace on error.
  --profile TEXT   CLI connection profile to use. The default profile is
                   "DEFAULT".
  -h, --help       Show this message and exit.

E:\akenned2>databricks secrets list scope
Usage: databricks secrets list [OPTIONS]
Try 'databricks secrets list -h' for help.

Error: Missing option '--scope'.

E:\akenned2>databricks secrets list --scope
Error: Option '--scope' requires an argument.

E:\akenned2>databricks secrets list --scope -h
Error: b'{"error_code":"RESOURCE_DOES_NOT_EXIST","message":"Scope -h does not exist!"}'

E:\akenned2>databricks secrets list --scope all
Error: b'{"error_code":"RESOURCE_DOES_NOT_EXIST","message":"Scope all does not exist!"}'

E:\akenned2>databricks secrets list-scopes
Scope     Backend         KeyVault URL
--------  --------------  --------------------------------------------
pharmacy  AZURE_KEYVAULT  https://kv-cognitiverx-prod.vault.azure.net/

E:\akenned2>databricks secrets list --scope pharmacy
Key name                                       Last updated
-------------------------------------------  --------------
CogRx-DemoRead                                1622471501000
DS-PRODazureTenantID                          1609334701000
DS-PRODcogRXdbPWD                             1609322192000
DS-PRODcogRXdbPWD-Demo                        1616058284000
DS-PRODcogWBPWD                               1609334643000
DS-PRODItemMasterdbPWD                        1609334672000
Secret-CogRX-BatchAcct                        1608688980000
Secret-CogRX-DB-CommonSpirit                  1608321482000
Secret-CogRX-DB-Demo                          1608566597000
Secret-CogRX-DB-Fairview                      1608809842000
Secret-CogRX-DB-northwell                     1607915485000
Secret-CogRX-DB-stluke                        1608523096000
Secret-CogRX-DB-upmc                          1608321409000
Secret-CogRX-StorageAcct                      1608662794000
Secret-ItemMaster-DB-ItemMaster               1622472975000
Secret-ItemMaster-DB-MasterDataSync           1607968911000
Secret-ItemMaster-DB-NationalWholesaler       1607968948000
Secret-ItemMaster-DB-NationalWholesaler-Dev   1619727263000
SecretName-SPClientId                         1611249440000
SecretName-SPSecret                           1611249466000
SecretName-TenantId                           1611248931000

E:\akenned2>


Server=tcp:sqlcogrxproddemo.database.windows.net;Initial Catalog=sqldbCogRxProdDemo;Persist Security Info=False;UserID=CogRX_Demo;Password=s7C9bHCf3xMVIVXi23Me;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;


			SELECT
                 e.BuyInExclusionId
	            ,e.ItemId
	            ,p.Ndc
	            ,p.ItemDescription
                ,CASE
					WHEN CHARINDEX('Unknown - ', cm.CustomerName) > 0 THEN cm.CustomerName					
					ELSE cm.CustomerName + ' - ' + cm.AccountNumber 
					END AS Facility
                ,e.DateAdded
				,e.ExclusionEndDate
                ,CASE
                    WHEN e.ExclusionEndDate IS NULL OR e.ExclusionEndDate > GETDATE() 
                    THEN 1
                    ELSE 0
                END AS IsActive
            FROM App.BuyInExclusion e
				inner join dbo.PharmacyItem p
					ON e.ItemId = p.ItemId
            left join Customer cm on cm.customerid = e.customerid
			WHERE e.ClientId = @clientId
            ORDER BY IsActive desc, e.ExclusionEndDate desc, e.DateAdded desc";
			
			
new terminal
npm run start


adf-ItemMaster-MasterData-Receive-prod --->adf-ItemMaster-MasterData-Receive-prod--->NationPricePredictionsToMaster
-->adf-ItemMasterDataSync-prod-->SyncItemMasterCognativeRxNationalNdcPricePrediction


https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/CognitiveRx-PROD/providers/Microsoft.DataFactory/factories/adf-ItemMasterDataSync-prod/pipelines/SyncItemMasterCognativeRxNationalNdcPricePrediction/createRun?api-version=2018-06-01


VB code changes:
=================
point to the right branch(dev) and give pull origin and then reload the vb studio
desktop github
pull origin
create a branch
publish the branch
make cahnges and commit
push origin
pull request

Price disruption flow:
============================


	exec [PriceDisruptions].[BuildWacPricekey]

	exec [PriceDisruptions].[BuildTransform] @StartDate, @ReportedDate

	exec [PriceDisruptions].[BuildAvgPrices]

	exec [PriceDisruptions].[BuildRawInvoices]

	exec [PriceDisruptions].[BuildFilledUnitsGpi]

	exec [PriceDisruptions].[BuildContractCount]

	exec [PriceDisruptions].[BuildIncidentsGpi] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsNdc] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsGpiMfr] @ReportedDate

	exec [PriceDisruptions].[BuildResultsGpi] @ReportedDate

	EXEC [PriceDisruptions].[BuildResultsNdc] @ReportedDate
	
	
equivalents Analysis:
======================

ndc -73796027854



            select 
                 pie.ItemId
		        ,pie.ItemDescription
		        ,pie.Ndc
		        ,pie.Ndc11
		        ,pie.Manufacturer
		        ,po.LastTimePurchased
                ,CAST(pie.CasePack as varchar(7)) as 'CasePack'
		        ,case when pis.ShortageCount > 0 then 1 else 0 end OnShortage
		        ,cii.QuantityOnHand OnHand
		        ,st.Usage90
		        ,cip340b.Price340b
		        ,cip.MaxPrice
		        ,cip.MinPrice
		        ,cip.ChannelCount
            into #searchResults
	        from PharmacyItem pi
		        --join PharmacyItem pie on pie.TherapeuticEqKey = pi.TherapeuticEqKey
		        join PharmacyItem pie on pi.PharmaceuticalEqKey = pie.PharmaceuticalEqKey
		        left join (
			        select pis.ItemId
				        ,count(1) ShortageCount
			        from PharmacyItemShortage pis
			        where pis.Status = 'S'
			        group by pis.ItemId
		        ) pis on pis.ItemId = pie.ItemId
		        left join (
			        select po.ItemId
                        ,po.ClientId
				        ,max(po.ApprovalDateTime) LastTimePurchased
			        from PurchaseOrder po
			        group by po.ItemId
                        ,po.ClientId
		        ) po on pie.ItemId = po.ItemId
		        left join (
                    select cii.ItemId
	                    ,cii.ClientId
	                    ,sum(cii.QuantityOnHand) QuantityOnHand
                    from CustomerItemInventory cii
                        where cii.InventoryTypeId < 4 --Only include items where inventory type is not other
                    group by cii.ItemId
	                    ,cii.ClientId
                ) cii on cii.ItemId = pie.ItemId
		        left join (
			        select st.ItemId
				        ,st.ClientId
				        ,sum(st.[90DayUsageQty]) Usage90
			        from SalesTotals st
			        group by st.ItemId
				        ,st.ClientId
		        ) st on st.ItemId = pie.ItemId
		        left join (
			        select cip.ClientId
				        ,cip.ItemId
				        ,max(cip.PriceAmount) Price340b
			        from CustomerItemPricing cip
			        where cip.Status = 'A'
				        and cip.PriceListId = 2
			        group by cip.ClientId
				        ,cip.ItemId
		        ) cip340b on cip340b.ItemId = pie.ItemId
		        left join (
			        select cip.ItemId
				        ,cip.ClientId
				        ,max(cip.PriceAmount) MaxPrice
			            ,min(cip.PriceAmount) MinPrice
	                    ,count(case when cip.PriceListId <> 3 then 1 else null end) + 
	                    count(distinct case when cip.PriceListId = 3 then cip.CpSupplierId else null end) ChannelCount
			        from CustomerItemPricing cip
			        where cip.PriceListId = 3
                        and cip.Status = 'A'
			        group by cip.ItemId
				        ,cip.ClientId
		        ) cip on cip.ItemId = pie.ItemId
		        left join CustomerItem ci on ci.ItemId = pie.ItemId
	        where pi.Ndc = @ndc --Param
		        and pi.Ndc != pie.Ndc
                and (po.ClientId is null or po.ClientId = @clientId) --Param
		        and (cii.ClientId is null or cii.ClientId = @clientId) --Param
		        and (st.ClientId is null or st.ClientId = @clientId) --Param
		        and (cip.ClientId is null or cip.ClientId = @clientId) --Param
		        and (ci.ClientId is null or ci.ClientId = @clientId) --Param
		        and (@filterToClientCatalog = 0 or ci.CustomerItemId is not null) --Param
                and (@filterTohas340bPrice = 0 or cip340b.ItemId is not null) --Param
                and (@filterToInventory = 0 or cii.QuantityOnHand > 0) --Param
                and (@filterToChannels = 0 or cip.ChannelCount > 0) --Param
                and (@filterToClientActive = 0 or ci.ClientItemStatus = 'Active')
                and (@filterToClientInactive = 0 or ci.ClientItemStatus = 'Inactive')
                and (@filterToShortage is null or 
                    (@filterToShortage=1 and pis.ShortageCount > 0) or
                    (@filterToShortage=0 and (pis.ShortageCount = 0 or pis.ShortageCount is null)))
                 ;

		with filteredResults as (
			select fr.ItemId
				 , fr.ItemDescription
				 , fr.Ndc
				 , fr.Ndc11
				 , fr.Manufacturer
				 , fr.LastTimePurchased
				 , fr.CasePack
				 , fr.OnShortage
				 , fr.OnHand
				 , fr.Usage90
				 , fr.Price340b
				 , fr.MaxPrice
				 , fr.MinPrice
				 , fr.ChannelCount
			from (
				select sr.ItemId
					 , sr.ItemDescription
					 , sr.Ndc
					 , sr.Ndc11
					 , sr.Manufacturer
					 , sr.LastTimePurchased
					 , sr.CasePack
					 , sr.OnShortage
					 , sr.OnHand
					 , sr.Usage90
					 , sr.Price340b
					 , sr.MaxPrice
					 , sr.MinPrice
					 , sr.ChannelCount
					 from #searchResults sr
			) fr
			where 1 = 1 
			
		)
		
        select fr.ItemId
			 , fr.ItemDescription
			 , fr.Ndc
			 , fr.Ndc11
			 , fr.Manufacturer
			 , fr.LastTimePurchased
			 , fr.CasePack
			 , fr.OnShortage
			 , fr.OnHand
			 , fr.Usage90
			 , fr.Price340b
			 , fr.MaxPrice
			 , fr.MinPrice
			 , fr.ChannelCount
			 , tc.SearchResultCount
        from filteredResults fr
	        join (select count(1) SearchResultCount from filteredResults) tc on 1 = 1
        order by --Param
	        case when @sortColumn = 'ItemDescription' and @sortDirection = 'asc' then fr.ItemDescription end,
	        case when @sortColumn = 'ItemDescription' and @sortDirection = 'desc' then fr.ItemDescription end desc,
	        case when @sortColumn = 'Ndc' and @sortDirection = 'asc' then fr.Ndc end,
	        case when @sortColumn = 'Ndc' and @sortDirection = 'desc' then fr.Ndc end desc,
	        case when @sortColumn = 'Ndc11' and @sortDirection = 'asc' then fr.Ndc11 end,
	        case when @sortColumn = 'Ndc11' and @sortDirection = 'desc' then fr.Ndc11 end desc,
	        case when @sortColumn = 'Manufacturer' and @sortDirection = 'asc' then fr.Manufacturer end,
	        case when @sortColumn = 'Manufacturer' and @sortDirection = 'desc' then fr.Manufacturer end desc,
	        case when @sortColumn = 'LastTimePurchased' and @sortDirection = 'asc' then fr.LastTimePurchased end,
	        case when @sortColumn = 'LastTimePurchased' and @sortDirection = 'desc' then fr.LastTimePurchased end desc,
	        case when @sortColumn = 'OnShortage' and @sortDirection = 'asc' then fr.OnShortage end,
	        case when @sortColumn = 'OnShortage' and @sortDirection = 'desc' then fr.OnShortage end desc,
	        case when @sortColumn = 'OnHand' and @sortDirection = 'asc' then fr.OnHand end,
	        case when @sortColumn = 'OnHand' and @sortDirection = 'desc' then fr.OnHand end desc,
	        case when @sortColumn = 'Usage90' and @sortDirection = 'asc' then fr.Usage90 end,
	        case when @sortColumn = 'Usage90' and @sortDirection = 'desc' then fr.Usage90 end desc,
	        case when @sortColumn = 'Price340b' and @sortDirection = 'asc' then fr.Price340b end,
	        case when @sortColumn = 'Price340b' and @sortDirection = 'desc' then fr.Price340b end desc,
	        case when @sortColumn = 'MaxPrice' and @sortDirection = 'asc' then fr.MaxPrice end,
	        case when @sortColumn = 'MaxPrice' and @sortDirection = 'desc' then fr.MaxPrice end desc,
	        case when @sortColumn = 'MinPrice' and @sortDirection = 'asc' then fr.MinPrice end,
	        case when @sortColumn = 'MinPrice' and @sortDirection = 'desc' then fr.MinPrice end desc,
	        case when @sortColumn = 'ChannelCount' and @sortDirection = 'asc' then fr.ChannelCount end,
	        case when @sortColumn = 'ChannelCount' and @sortDirection = 'desc' then fr.ChannelCount end desc,
	        case when @sortColumn = 'CasePack' and @sortDirection = 'asc' then fr.CasePack end,
	        case when @sortColumn = 'CasePack' and @sortDirection = 'desc' then fr.CasePack end desc
        offset @pageNumber * @pageSize rows --Param
        fetch next @pageSize rows only --Param ;
            
            select distinct pt.Manufacturer
            from (
	            select sr.Manufacturer
	            from #searchResults sr
	            ) 
	            pt;
				
				
				
				
		        @filterToClientCatalog 
                @filterTohas340bPrice 
                @filterToInventory  
                @filterToChannels 
                @filterToClientActive 
                @filterToClientInactive 
                @filterToShortage 
                @filterToShortage
                @filterToShortage
				
				
				







-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [DailyMaintinance].[RebuildPharmacyItemEqKey]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


update i
set i.[EqKey] =  [GPI] + '|' + 
       case when i.[OrangeBookId] is not null then o.[OrangeBookCode]  else '_' end + '|' + 
	   case when unitdoseId is not null then case when unitdoseId = 1 or UnitDoseId = 2 then '1' else '3' end else '_' end
from pharmacyitem i
  left join [ItemMaster].[OrangeBook] o
    on i.[OrangeBookId] = o.[OrangeBookId]



update i
set i.PricingKey = case when EqKey is not null then EqKey else cast(itemid as varchar(50)) end
from pharmacyitem i
  left join [ItemMaster].[OrangeBook] o
    on i.[OrangeBookId] = o.[OrangeBookId]


1. pharmaceutical key will be assigned with GPI values from pharmacy item table.
update i
  set i.PharmaceuticalEqKey  =  [GPI] 
from pharmacyitem i


Therapeutic key will be assigned with concatenation of GPI values,pipe symbol and then orangebook code by combining
pharmacy item and item master table on orangebook id

update i
  set  TherapeuticEqKey = [GPI] + '|' + o.[OrangeBookCode]
from pharmacyitem i
  left join [ItemMaster].[OrangeBook] o
    on i.[OrangeBookId] = o.[OrangeBookId]



Bio key will be assigned with DrugDescriptorId from pharmacy item table of GPI values,pipe symbol and then orangebook code by combining
pharmacy item and item master table on orangebook id
update i
  set   BioEqKey = cast([DrugDescriptorId] AS varchar(20))
from pharmacyitem i
  left join [ItemMaster].[BioEquivalenceCode] b
    on i.[BioEquivalenceId] = b.[BioEquivalenceId]
where [BioEquivalenceCode] = 'A'


update i
set i.[DirectEqKey] =  [GPI] + '|' + 
       case when i.[OrangeBookId] is not null then o.[OrangeBookCode]  else '_' end + '|' + 
	   case when i.PackageSize is not null then cast(i.PackageSize as varchar(25)) else '1' end
from pharmacyitem i
  left join [ItemMaster].[OrangeBook] o
    on i.[OrangeBookId] = o.[OrangeBookId]
	
	
PharmaceuticalEqKey -	GPI of the corresponding products from pharmacy item table
TherapeuticEqKey    -	Concatenation of GPI code from pharmacy item and orange book code from item master with a pipe symbol in between by joining on orangebook id
BioEqKey	        -  DrugDescriptorId(casting into varchar) is fetched by joining the item master and pharmacy item table on bioequivalence code and filtering bioequivalence code where the value is equal to A
DirectEqKey	        -  Concatenation of GPI code from pharmacy item , orange book code from item master and package size with a pipe symbol in between the fields by joining on orangebook id

CognitiveRx-Daily-Processes


adf-ItemMasterDataSync-prod/pipelines/1_SyncItemMasterCognativeRx/createRun?api-version=2018-06-01


po.ItemId,po.ClientId,max(po.ApprovalDateTime)


PharmacyItem,PharmacyItemShortage,PurchaseOrder,CustomerItemInventory,CustomerItemPricing
The Below listed critical fields are derived by joining the following table PharmacyItem,PharmacyItemShortage,PurchaseOrder,CustomerItemInventory,CustomerItemPricing,SalesTotals
							  Field details - From table
						      Item Description-PharmacyItem,	
							  NDC-PharmacyItem,
							  Supplier-PharmacyItem,
							  Last time purchased-PurchaseOrder,
							  Case pack-PharmacyItem
							  Shortage-PharmacyItemShortage,
							  90 Day Usage-SalesTotals,
							  340B price-CustomerItemPricing,
							  Min Price-CustomerItemPricing,
							  Max Price-CustomerItemPricing,
							  Wholesaler Count-CustomerItemPricing



The following critical fields NDC description, 

Hi Michale
Cogrx-715  Can you please sync up the changes from cogrx dev to  all client databases
table dbo.customer - New columns DEA is added
Stored Procedure - [Premier].[UpdateCustomersFromPremier]  (Merge statement updated with DEA column)

Navita Abinitio query
=======================

#!/bin/ksh
export PROJECT_NAME=rxspend
export APP_NAME=rxs
if [ $PHASE_NAME = 'dev' ]
then
  export SOURCE_DIR=/opt/app/abinitio-dev/gpo/source/rxspend
  echo "source_dir: $SOURCE_DIR"
elif [ $PHASE_NAME = 'qa' ]
then
  export SOURCE_DIR=/opt/app/abinitio-cost-qa/gpo/source/rxspend
  echo "source_dir: $SOURCE_DIR"
else
  export SOURCE_DIR=/opt/app/abinitio-cost-prod/gpo/source/rxspend
  echo "source_dir: $SOURCE_DIR"
fi

if [ ! -d $SOURCE_DIR ]
then
  SOURCE_DIR=$(dirname $0)
  SOURCE_DIR=$(echo $SOURCE_DIR/..)
fi

cd $SOURCE_DIR
. $SOURCE_DIR/ab_project_setup.ksh .
export PATH=$PATH:$AB_HOME/bin
cd -
export CURRENT_DATE=`date '+%Y%m%d'`
export PATH=$PATH:$AB_HOME/bin
YEAR=`date '+%Y'`
MONTH=`date '+%m'`
DAY=`date '+%d'`
TRIGGER_FILE=`date '+%Y%m%d''_test.done'`

#air sandbox run $MP/rxspend_Premier_Pensiamo_extract.mp
if [ $? -eq 0 ] && [ -f $SERIAL_RUN/PREMIER-*.txt ] 
then
        echo "Adding header to PREMIER-MMYYYY.txt files"
       export header=`cat $SERIAL_RUN/Pensiamo_header.dat` 
       for i in `ls $SERIAL_RUN/PREMIER-*.txt`
       do
             sed -i -e "1i $header" $i
             #mv $i $SHARE_COPY_PATH/pensiamo/
       done
        if [ $? -eq 0 ]
        then
                echo "Start copying PREMIER-MMYYYY.txt files to azure blob"
                /home/rkandasa/azcopy/azcopy copy $SERIAL_RUN'/PREMIER-*.txt' 'https://stcogrxexternalprod.blob.core.windows.net/premierdata/WholeSaleData/'$YEAR'/'$MONTH'/'$DAY'_1/?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2029-03-25T17:40:35Z&st=2021-03-25T09:40:35Z&spr=https&sig=azD%2FEkakoFshddcC9MMsklWOFeHem5X7xmWVx48R3pQ%3D'
                if [ $? -eq 0 ]
                then
                        echo "PREMIER-MMYYYY.txt files copied"
                        echo "Create & Copy trigger file to azure blob"
                        touch $SERIAL_RUN/$TRIGGER_FILE
                        /home/rkandasa/azcopy/azcopy copy $SERIAL_RUN'/'$TRIGGER_FILE 'https://stcogrxexternalprod.blob.core.windows.net/premierdata/WholeSaleData/?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2029-03-25T17:40:35Z&st=2021-03-25T09:40:35Z&spr=https&sig=azD%2FEkakoFshddcC9MMsklWOFeHem5X7xmWVx48R3pQ%3D'
                        echo "Trigger file copied"
                        rm $SERIAL_RUN/$TRIGGER_FILE
                fi
        fi
        #touch $SERIAL_RUN/SUCCESS_$CURRENT_DATE.txt
        #mv $SERIAL_RUN/SUCCESS_$CURRENT_DATE.txt $SHARE_COPY_PATH/pensiamo/
else
       echo "There is no PREMIER-MMYYYY.txt files available in $SERIAL_RUN"
       exit 0;
fi


'https://stcogrxexternalprod.blob.core.windows.net/premierdata/WholeSaleData/'$YEAR'/'$MONTH'/'$DAY'_1/?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2029-03-25T17:40:35Z&st=2021-03-25T09:40:35Z&spr=https&sig=azD%2FEkakoFshddcC9MMsklWOFeHem5X7xmWVx48R3pQ%3D'

'https://stcogrxexternalprod.blob.core.windows.net/premierdata/WholeSaleData/'$YEAR'/'$MONTH'/'$DAY'_1/?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-07T21:46:23Z&st=2021-07-07T13:46:23Z&spr=https&sig=XSK%2FZeS6E7W2UhKwKbRBaY0AJL%2BH5v7DVSNToKGQPj4%3D'


'https://cogrxpremierdatastore.blob.core.windows.net/premierdata/WholeSaleData/'$YEAR'/'$MONTH'/'$DAY'_1?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-07T21:46:23Z&st=2021-07-07T13:46:23Z&spr=https&sig=XSK%2FZeS6E7W2UhKwKbRBaY0AJL%2BH5v7DVSNToKGQPj4%3D'

Hi 

I will not be available for the standup call . Currently completed analaysis for query 1 of COGRX-851,will continue my analysis on the query 2 of the same ticket. No blockers


BlobEndpoint=https://cogrxpremierdatastore.blob.core.windows.net/;QueueEndpoint=https://cogrxpremierdatastore.queue.core.windows.net/;FileEndpoint=https://cogrxpremierdatastore.file.core.windows.net/;TableEndpoint=https://cogrxpremierdatastore.table.core.windows.net/;SharedAccessSignature=sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-30T23:03:39Z&st=2021-07-08T15:03:39Z&spr=https&sig=%2BuX8lo7Avdp%2F2bz4VFQwYZ48FVf9dXiABU3bGczDqtc%3D

?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-30T23:03:39Z&st=2021-07-08T15:03:39Z&spr=https&sig=%2BuX8lo7Avdp%2F2bz4VFQwYZ48FVf9dXiABU3bGczDqtc%3D

https://cogrxpremierdatastore.blob.core.windows.net/?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-30T23:03:39Z&st=2021-07-08T15:03:39Z&spr=https&sig=%2BuX8lo7Avdp%2F2bz4VFQwYZ48FVf9dXiABU3bGczDqtc%3D



DataScience details:
--------------------

check if the datafactory name is equal to adf-ItemMasterDataSync-prod

if equal then copy Predictive.NationalNdcPricePredictionRaw to truncate table [Predictive].[NationalNdcPricePredictionRaw]

pull up the key and load into all the app databases.
	step one - dataflow - national ndc price prediction -- NationalNdcPricePrediction_Target_ (national wholesaler to app databases)
					Secret-ItemMaster-DB-ItemMaster
					(itemmaster - table Predictive.NationalNdcPricePrediction to Predictive.NationalNdcPricePrediction)
	step two - Exec [Predictive].[DeployForNationalPredictiveRun]  - impacted table([Predictive].[NDCPricePredictions])
	step three - finally sending out notification using logic apps

 [Predictive].[NationalNdcPricePredictionRaw]
		
load process of [dbo].[NationalPharmacyItemPriceCurrent]
==========================================

ItemMaster-MasterData-Receive-Stg-Pre(DF) 
	CallItemMasterIntegrations(PL)
		WoltersKluwerFedGovItemPrice(Description)
				[Integrations].[MergeWoltersKluwerFedGovItemPrice]  (sp)
					calculations: npf.Unit_Price UnitPrice from [rawWK].[fgpfile_FederalGovernmentPricesFile]
													[rawWK].[fgpfile_FederalGovernmentPricesFile]
													[dbo].[PharmacyItem]
													[WoltersKluwer].[PriceTypeXref]
													
													the price comes from FGPfile from wk (LoadWoltersKluwerFedGovPricing(pl))
													
													 [Integrations].[MergeWoltersKluwerNationalItemPrice]
														unit price ,package price, extended unit price
														
				[Integrations].[MergeWoltersKluwerNationalItemPrice]  (sp)
													[rawWK].[mf2prc_NdcPriceFile]
													[dbo].[PharmacyItem]
													[WoltersKluwer].[PriceTypeXref]
													[WoltersKluwer].[AwpIndicator]
	using the above sp the following table [dbo].[NationalPharmacyItemPrice] is loaded and then further into 
	[dbo].[NationalPharmacyItemPriceCurrent]
		
load process of [dbo].[AspPriceAndLimits]
==========================================
		
LoadWoltersKluwerPaymentAllowanceLimitPartBv2 (PL)	---> activity name (pb2mcaf_MediSpanCustomizedFile)	
wolter kluwer (file - PB2MCAF)----->pb2mcaf_MediSpanCustomizedFile--->[rawWK].[pb2mcaf_MediSpanCustomizedFile] --> [dbo].[AspPriceAndLimits]
																	  [dbo].[PharmacyItem]
																	  
																	  
Jcode issue sql:
=================
declare @clientId as int = (
select
	ClientId
from
	client);

declare @jCode as varchar(10) = 'J0135';

SELECT
	JCode ,
	ClientId ,
	QuarterDate,
	PriceList ,
	CustomerId ,
	SUM(SalesQty) AS 'SalesQty' ,
	SUM(Cost) AS 'Cost' ,
	SUM(DispQty) AS 'DispQty'
FROM
	(
	SELECT
		ptg.PriceTypeGroupDescription AS 'PriceList' ,
		c.ClientId ,
		asp.QuarterDate ,
		c.CustomerId ,
		s.Qty AS 'SalesQty' ,
		s.Qty*s.UnitPrice AS 'Cost' ,
		asp.HcpcsCode AS 'JCode' ,
		asp.BillableUnitsPer11DigitNDC*s.Qty AS 'DispQty'
	FROM
		Sales s
	JOIN Customer c ON
		s.CustomerId = c.CustomerId
		AND s.ClientId = c.ClientId
		--If we ignore QuarterDate and join to CurrentRecord instead, we will always get sales data, but the price may not be as accurate as historical prices
		--first       JOIN AspPriceAndLimits asp ON asp.Ndc = s.Ndc  AND asp.QuarterDate = s.QuarterDate
		--              or (AspPriceAndLimits asp ON asp.Ndc = s.Ndc  AND asp.IsCurrentRecords = 1)
	JOIN AspPriceAndLimits asp ON
		CASE
			WHEN (asp.Ndc = s.Ndc) AND (asp.QuarterDate = s.QuarterDate) THEN 1
			WHEN (asp.Ndc = s.Ndc) AND (asp.IsCurrentRecords = 1) THEN 1
		END = 1
		--        JOIN AspPriceAndLimits asp ON asp.Ndc = s.Ndc  AND 							
		--				(CASE WHEN asp.QuarterDate = s.QuarterDate THEN 
		--				  WHEN asp.aIsCurrentRecords = 1 THEN
		--		END)
	JOIN PriceTypeGroup ptg ON
		ptg.PriceTypeGroupId = s.PriceTypeGroupId
	WHERE
		s.ClientId = @clientId
		and asp.HcpcsCode = @jCode ) TOTALS
GROUP BY
	JCode ,
	ClientId ,
	QuarterDate ,
	PriceList ,
	CustomerId
	
Secret-CogRX-DB-northwell
Secret-CogRX-DB-Demo

E:\akenned2>databricks fs cat dbfs:/config/price_pred_config.r


E:\akenned2>databricks
Usage: databricks [OPTIONS] COMMAND [ARGS]...

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  cluster-policies  Utility to interact with Databricks cluster policies.
  clusters          Utility to interact with Databricks clusters.
  configure         Configures host and authentication info for the CLI.
  fs                Utility to interact with DBFS.
  groups            Utility to interact with Databricks groups.
  instance-pools    Utility to interact with Databricks instance pools.
  jobs              Utility to interact with jobs.
  libraries         Utility to interact with libraries.
  pipelines         Utility to interact with the Databricks Delta Pipelines.
  runs              Utility to interact with the jobs runs.
  secrets           Utility to interact with Databricks secret API.
  stack             [Beta] Utility to deploy and download Databricks resource
                    stacks.
  tokens            Utility to interact with Databricks tokens.
  workspace         Utility to interact with the Databricks workspace.

E:\akenned2>databricks fs
Usage: databricks fs [OPTIONS] COMMAND [ARGS]...

  Utility to interact with DBFS.

  DBFS paths are all prefixed with dbfs:/. Local paths can be absolute or
  local.

Options:
  -v, --version   0.14.3
  --debug         Debug Mode. Shows full stack trace on error.
  --profile TEXT  CLI connection profile to use. The default profile is
                  "DEFAULT".
  -h, --help      Show this message and exit.

Commands:
  cat        Show the contents of a file.
  configure  Configures host and authentication info for the CLI.
  cp         Copy files to and from DBFS.
  ls         List files in DBFS.
  mkdirs     Make directories in DBFS.
  mv         Moves a file between two DBFS paths.
  rm         Remove files from dbfs.

E:\akenned2>databricks workspace export_dir
Usage: databricks workspace export_dir [OPTIONS] SOURCE_PATH TARGET_PATH
Try 'databricks workspace export_dir -h' for help.

Error: Missing argument 'SOURCE_PATH'.

E:\akenned2>databricks workspace export_dir -h
Usage: databricks workspace export_dir [OPTIONS] SOURCE_PATH TARGET_PATH

  Recursively exports a directory from the Databricks workspace.

  Only directories and notebooks are exported. Notebooks are always exported
  in the SOURCE format. Notebooks will also have the extension of .scala, .py,
  .sql, or .r appended depending on the language type.


E:\akenned2>databricks fs
Usage: databricks fs [OPTIONS] COMMAND [ARGS]...

  Utility to interact with DBFS.

  DBFS paths are all prefixed with dbfs:/. Local paths can be absolute or
  local.


Commands:
  cat        Show the contents of a file.
  configure  Configures host and authentication info for the CLI.
  cp         Copy files to and from DBFS.
  ls         List files in DBFS.
  mkdirs     Make directories in DBFS.
  mv         Moves a file between two DBFS paths.
  rm         Remove files from dbfs.


E:\akenned2>databricks fs cp dbfs:/config/base_config.r   E:\akenned2\Downloads

E:\akenned2>databricks fs cp dbfs:/config/price_pred_config.ini   E:\akenned2\Downloads

E:\akenned2>databricks fs cp dbfs:/config/price_pred_config.r   E:\akenned2\Downloads

E:\akenned2>

cogrx-854

Analysis details:

different - DF(adf-ItemMaster-FDA-Receive-prod)
	FdaProductCodeImportRaw is the pipeline which feed rawfda orangebook products--> next process [rawFDAProductCode].[ProductCode]

RawFda.OrangeBookProducts  (activity name - FdaOrangeBookProductsToSql)---- P(FdaOrangeBookFiles_Process) --- DF(adf-ItemMaster-FDA-Receive-prod)--source file products.txt


[dbo].[OrangeBookEquivalenceType] --

Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdMasterdataSync;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;


OrangeBookEquivalenceType_SingleSink_DF
itemmaster - [dbo].[OrangeBookEquivalenceType] and sink as ItemMaster.OrangeBookEquivalenceType

CREATE PROCEDURE [ItemMasterSync].[OrangeBookEquivalenceType] @OrangeBookEquivalenceType [ItemMasterSync].[OrangeBookEquivalenceTypeType] READONLY
AS
BEGIN
  MERGE [ItemMaster].[OrangeBookEquivalenceType] AS target
  USING @OrangeBookEquivalenceType AS source
  ON (target.[OrangeBookEquivalenceTypeId] = source.[OrangeBookEquivalenceTypeId])
  WHEN MATCHED THEN
      UPDATE SET [OrangeBookEquivalenceTypeDescription] = source.[OrangeBookEquivalenceTypeDescription] 
  WHEN NOT MATCHED THEN
      INSERT ([OrangeBookEquivalenceTypeId],[OrangeBookEquivalenceTypeDescription] )
      VALUES (source.[OrangeBookEquivalenceTypeId],source.[OrangeBookEquivalenceTypeDescription] );
END
[dbo].[OrangeBookEquivalenceType]


adf-ItemMaster-MasterData-Receive-prod
	ProcessWoltersKluwer calls below item master datasync datafactory
adf-ItemMasterDataSync-prod
	5_SyncItemMasterCognativeRxOrangeBook_Configurable

CREATE PROCEDURE [ItemMasterSync].[OrangeBook] @OrangeBook [ItemMasterSync].[OrangeBookType] READONLY
AS
BEGIN
  MERGE [ItemMaster].[OrangeBook] AS target
  USING @OrangeBook AS source
  ON (target.OrangeBookId = source.OrangeBookId)
  WHEN MATCHED THEN
      UPDATE SET [OrangeBookCode] = source.[OrangeBookCode], 
	               [OrangeBookDescription] = source.[OrangeBookDescription],
				         [OrangeBookEquivalenceTypeId] = source.[OrangeBookEquivalenceTypeId]
  WHEN NOT MATCHED THEN
      INSERT (OrangeBookId,[OrangeBookCode] ,[OrangeBookDescription] ,[OrangeBookEquivalenceTypeId] )
      VALUES (source.OrangeBookId,source.[OrangeBookCode] ,source.[OrangeBookDescription] ,source.[OrangeBookEquivalenceTypeId] );
END

COGRX-872
----------
Prod Demo sync up analysis process:
===================================
adf-CognitiveRx-Daily-prod
	CognitiveRx-Daily-Processes_Loop
		LookupDataSync(Activity)
		
CREATE VIEW SyncControl.SecretsByDataFactory_vw
AS
SELECT DISTINCT SyncControl.SyncList.Secret, SyncControl.SyncDataFactoryList.DataFactoyName, SyncControl.SyncDataFactoryList.PiplineName
FROM            SyncControl.SyncDataFactoryList INNER JOIN
                         SyncControl.SyncList ON SyncControl.SyncDataFactoryList.ListName = SyncControl.SyncList.ListName		
Below are the activities which needs to be investigated.

	1. DemoDataDateThingy
	2. DemoDataMasking
		
SELECT PremierCustomerSyncId, DataFactory, HealthSystemID, FacilityDirectParentID, Secret, DatasetInvoiceCode, DatasetPoCode, Status
FROM sqldbCogRxProdMasterdataSync.SyncControl.PremierCustomerSync;

Lookup pipelines across cogrx:
-------------------------------

PremierDataReceiveStg ========>Customer Data Load Loop  

SELECT [HealthSystemID],
[FacilityDirectParentID],
[Secret],
[DatasetInvoiceCode],
[DatasetPoCode]
FROM [SyncControl].[PremierCustomerSync]
where [DataFactory] = '@{pipeline().DataFactory}'
and [Status] = 'A'

PremierDataReceiveStg ========>Sync Price Disruptions Loop

select Secret
from [SyncControl].[SecretsByDataFactory_vw]
where [DataFactoyName] = '@{pipeline().DataFactory}'
and [PiplineName] = '@{pipeline().Pipeline}'

1_SyncItemMasterCognativeRx ===>adf-Premier-DataReceive-prod

select Secret
from [SyncControl].[SecretsByDataFactory_vw]
where [DataFactoyName] = '@{pipeline().DataFactory}'
and [PiplineName] = '@{pipeline().Pipeline}'

adf-CognitiveRx-Daily-prod ====>CognitiveRx-Daily-Processes_Loop

select Secret
from [SyncControl].[SecretsByDataFactory_vw]
where [DataFactoyName] = '@{pipeline().DataFactory}'
and [PiplineName] = '@{pipeline().Pipeline}'

DP(Direct price analysis)  -  
==========================
adf-ItemMaster-MasterData-Receive-prod
	8_SyncItemMasterToCognativeRxItemTables_Configurable(App db)
		[DailyMaintinance].[MergeCurrentNationalPricing]   --- updated table ([dbo].[NationalPharmacyItemPriceCurrent])
		
Raghu analysis for asp pricing:
================================
This price amount 1401.38 is coming from the following table [rawWK].[mf2prc_NdcPriceFile]

•	Following Wolter Kluwer file MF2NDC is loaded into  [rawWK].[mf2prc_NdcPriceFile](pl-LoadWoltersKluwerMF2Files)
•	This table prices from this table is then loaded into [dbo].[NationalPharmacyItemPrice]
•	Further using this table [dbo].[NationalPharmacyItemPrice] the data is loaded into NationalPharmacyItemPriceCurrent Using the stored procedure [DailyMaintinance].[MergeCurrentNationalPricing]


Medi-Span Electronic Drug File (MED-File) v2
==================================================
This foundational drug file provides you with regularly updated codified drug dictionary, drug vocabulary, and drug pricing for prescription drugs and medication-based over-the-counter products in the United States.


Orangebook process:
=====================
We are not getting Orange Book data to the client databases. As far as we can tell, the issue is in the ItemMaster database.

There's evidence that we are receiving raw data in our FDA feed, but that data is not being translated into the tables that will be synced to the clients.

These queries return results
select * from rawfda.orangebookExclusivity
select * from rawfda.OrangeBookPatent
select * from rawfda.OrangeBookProducts
 
These queries do not return data
select * from orangebook
select * from OrangeBookEquivalenceType
 
We know that our FDA feeds is filling the RawFda tables.
We know that dbo.OrangeBook and dbo.OrangeBookEquivalenceType are synced to the client databases.
 
Here's the issue: We are having trouble locating the stored procedures and data pipelines that actually merge the raw data into our dbo tables.

Tables where we are using OrangeBookId in ItemMaster

dbo.OrangeBook.OrangeBookId
dbo.PharmacyItem.OrangeBookId
dbo.PharmacyItemHistory.OrangeBookId
sync.vw_PharmacyItem.OrangeBookId
Integrations.MergeQoltersKluwerItem (sp)
 

The raw OrangeBook tables are being used by other processes in ItemMaster that are currently running. 

Fda.MergeFdaExclusivity
Fda.MergeFdaProductApplication
Fda.MergeFdaProductPatent
 

The sense that I get is that we started to replace the OrangeBook process with the FdaMerge process, but it was not completed.



OrangeBookEquivalenceType_Source_New1  ----> itemmaster ----> [dbo].[OrangeBookEquivalenceType]  ---> client([ItemMasterSync].[OrangeBookEquivalenceType])


Copied via sync process from item master to App db

[dbo].[OrangeBookEquivalenceType]  ---> [ItemMasterSync].[OrangeBookEquivalenceType]

[dbo].[OrangeBook]  --->   [ItemMasterSync].[OrangeBook]


Turning on prod demo:
=====================
adf-Premier-DataReceive-prod   ---> PremierWholesaleData_Receive --- completed for today.




HealthSystemID --> NY5011  FacilityDirectParentID-->	NY0024


HealthSystemID --> NY5011      FacilityDirectParentID-->	NY5073


Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdMasterdataSync;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;


sqlcogrxproditemmaster.database.windows.net

table - SyncControl.PremierCustomerSync

"PremierCustomerSyncId","DataFactory","HealthSystemID","FacilityDirectParentID","Secret","DatasetInvoiceCode","DatasetPoCode","Status"
1,adf-Premier-DataReceive-prod,CO5012,,Secret-CogRX-DB-CommonSpirit,PremierWholesaleInvoice,PremierWholesalePO,A
2,adf-Premier-DataReceive-prod,PA0023,,Secret-CogRX-DB-stluke,PremierWholesaleInvoice,PremierWholesalePO,A
3,adf-Premier-DataReceive-prod,NY5011,NY0024,Secret-CogRX-DB-northwell,PremierWholesaleInvoice,PremierWholesalePO,A
4,adf-Premier-DataReceive-prod,MN2013,,Secret-CogRX-DB-Fairview,PremierWholesaleInvoice,PremierWholesalePO,A
5,adf-Premier-DataReceive-prod,"743692",,Secret-CogRX-DB-upmc,PremierWholesaleInvoice,PremierWholesalePO,A
6,adf-Premier-DataReceive-prod,NY5011,NY5073,Secret-CogRX-DB-Demo,PremierWholesaleInvoice,PremierWholesalePO,I




CREATE VIEW SyncControl.SecretsByDataFactory_vw
AS
SELECT DISTINCT SyncControl.SyncList.Secret, SyncControl.SyncDataFactoryList.DataFactoyName, SyncControl.SyncDataFactoryList.PiplineName
FROM            SyncControl.SyncDataFactoryList INNER JOIN
                         SyncControl.SyncList ON SyncControl.SyncDataFactoryList.ListName = SyncControl.SyncList.ListName
						 
						 
						 
table synccontrol.synclist
"SyncListId","Application","Enviroment","ListName","Secret"
25,CognitiveRx,Prod,CogRx-All-List-OnDemand-Push-Test,Secret-CogRX-DB-Demo
22,CognitiveRx,Prod,CogRx-All-List-Prod-Test,Secret-CogRX-DB-Demo
23,CognitiveRx,Prod,ItemMaster-All-List-Prod-Test,Secret-CogRX-DB-Demo
24,CognitiveRx,Prod,NationalPriceDisruptions-Test,Secret-CogRX-DB-Demo




Server=tcp:sqlcogrxproddemo.database.windows.net;Initial Catalog=sqldbCogRxProdDemo;Persist Security Info=False;User ID=CogRX_Demo;Password=s7C9bHCf3xMVIVXi23Me;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;


scale up 
scale down
powerbi refresh incomplete


{
    "source": {
        "type": "AzureSqlSource",
        "queryTimeout": "02:00:00",
        "partitionOption": "None"
    },
    "sink": {
        "type": "AzureSqlSink",
        "preCopyScript": "delete [ItemMaster].[NdcIngredients]",
        "sqlWriterStoredProcedureName": "[ItemMasterSync].[NdcIngredients]",
        "sqlWriterTableType": "ItemMasterSync.NdcIngredientsType",
        "storedProcedureTableTypeParameterName": "NdcIngredients",
        "disableMetricsCollection": false
    },
    "enableStaging": false,
    "translator": {
        "type": "TabularTranslator",
        "mappings": [
            {
                "source": {
                    "name": "Ndc",
                    "type": "String"
                },
                "sink": {
                    "name": "Ndc",
                    "type": "String"
                }
            },
            {
                "source": {
                    "name": "IngredientDrugName",
                    "type": "String"
                },
                "sink": {
                    "name": "IngredientDrugName",
                    "type": "String"
                }
            },
            {
                "source": {
                    "name": "IngredientStrengthValue",
                    "type": "Decimal"
                },
                "sink": {
                    "name": "IngredientStrengthValue",
                    "type": "Decimal"
                }
            },
            {
                "source": {
                    "name": "IngredientStengthUom",
                    "type": "String"
                },
                "sink": {
                    "name": "IngredientStengthUom",
                    "type": "String"
                }
            },
            {
                "source": {
                    "name": "ItemUId",
                    "type": "Guid"
                },
                "sink": {
                    "name": "ItemUId",
                    "type": "Guid"
                }
            }
        ]
    }
}
["UPMC","StLukes","Northwell","Fairview","CommonSpirit","Demo"]



["1e56ee8a-4d6d-4a7d-a8f1-5595fdbf2685","6f1de5d2-8553-42eb-8b32-bac1349edf6f","587e9216-0a97-4314-af69-dc8039e44540","ad1a0165-bcd0-4c07-b24e-fb65bb231e66","6ed00f30-dfc8-4767-9b88-92aaaf9eae50","00a21348-d6e3-45e4-b837-ad57969166bd","bfe17258-50f9-421d-badf-95f190000f96"]



Execution fail against sql server. Sql error number: 515. Error Message: Cannot insert the value NULL into column '60DayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. Cannot insert the value NULL into column '90DayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. Cannot insert the value NULL into column '6MonthQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. Cannot insert the value NULL into column '1YearQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. Cannot insert the value NULL into column '2YearQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. Cannot insert the value NULL into column 'TotalDayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation. The statement has been terminated. Warning: Null value is eliminated by an aggregate or other SET operation.




Prod demo Changes done:

adf-CognitiveRx-Daily-prod

scale up db - trigger
scale down db - trigger
power bi refresh already done.

select *
from [Premier].[WholesalerInvoices]
where ([HealthSystemID] = 'NY5011'
   and [FacilityDirectParentID] = 'NY5073')
   
   select *
from [Premier].[WholesalerInvoices]
where ([HealthSystemID] = 'NY5011'
   and [FacilityID] = 'NY5073')
   
 premier feed for prod demo inactive
 sales build total to be fixed



select *\nfrom [Premier].[WholesalerInvoices]\nwhere ([HealthSystemID] = 'NY5011'\n   and [FacilityDirectParentID] = 'NY5073')


select count(*) from dbo.Sales s 
select count(*) from premier.WholesalerInvoices wi 

Disabling indexes:  - https://www.sqlservertutorial.net/sql-server-indexes/sql-server-disable-indexes/
==================
Summary: in this tutorial, you will learn how to use the ALTER TABLE statement to disable the indexes of a table.

SQL Server Disable Index statements
To disable an index, you use the ALTER INDEX statement as follows:

ALTER INDEX index_name
ON table_name
DISABLE;
Code language: SQL (Structured Query Language) (sql)
To disable all indexes of a table, you use the following form of the ALTER INDEX statement:

ALTER INDEX ALL ON table_name
DISABLE;
Code language: SQL (Structured Query Language) (sql)
If you disable an index, the query optimizer will not consider that disabled index for creating query execution plans.

When you disable an index on a table, SQL Server keeps the index definition in the metadata and the index statistics in nonclustered indexes. However, if you disable a nonclustered or clustered index on a view, SQL Server will physically delete all the index data.

If you disable a clustered index of a table, you cannot access the table data using data manipulation language such as SELECT, INSERT, UPDATE, and DELETE until you rebuild or drop the index.

SQL Server disable index examples
Let’s take some examples of disabling indexes to have a better understanding.

A) Disabling an index example
This example uses the ALTER INDEX to disable the ix_cust_city index on the sales.customers table:

ALTER INDEX ix_cust_city 
ON sales.customers 
DISABLE;
Code language: SQL (Structured Query Language) (sql)
As a result, the following query, which finds customers who locate in San Jose , cannot leverage the disabled index:

SELECT    
    first_name, 
    last_name, 
    city
FROM    
    sales.customers
WHERE 
    city = 'San Jose';
Code language: SQL (Structured Query Language) (sql)
Here is the estimated query execution plan:

SQL Server Disable Index - disable one index example
B) Disabling all indexes of a table example
This statement disables all indexes of the sales.customers table:

ALTER INDEX ALL ON sales.customers
DISABLE;
Code language: SQL (Structured Query Language) (sql)
Hence, you cannot access data in the table anymore.

SELECT * FROM sales.customers;
Code language: SQL (Structured Query Language) (sql)
Here is the error message:

The query processor is unable to produce a plan because the index 'PK__customer__CD65CB855363011F' on table or view 'customers' is disabled.
Code language: JavaScript (javascript)
Note that you will learn how to enable the index in the next tutorial.

In this tutorial, you have learned how to use the ALTER INDEX statement to disable indexes of a table.


/stg/Premier/HierarchyReport/2021/07/14

cogrx 448
itemmasterstgsqlserverpre


scale up:(Need to add the managed principal in the sql server)
========
https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/RG_CognitiveRXAppNP_East/providers/Microsoft.Sql/servers/itemmasterstgsqlserverpre/databases/NationalWholeSaler?api-version=2017-10-01-preview


scale down:(Need to add the managed principal in the sql server)
========
https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/RG_CognitiveRXAppNP_East/providers/Microsoft.Sql/servers/itemmasterstgsqlserverpre/databases/NationalWholeSaler?api-version=2017-10-01-preview



Microsoft Azure
adf-CognitiveRx-Daily-prod

Aravindan_Kennedy@premierinc.com
PREMIER, INC.








Dashboards
Runs

Pipeline runs

Trigger runs
Runtimes & sessions

Integration runtimes

Data flow debug
Notifications

Alerts & metrics
Pipeline runs
List
Gantt
Search by run ID or name
Local time
:
Last 7 days
Pipeline name
:
All
Status
:
Failed
Runs
:
All runs
Add filter

Copy filters
Pipeline name

Run start

Run end

Duration

Triggered by

Status

Error

Run

Parameters

Annotations

Run ID

CognitiveRx-Daily-Processes
8/6/21, 1:00:21 AM
8/6/21, 1:02:13 AM
00:01:51
Manual trigger	
Failed
Rerun
551a02bb-7265-43f1-a528-8de714951d9b
CognitiveRx-Daily-Processes
8/5/21, 6:00:36 AM
8/5/21, 6:02:52 AM
00:02:16
c1685850-362c-40c5-bf03-4bf942dd652f
Failed
Original
071602f8-dfd2-4071-84c7-1e9813c5f79d
Scale Up for Client DBs
8/5/21, 5:12:37 AM
8/5/21, 5:12:39 AM
00:00:01
Manual trigger	
Failed
Original
7fc10c92-fc56-4554-81ba-8ed121ca54ee
Error
Operation on target RebuildSalesTotal failed: Execution fail against sql server. Sql error number: 515. Error Message: Cannot insert the value NULL into column '60DayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column '90DayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column '6MonthQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column '1YearQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column '2YearQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
Cannot insert the value NULL into column 'TotalDayQtyOrdered', table 'sqldbCogRxProdDemo.dbo.SalesTotals'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.
The statement has been terminated.
Warning: Null value is eliminated by an aggregate or other SET operation.

Tuning price disruptions 
======================

	exec [PriceDisruptions].[BuildWacPricekey]

	exec [PriceDisruptions].[BuildTransform] @StartDate, @ReportedDate

	exec [PriceDisruptions].[BuildAvgPrices]

	exec [PriceDisruptions].[BuildRawInvoices]

	exec [PriceDisruptions].[BuildFilledUnitsGpi]

	exec [PriceDisruptions].[BuildContractCount]

	exec [PriceDisruptions].[BuildIncidentsGpi] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsNdc] @ReportedDate

	exec [PriceDisruptions].[BuildIncidentsGpiMfr] @ReportedDate

	exec [PriceDisruptions].[BuildResultsGpi] @ReportedDate

	EXEC [PriceDisruptions].[BuildResultsNdc] @ReportedDate

|stored_procedure         |cached_time        |last_execution_time|execution_count|avg_elapsed_time|
|-------------------------|-------------------|-------------------|---------------|----------------|
|BuildPriceDisruptions    |2021-08-06 12:46:33|2021-08-09 09:01:13|3              |128             |
|BuildRawInvoices         |2021-08-06 13:12:34|2021-08-09 09:24:06|3              |72              |
|BuildRollupAggForNdcByDay|2021-08-06 12:13:46|2021-08-09 08:29:15|2              |31              |
|BuildTransform           |2021-08-06 12:46:34|2021-08-09 09:01:14|3              |21              |
|BuildIncidentsGpiMfr     |2021-08-06 18:32:31|2021-08-09 11:38:25|2              |10              |
|BuildFilledUnitsGpi      |2021-08-06 17:53:08|2021-08-09 10:58:26|2              |10              |
|BuildIncidentsGpi        |2021-08-06 18:13:19|2021-08-09 11:18:53|2              |9               |
|BuildIncidentsNdc        |2021-08-06 18:22:47|2021-08-09 11:28:30|2              |9               |
|BuildContractCount       |2021-08-06 18:03:57|2021-08-09 11:09:21|2              |9               |
|BuildResultsGpi          |2021-08-06 18:42:41|2021-08-09 11:49:36|2              |0               |
|BuildAvgPrices           |2021-08-06 13:11:46|2021-08-09 09:23:27|3              |0               |
|BuildWacPricekey         |2021-08-06 12:46:33|2021-08-09 09:01:13|3              |0               |
|BuildResultsNdc          |2021-08-06 18:42:42|2021-08-09 11:49:37|2              |0               |


status
86847240 row(s) updated - 20m 25s

ALTER INDEX ALL ON PriceDisruptions.PerfRawInvoices
DISABLE;

ALTER INDEX ALL ON PriceDisruptions.PerfRawInvoices
REBUILD;


CopyWholsaleDataToClient  ---->> to be checked drop and rebuild index
[Premier].[ClearPoAndInvoices] - 
dbo.sales ---> disable all the index except the one used in the where condition and then rebuild it
dbo.Purchaseorder ---> add a new index on closed date time and then disable all the index except the one used in the where condition and then rebuild it

Process Invoices - drop and rebuild index



DataFeedType  ====> ItemMasterSync	DataFeedType

ImportFileIDMapping  ====>  ItemMasterSync	ImportFileIDMapping

ImportFileFrequencyType    ====> 	ItemMasterSync	ImportFileFrequencyType



adf-ItemMaster-MasterData-Receive-prod(datafactory) and CallItemMasterIntegrations(pipeline)



Integrations.InsertSalesRecordsUsingPremier
Premier.ClearPoAndInvoices
[Premier].[disableindex]  - new sp
[Premier].[RebuildIndex]   - new sp


EXECUTE [Premier].[disableindex]

select * from sys.indexes
where object_id = (select object_id from sys.objects where name = 'WholesalerInvoices')

EXECUTE  [Premier].[RebuildIndex]

select * from sys.indexes
where object_id = (select object_id from sys.objects where name = 'WholesalerInvoices')




AspPriceAndLimits
Customer
CustomerItemPricing
DistributorSales
ImportFileIDMapping
Manufacturer
ManufacturerLabeler
PharmacyItem
PharmacySignals
PurchaseOrder
ReimbursementItemPricing
Sales
SalesArchive
SubContractItem.ContractIdentifier
SubContractItem.SubContract
SubContractItem
SubContractPriceList
SubContractPriceList.SubContractRebateTier

dbo.AspPriceAndLimits.FK_AspPriceAndLimits_DataSource
dbo.Customer.fk_Customer_DataSourceId
dbo.CustomerItemPricing.fk_CustomerItemPricing_DataSourceId
dbo.DistributorSales.fk_DistributorSales_DataSourceId
dbo.ImportFileIDMapping.fk_ImportFileIDMapping_DataSourceId
dbo.Manufacturer.fk_Manufacturer_DataSource_DataSourceId
dbo.ManufacturerLabeler.fk_ManufacturerLabeler_DataSource_DataSourceId
dbo.PharmacyItem.FK_PharmacyItem_DataSource
dbo.PharmacySignals.fk_PharmacySignals_DataSourceId
dbo.PurchaseOrder.fk_PurchaseOrders_DataSourceId
dbo.ReimbursementItemPricing.fk_ReimbursementItemPricing_DataSource_DataSourceId
dbo.Sales.fk_Sales_DataSourceId
dbo.SalesArchive.fk_SalesArchive_DataSourceId
Contract.ContractIdentifier.FK_ContractIdentifier_DataSource
Contract.SubContract.FK_SubContract_DataSource
Contract.SubContractItem.FK_SubContractItem_DataSource
Contract.SubContractPriceList.FK_SubContractPriceList_DataSource
Contract.SubContractRebateTier.FK_SubContractRebateTier_DataSource


Contract.SubContractRebateTier.FK_SubContractRebateTier_DataSource



select * from dbo.sales where DataSourceId = 17

375722

update dbo.sales set DataSourceId = 17 where DataSourceId = 18;

select distinct datasourceid, 'dbo.AspPriceAndLimits' From dbo.AspPriceAndLimits
select distinct datasourceid,'dbo.Customer' From dbo.Customer
select distinct datasourceid,'dbo.CustomerItemPricing' From dbo.CustomerItemPricing
select distinct datasourceid,'dbo.DistributorSales' From dbo.DistributorSales
select distinct datasourceid,'dbo.ImportFileIDMapping' From dbo.ImportFileIDMapping
select distinct datasourceid,'dbo.Manufacturer' From dbo.Manufacturer
select distinct datasourceid,'dbo.ManufacturerLabeler' From dbo.ManufacturerLabeler
select distinct datasourceid,'dbo.PharmacyItem' From dbo.PharmacyItem
select distinct datasourceid,'dbo.PharmacySignals' From dbo.PharmacySignals
select distinct datasourceid,'dbo.PurchaseOrder' From dbo.PurchaseOrder
select distinct datasourceid,'dbo.ReimbursementItemPricing' From dbo.ReimbursementItemPricing
select distinct datasourceid,'dbo.Sales' From dbo.Sales
select distinct datasourceid,'dbo.SalesArchive' From dbo.SalesArchive
select distinct datasourceid,'Contract.ContractIdentifier' From Contract.ContractIdentifier
select distinct datasourceid,'Contract.SubContract' From Contract.SubContract
select distinct datasourceid,'Contract.SubContractItem' From Contract.SubContractItem
select distinct datasourceid,'Contract.SubContractPriceList' From Contract.SubContractPriceList
select distinct datasourceid,'Contract.SubContractRebateTier' From Contract.SubContractRebateTier


select * from dbo.DataSource

delete dbo.DataSource where DataSourceId = 18


SELECT [HealthSystemID],
       [FacilityDirectParentID],
       [Secret],
       [DatasetInvoiceCode],
       [DatasetPoCode]
  FROM [SyncControl].[PremierCustomerSync]
  where [DataFactory] = '@{pipeline().DataFactory}'
      and [Status] = 'A'
	  
	  
	  select Secret
from [SyncControl].[SecretsByDataFactory_vw]
where [DataFactoyName] = '@{pipeline().DataFactory}'
   and [PiplineName] = '@{pipeline().Pipeline}'
   
   PremierDataReceiveStg
   
   
   Server=tcp:cognitiverxserverstg.database.windows.net;Initial Catalog=CogRxDemo;Persist Security Info=False;User ID=CogRxUser;Password=@Password;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;
   
   
   Premier pharmacyspend product import 
   
   
   Secret-ItemMaster-DB-ItemMaster
   
   Secret-CogRX-DB-DemoClientOne
   
  premierdata/Product/2021/08/25/
  product_test.dat
 cogrxpremierdatastore.blob.core.windows.net/premierdata/Product/product_test.csv
 
 
 gen2 -- https://cogrxpremierdatastore.dfs.core.windows.net
 
 
CREATE PROCEDURE NationalPriceDisruptions.RawDisableIndex
AS
BEGIN
     --Disabling the index while loading wholesaler data to the app databases
	SET NOCOUNT ON;
	
	ALTER INDEX ALL ON [NationalPriceDisruptions].[RawInvoices] DISABLE;

END


Premier/36 history files.USQL

{
    "childItems": [
        {
            "name": "PREMIER-012021.txt",
            "name": "PREMIER-022021.txt",
            "name": "PREMIER-032021.txt",
            "name": "PREMIER-042021.txt",
            "name": "PREMIER-052021.txt",
            "name": "PREMIER-062021.txt",
            "name": "PREMIER-072021.txt",
            "name": "PREMIER-082020.txt",           
            "name": "PREMIER-082021.txt",
            "name": "PREMIER-092020.txt",
            "name": "PREMIER-102020.txt",
            "name": "PREMIER-112020.txt",
            "name": "PREMIER-122020.txt",
			
			
			
			{
    "childItems": [
        {
            "name": "PREMIER-012021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-022021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-032021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-042021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-052021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-062021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-072021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-082020.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-082021.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-092020.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-102020.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-112020.txt",
            "type": "File"
        },
        {
            "name": "PREMIER-122020.txt",
            "type": "File"
        }
  
}
@activity('GetFileListfromADLA').output.childItems[12].name      InputFile13



tr
Server=tcp:sqlcogrxproditemmaster.database.windows.net;Initial Catalog=sqldbCogRxProdItemMaster;Persist Security Info=False;User ID=CogRX_ItemMaster;Password=328NmtRyj7vZpc1qwLbh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;


REQ0200004 

subscription disabled
Operation on target SendEmail failed: {"error":{"code":"ReadOnlyDisabledSubscription","message":"The subscription 'd54a7102-3a14-42f8-bea4-1965522a713d' is disabled and therefore marked as read only. You cannot perform any write actions on this subscription until it is re-enabled."}}
Operation on target DataCheck_SI failed: Operation on target SendEmail failed: {"error":{"code":"ReadOnlyDisabledSubscription","message":"The subscription 'd54a7102-3a14-42f8-bea4-1965522a713d' is disabled and therefore marked as read only. You cannot perform any write actions on this subscription until it is re-enabled."}}

Operation on target Execute DataCheck failed: Operation on target DataCheck_SI failed: Operation on target SendEmail failed: {"error":{"code":"ReadOnlyDisabledSubscription","message":"The subscription 'd54a7102-3a14-42f8-bea4-1965522a713d' is disabled and therefore marked as read only. You cannot perform any write actions on this subscription until it is re-enabled."}}

Operation on target Execute DataCheck failed: Operation on target DataCheck_SI failed: Operation on target SendEmail failed: {"error":{"code":"ReadOnlyDisabledSubscription","message":"The subscription 'd54a7102-3a14-42f8-bea4-1965522a713d' is disabled and therefore marked as read only. You cannot perform any write actions on this subscription until it is re-enabled."}}



https://prod-07.eastus2.logic.azure.com:443/workflows/68cf6ef1416f4a88b75e26dc795dbe51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=pomcaZKRsN2VNiyfcIX_FP0qLn3x7rwY_hofiFGp1v4

Triggering from premier to nationalwholesaler database

https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/CognitiveRx-PROD/
providers/Microsoft.Sql/servers/sqlcogrxproditemmaster/databases/sqldbCogRxProdNationalWholesaler?api-version=2017-10-01-preview



product/2021/09/03/premier_product_import.dat


product


dbfs:/FileStore/tables/pharmacy_spend_09062021.csv

dbfs:/FileStore/tables/sales_202109060216.csv




history run updates - 
we are running the history load today and st lukes completed good. Northwell failed due to some data issue and working on fixing the same. other three clients the load is still in progress


   and [Status] = 'A'
   
   
   SACRED HEART PHARMACY
ST LUKE'S UNIVERSITY HEALTH NETWORK
ST. LUKE'S - WARREN HOSPITAL
ST. LUKE'S HOSPITAL - ANDERSON CAMPUS


ST LUKE'S UNIVERSITY HEALTH NETWORK(JUNE 2021)				
9001104	3942.52	9001104	4300.91	not equal
51672126401	14.51	51672126401	31.81	not equal
68516521402	10359.208	68516521402	10359.21	not equal


the Data Factory Managed Identity 'PremierDataReceiveStg' needs to have contributor access to the SQL Server itemmasterstgsqlserverpre in the old tenant

issue due to more facilities start

-prod demo issue
customer and customerorganisation table update procs are commented out


Daily coginitiverx process
==============================================  
 "storedProcedureName": "[DailyMaintinance].[RebuildCustomerPriceList]"                   ====>   CustomerPriceList
 "storedProcedureName": "[DailyMaintinance].[MergeCurrentNationalPricing]"                ====> NationalPharmacyItemPriceCurrent is updated based on various price code
 "storedProcedureName": "[DailyMaintinance].[RebuildPharmacyItemEqKey]"                   ====> key building in pharmacy item table
  "storedProcedureName": "[DailyMaintinance].[RebuildSalesTotal]"                         ====> building salestotal table using sales table
  "storedProcedureName": "[DailyMaintinance].[ReBuildMonthlyCustomerItemPrice]"           ====> [dbo].[CustomerItemPricingHistoryMonthly] using CustomerItemPricing
  "storedProcedureName": "[DailyMaintinance].[RebuildSalesPercentile]"                    ====> account, contract, organization, supplier level percentile using sales table
  "storedProcedureName": "[DailyMaintinance].[RebuildLeadTimes]"                          ====>truncate table [dbo].[CustomerItemLeadTime],truncate table 																								[dbo].[CustomerSupplierItemLeadTime]
	truncate table [dbo].[CustomerSupplierLeadTime]
  "storedProcedureName": "[DailyMaintinance].[ReBuildLeadTimeSummaryMV]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildOrganizationProductTop5MV]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildAcctProductsTop5MV]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildAcctSummaryMV]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildSupplierSummaryMV]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildOrganizationSummaryMV]"
  "storedProcedureName": "[DailyMaintinance].[AssignItemIdsForNewItems]"
  "storedProcedureName": "[DailyMaintinance].[ReBuildMarginViewsMV]",
  "storedProcedureName": "DailyMaintinance.RebuildTrackingBuyIns"
  "storedProcedureName": "[DailyMaintinance].[TrackedProjectCompletionByDate]"
  "storedProcedureName": "[DailyMaintinance].[RecalculateContractPriceAmount]"
  "storedProcedureName": "[DailyMaintinance].[ReCalculateShortageCost]"
  "storedProcedureName": "[DailyMaintinance].[LoadSignalsToNationalWatchController]"
  "storedProcedureName": "[DailyMaintinance].[DeactivateExpiredWatched]"
  "storedProcedureName": "[DailyMaintinance].[LoadNationalWatchToClientWatch]"
              "storedProcedureName": "[DailyMaintinance].[DemoDataDateThingy]"
              "storedProcedureName": "[DailyMaintinance].[DemoDataMasking]"
  "storedProcedureName": "[DailyMaintinance].[UpdateSupplierWithMfr]"
              "storedProcedureName": "[dbo].[CreatePriceOpps_HCPharm]",
              "storedProcedureName": "[dbo].[CreatePriceOpps_Premier]",
			  
			  
			  
Setting up github desktop:
============================			  
1.download github desktop		
2.clone the repository
3. select the clone option in azure devops and copy the email and token to login	 

setting up visual studio:
=========================
1. download the visual studio and select required plugins
2. open the clone repository folder and open the api and then select the last visual studio short cut
3. select the appropriate .net run time and devloper pack to avoid incompatibility error


Setting up visualstudio code:
==============================

 
			  
Shortages stories:

------->

CustomerDrugShortage------->No source as per analysis. the table is empty
====================


"Watch.ShortageWatchReason
==========================
1.sub stored proce - [DailyMaintinance].[LoadSignalsToNationalWatch]
   This table l


watch.ShortageWatchReasonType"


[DailyMaintinance].[LoadSignalsToNationalWatch]

Please check the permission of the User @ RG level of ADF
- Verify any Custom Policy in place for that User
- User who tries to configure GIT does have access to Disable as well.




-- ItemMaster.dbo.GxTable definition

-- Drop table

-- DROP TABLE ItemMaster.dbo.GxTable;

CREATE TABLE ItemMaster.dbo.GxTable (
	[SkuCount] smallint NULL,
	[LaunchStatus] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Manufaturer] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[GenericName] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DosageForm] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Strength] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PackageSizeInMl] int NULL,
	[PackageQuantity] int NULL,
	[NDC] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SellingUnitPrice ] float NULL,
	[Rebate] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PROJECTED AVAILABILITY DATE AT WHOLESALER] date NULL,
	[FIRM AVAILABILITY DATE AT WHOLESALER] date NULL,
	[FFF Item Code] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[FFF Or Alternate (Prime) Wholesaler] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Drug Shortage ASHP/FDA] bit NULL,
	Comments nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Product Launch Date] date NULL,
	[Contract End Date] date NULL,
	[Base Contract Price] decimal(10,0) NULL,
	[Each Price] decimal(10,0) NULL,
	[PGx Each Price] float NULL,
	[Difference PGx to Base] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Admin Fee Incremental] float NULL,
	[Total Admin Fee] float NULL,
	[Pays On] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[WAC Price] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DSH ] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	IHP float NULL,
	[Contract Number] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Controlled Substance] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[API Source] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Finished Good Production] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[(7/21) Annual Sales Value Premier (Contract Supplier)] int NULL,
	[(7/21) Annual Sales Value Premier (Molecule)] int NULL,
	[Annual Sales Value PGx ONLY (as of 7/21)] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Type of Drug and/or Indication] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CIVICA DRUG] nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
);


= Table.TransformColumnTypes(Source,{{"SKU COUNT", Int64.Type}, {"LAUNCH STATUS", type text}, {"MANUFACTURER", type text}, {"Generic Name", type text}, {"DOSAGE FORM", type text}, {"STRENGTH", type text}, {"(mL) PACKAGE SIZE ", type number}, {"PACKAGE QUANTITY (units within)", Int64.Type}, {"MANUFACTURER NDC#", Int64.Type}, {"Selling Unit Price ", type number}, {"+REBATE", type text}, {"PROJECTED AVAILABILITY DATE AT WHOLESALER", type any}, {"FIRM AVAILABILITY DATE AT WHOLESALER", type text}, {"FFF Item Code", type text}, {"FFF Or Alternate (Prime) Wholesaler", type text}, {"Drug Shortage ASHP/FDA", type text}, {"Comments", type text}, {"Product Launch Date", type datetime}, {"Contract End Date", type datetime}, {"Base Contract Price", type any}, {"Each Price", type any}, {"PGx Each Price", type number}, {"Difference PGx to Base", type any}, {"Admin Fee Incremental", type number}, {"Total Admin Fee", type number}, {"Pays On", type text}, {"WAC Price", type any}, {"DSH ", type any}, {"IHP", type number}, {"Contract Number", type text}, {"Controlled Substance", type text}, {"API Source", type text}, {"Finished Good Production", type text}, {"(7/21) Annual Sales Value Premier (Contract Supplier)", Int64.Type}, {"(7/21) Annual Sales Value Premier (Molecule)", Int64.Type}, {"Annual Sales Value PGx ONLY (as of 7/21)", type any}, {"Type of Drug and/or Indication", type text}, {"CIVICA DRUG", type text}})



	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 1
	 then sum(Qty * UnitCost) as [Current-Jan]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 2
	 then sum(Qty * UnitCost) as [Current-Feb]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 3
	 then sum(Qty * UnitCost) as [Current-mar]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 4
	 then sum(Qty * UnitCost) as [Current-apr]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 5
	 then sum(Qty * UnitCost) as [Current-may]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 6
	 then sum(Qty * UnitCost) as [Current-jun]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 7
	 then sum(Qty * UnitCost) as [Current-jul]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 8
	 then sum(Qty * UnitCost) as [Current-aug]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 9
	 then sum(Qty * UnitCost) as [Current-sep]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 10
	 then sum(Qty * UnitCost) as [Current-oct]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 11
	 then sum(Qty * UnitCost) as [Current-nov]
	 case when YEAR(s.transactiondate) = year(GETDATE()) and MONTH(s.transactiondate) = 12
	 then sum(Qty * UnitCost) as [Current-dec]
	 else
	 end as total quantity
	 
	 
		[Current-January],
		[Current-February],
		[Current-March],
		[Current-April],
		[Current-May],
    	[Current-June],
		[Current-July],
		[Current-August],
		[Current-September],
		[Current-October],
		[Current-November],
    	[Current-December],
		[Previous1-January],
		[Previous1-February],
		[Previous1-March],
		[Previous1-April],
		[Previous1-May],
    	[Previous1-June],
		[Previous1-July],
		[Previous1-August],
		[Previous1-September],
		[Previous1-October],
		[Previous1-November],
    	[Previous1-December],
		[Current2-January],
		[Current2-February],
		[Current2-March],
		[Current2-April],
		[Current2-May],
    	[Current2-June],
		[Current2-July],
		[Current2-August],
		[Current2-September],
		[Current2-October],
		[Current2-November],
    	[Current2-December],
		[Previous3-January],
		[Previous3-February],
		[Previous3-March],
		[Previous3-April],
		[Previous3-May],
    	[Previous3-June],
		[Previous3-July],
		[Previous3-August],
		[Previous3-September],
		[Previous3-October],
		[Previous3-November],
    	[Previous3-December],
		sum([Current-February],
		[Current-March],
		[Current-April],
		[Current-May],
    	[Current-June],
		[Current-July],
		[Current-August],
		[Current-September],
		[Current-October],
		[Current-November],
    	[Current-December]) as Currentyear Cost
	 
	 
	 acccount uri : https://stitemmasterprod.azuredatalakestore.net/webhdfs/v1
	 subscription : d0521c58-92af-4b80-9809-8cd793aa9393
	 RG : CognitiveRx-PROD
	 Tenant : b110eddf-23ae-457c-a6f3-734d592b2847
	 
	 old1 key : l12BgNN_1.QvR6vKTKMhB23_x7P-i2BDAF
	 old2 key : DefaultEndpointsProtocol=https;AccountName=stcognitiverxprod;
	 AccountKey=ROURK1aRtsrZzl710CUuOk0veoUQCh69V2dITPy11Iu9iyBnlXDEEYg3Gh6T3HDdJbKaDvyWoPWgrJMX7GuX5A==;
	 EndpointSuffix=core.windows.net
	 
	 
	 ---latest version of secret --36651c1e-152f-48ba-8442-4caa0a1abd83
	 
	 
	 
	 --autoscaling of nationalwholesaler db
	 @concat('https://management.azure.com/subscriptions/
		d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/ITEMMASTER-Stg/providers/Microsoft.Sql/
servers/itemmasterstgsqlserverpre/databases/',pipeline().parameters.datasetGuid,'?api-version=2017-10-01-preview')




https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/CognitiveRx-PROD/providers/Microsoft.Sql/servers/sqlCogRxProdItemMaster/databases/sqldbCogRxProdNationalWholesaler?api-version=2017-10-01-preview


adf-ItemMaster-FDA-Receive-prod
	FDARecall_V2_Receive  --- activate the new key and rerun completed fine
	FdaOrangeBookFiles_Pull - weekly feed reran and failed
	
	Operation on target DownloadFdaOrangeBookFiles failed: {"errorCategory":0,"code":"FailureExitCode","message":"The task exited with an exit code representing a failure","details":[{"Name":"Message","Value":"The task process exited with an unexpected exit code"},{"Name":"AdditionalErrorCode","Value":"FailureExitCode"}]}
	FDARecall_V2_Receive
	
	
	
	azcopy copy "C:\aravind\*" "https://cogrxtestingaug.blob.core.windows.net/input"
	
	
	var query = AccountUtilizationSearchQueries.GET_UTIL_SQL
					.Replace("***CUSTOMERCLAUSE***", CreateCustomerClause(searchParams));
					E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\AccountUtilizationService.cs
					
[9:27 AM] Aravindan T K
Next steps for you after watching the video 1. What is Azure Resource Manager - https://docs.microsoft.com/en-us/azur... 
2. What are Azure Resource Manager Templates - https://docs.microsoft.com/en-us/azur... 
3. Quickstart templates website - https://azure.microsoft.com/en-us/res...
 4. Quickstart templates github - https://github.com/Azure/azure-quicks... 5. Resource providers template reference - https://docs.microsoft.com/en-us/azur...

[9:27 AM] Aravindan T K
https://github.com/MarczakIO/azure4everyone-samples/tree/master/azure-resourcemanager-templates-introduction
azure4everyone-samples/azure-resourcemanager-templates-introduction at master · MarczakIO/azure4everyone-samples
Contribute to MarczakIO/azure4everyone-samples development by creating an account on GitHub.


CREATE PROCEDURE Premier.Masking
AS
BEGIN
     
SET NOCOUNT ON;

update Customer 
set AccountNumber = case 
						 when AccountNumber = 'NY5073' THEN 'NC9999'
						 when AccountNumber = 'NY5029' THEN 'NC8888'
						 when AccountNumber = 'NY2179' THEN 'NC7777'
				    end;	
update Sales 
     set Address1='13034 Ballantyne Corporate Pl',
         City='Charlotte',
         State='NC',
         Zipcode='28277';
END
		


api calls:
==========
Tenant id:
@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_TenantId,'/?api-version=7.0')
Client id:
@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPClientId,'/?api-version=7.0')
secret:
@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPSecret,'/?api-version=7.0')


get AAD token:

@concat('https://login.microsoftonline.com/',activity('Get TenantId from AKV').output.value,'/oauth2/token')	

Header : Content-Type:application/x-www-form-urlencoded
body:@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Get ClientId from AKV').output.value,'&client_secret=',encodeUriComponent(activity('Get Secret from AKV').output.value))	
					
					
powerbi refresh:

@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.workspaceGuid,'/datasets/',pipeline().parameters.datasetGuid,'/refreshes')


Authorization  : @concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))			
body:{"notifyOption":"NoNotification"}		





Azure analysis services refresh: Reference--https://www.techtalkcorner.com/azure-data-factory-refresh-analysis-services/


1. add the managed identity of datafactory into azure analysis services
2. using ssms under security add app:applicationid@tenantid
3. build the 


Operation on target Copy data1 failed: ErrorCode=SqlBatchWriteTransactionFailed,'Type=Microsoft.DataTransfer.Common.Shared.HybridDeliveryException,Message=SQL transaction commits failed,Source=Microsoft.DataTransfer.ClientLibrary,''Type=System.Data.SqlClient.SqlException,Message=A transport-level error has occurred when receiving results from the server. (provider: TCP Provider, error: 0 - The semaphore timeout period has expired.),Source=.Net SqlClient Data Provider,SqlErrorNumber=121,Class=20,ErrorCode=-2146232060,State=0,Errors=[{Class=20,Number=121,State=0,Message=A transport-level error has occurred when receiving results from the server. (provider: TCP Provider, error: 0 - The semaphore timeout period has expired.),},],''Type=System.ComponentModel.Win32Exception,Message=The semaphore timeout period has expired,Source=,'


changes made:
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\OrganizationQueries.cs   -- while clicking the top level
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\OrganizationSearchQueries.cs  -- top level

E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\AccountSearchQueries.cs  - restricting list of facilities displayed at UI

E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\DivisionSearchQueries.cs - division along with count will get changed

services/account/queries/AccountSearchQueries


premier-datareceivedev-al2b

aKennedy5@cloud.premierinc.com



https://cognitiverxdev.vault.azure.net/


buyIns/myPredictions
supplier/1539/insights
supplier/1539/purchaseHistory





E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\BuyIn\Queries\BuyInQueries.cs


Inactivated hpcs code
===========================

source --- AspPriceAndLimits
				[rawWK].[pb2mcaf_MediSpanCustomizedFile],[dbo].[PharmacyItem]


master data factory
[Integrations].[MergeWoltersKluwerAspItemPrice] 




LoadWoltersKluwerPaymentAllowanceLimitPartBv2

adl://stitemmasterprod.azuredatalakestore.net/prod/ItemMaster/WoltersKluwer/Pharmacy/2021/12/25/pal-b/PB2MCAF
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Shortage\ShortageDashService.cs


        public static List<ShortageDashFillRecord> GetDailyFill(CogRxUser user, string gpiname, QueryScope scope)
        {
            using (var cnx = ConnectionFactory.GetConnection(user))
            {
                var sql = $@"
                    SELECT
                         InvoiceDateString as InvoiceDate
	                    ,SUM(TotalUnits) as TotalUnits
	                    ,SUM(QuantityOrdered) as QuantityOrdered
	                    ,CASE
						    WHEN SUM(QuantityOrdered) = 0 THEN NULL 
						    ELSE CAST(SUM(TotalUnits) as DECIMAL(8,2))/CAST(SUM(QuantityOrdered) AS DECIMAL(8,2))
						    END as FillRate
                    FROM {prefix[scope]}[RawInvoices]
                    WHERE GpiName = @gpiname
                    GROUP BY InvoiceDateString
                    ORDER BY InvoiceDateString";
					

 CREATE NONCLUSTERED INDEX IX_NationalPriceDisruptions_RawInvoices_DrugStrength ON NationalPriceDisruptions.RawInvoices (  DrugStrength ASC  , GpiName ASC  )  
	 INCLUDE ( InvoiceDateString , QuantityOrdered , TotalUnits ) 
	 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
	 ON [PRIMARY ] ;
 CREATE NONCLUSTERED INDEX IX_NationalPriceDisruptions_RawInvoices_FILL_FacilityState_GpiName ON NationalPriceDisruptions.RawInvoices (  FacilityState ASC  , GpiName ASC  )  
	 INCLUDE ( InvoiceDateString , Manufacturer , QuantityOrdered , TotalUnits ) 
	 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
	 ON [PRIMARY ] ;
 CREATE NONCLUSTERED INDEX IX_NationalPriceDisruptions_RawInvoices_GpiName ON NationalPriceDisruptions.RawInvoices (  GpiName ASC  )  
	 INCLUDE ( InvoiceDateString , QuantityOrdered , TotalUnits ) 
	 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
	 ON [PRIMARY ] ;
 CREATE NONCLUSTERED INDEX IX_NationalPriceDisruptions_RawInvoices_Manufacturer_GpiName ON NationalPriceDisruptions.RawInvoices (  Manufacturer ASC  , GpiName ASC  )  
	 INCLUDE ( InvoiceDateString , QuantityOrdered , TotalUnits ) 
	 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
	 ON [PRIMARY ] ;					
					
MV.SupplierSummary
used in supplieroverviewqueries and wholesaleroverview queries



existing ui queries            SELECT
				 clientId AS ClientId
            	,supplierid AS SupplierId
            	,y_transactionyear AS Y_TransactionYear
            	,y_cost AS Y_Cost
            	,y_qty AS Y_Qty
            	,r_cost AS R_Cost
            	,r_costrank AS R_CostRank
            	,r_qty AS R_Qty
            	,r_qtyrank AS R_QtyRank
            	,r_totalcount AS R_TotalCount
            	,c_items AS C_Items
            	,c_contracted AS C_Contracted
            	,c_purchased AS C_Qty
            	,c_purchasedoncontract AS C_QtyOnContract
            	,c_spend AS C_Spend
            	,c_spendoncontract AS C_SpendOnContract
            FROM MV.SupplierSummary 
            WHERE clientid = @clientId 
            AND supplierid = @supplierId";
			
			
			
			
			
MV.AcctProductsTop5 --- used under accounts module for top 5 Ndc

Find all "MV.AcctProductsTop5", Entire solution
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\AccountOverviewQueries.cs(143):FROM MV.AcctProductsTop5
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\CreateAcctProductView.sql(8):into MV.AcctProductsTop5

Find all "MV.AcctSummary", Entire solution
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\AccountOverviewQueries.cs(23):FROM MV.AcctSummary
spend by type tile\ranking\contract analysis
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\CreateAcctView.sql(82):INTO MV.AcctSummary
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\DivisionOverviewQueries.cs(34):FROM MV.AcctSummary act jOIN customer c on act.customerid = c.CustomerId


Find all "MV.ChargeDetailView", Entire solution
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(2):DROP TABLE MV.ChargeDetailView;
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(84):INTO MV.ChargeDetailView
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(125):--  dbo.MV.ChargeDetailView cd
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\FinalReimbursement.sql(41)://          MV.ChargeDetailView cd
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\ReimbursementQueries.cs(91):JOIN mv.chargedetailview cd ON m.pid = cd.payerid AND m.cgid = cd.customergroupid AND m.jc = cd.jcode AND m.qtr = cd.quarterdate AND cd.clientid = m.cid


Find all "MV.LeadTimeSummary", Entire solution
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\InventoryPlanning\Queries\InventoryPlanningQueries.cs(176):FROM MV.LeadTimeSummary sup
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Supplier\Queries\LeadTimeView.sql(45):INTO MV.LeadTimeSummary



Find all "MV.MarginCostView", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(1):DROP TABLE MV.MarginCostView;
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(52):INTO MV.MarginCostView
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\CreateReimbursementViews.sql(89):JOIN MV.MarginCostView cost ON cd.jcode = cost.jcode AND cd.quarterdate = cost.quarterdate AND cd.customergroupid = cost.customergroupid



Find all "MV.MarginResultView", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\ReimbursementQueries.cs(41):FROM MV.MarginResultView
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Reimbursement\ReimbursementQueries.cs(90):FROM MV.MarginResultView m


no match found
Find all "MV.MarginSalesPercentages", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"

Find all "MV.OrganizationProductsTop5", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\CreateOrgProductView.sql(8):into MV.OrganizationProductsTop5
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\OrganizationOverviewQueries.cs(150):FROM MV.OrganizationProductsTop5


Find all "MV.OrganizationSummary", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\CreateOrgView.sql(82):INTO MV.OrganizationSummary
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Account\Queries\OrganizationOverviewQueries.cs(23):FROM MV.OrganizationSummary


Find all "MV.PriceOppsDetail", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\PriceOpportunities\PriceOpportunityService.cs(64):SELECT DISTINCT ndc, cipid_0 as priceid, '0' as oldnew  FROM MV.PriceOppsDetail WHERE tkey=@tkey
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\PriceOpportunities\PriceOpportunityService.cs(66):SELECT DISTINCT ndc_1, cipid_1 as priceid, '1' as oldnew  FROM MV.PriceOppsDetail WHERE tkey=@tkey";


Find all "MV.PriceOppsFinal", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\PriceOpportunities\PriceOpportunityService.cs(114):FROM MV.PriceOppsFinal


Find all "MV.SupplierSummary", Include miscellaneous files, Entire solution, "!*\bin\*;!*\obj\*;!*\.*"
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Supplier\Queries\SupplierInsightsView.sql(93):INTO MV.SupplierSummary
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Supplier\Queries\SupplierOverviewQueries.cs(23):FROM MV.SupplierSummary
E:\akenned2\source\repos\MarginAnalysis\API\MA_Common\Services\Wholesaler\Queries\WholesalerOverviewQueries.cs(24):FROM MV.SupplierSummary ss

buyins exclusion


GET_BUYINEXCLUSIONS_SQL


--00069080901


			SELECT
                 e.BuyInExclusionId
	            ,e.ItemId
	            ,p.Ndc
	            ,p.ItemDescription
                ,CASE
					WHEN CHARINDEX('Unknown - ', cm.CustomerName) > 0 THEN cm.CustomerName	
                    WHEN cm.DEA IS NULL THEN cm.CustomerName + ' - ' + cm.AccountNumber
					ELSE cm.CustomerName + ' - ' + cm.AccountNumber + ' - ' + cm.DEA 
					END AS Facility
                ,e.DateAdded
				,e.ExclusionEndDate
                ,CASE
                    WHEN e.ExclusionEndDate IS NULL OR e.ExclusionEndDate > GETDATE() 
                    THEN 1
                    ELSE 0
                END AS IsActive,
            userCreated.DisplayName AS CreatedBy,
            userUpdated.DisplayName AS UpdatedBy,            
            e.UpdatedOn AS UpdatedOn,
            e.ExclusionReason,
            e.ExclusionDuration,
            dbo.fn_DivisionName(cm.DivisionName, cm.DivisionId) 'Division'
            FROM App.BuyInExclusion e
				inner join dbo.PharmacyItem p
					ON e.ItemId = p.ItemId
            left join Customer cm on cm.customerid = e.customerid
            left join App.UserData userCreated on e.UserAddedUserDataId = userCreated.UserDataId
            left join App.UserData userUpdated on e.UserChangedUserDataId = userUpdated.UserDataId
			WHERE e.ClientId = @clientId and cm.status = 'A'
            ORDER BY IsActive desc, e.ExclusionEndDate desc, e.DateAdded desc
            
            
            
            select * from App.BuyInExclusion
			
			00069080901
			63323061609
			
			
			WholeSaleData/20220125_History_EndofFiles.done


jcodes:
========

J1745 -- Infliximab not biosimil 10mg  ---NDC --->57894003001

Account type cost calculation:

total cost of the quarter/display quanity totoal of a quarter 


disp quantity = billable units per ndc * no of quantity ordered

Advocate aurora issues:


account = facility level


AspPriceAndLimits==>[rawWK].[pb2mcaf_MediSpanCustomizedFile]  =====> PB2MCAF( we are getting from WK)
					[dbo].[PharmacyItem]



---------------------------------------------------------------------------------------------------------------

Advocate aurorar total spend issues

impact:
module : AccountUtilizationService.cs



Facility – Advocate Lutheran General Hospital 709158  

WAN - FIL05673A	

feb 25 2021 to feb 25 2022


FIL05673A	FFF	$206,127	$406,803	$678,587	$2,138,127



Usage by Time	Total Units	Total Spend
30 Day	1,281	$206,125
60 Day	2,420	$395,754
90 Day	4,002	$632,705
Search Results	12,532	$2,138,071



100072600	AmerisourceBergen Drug Corporation	$17,283	$60,478	$76,666	$228,640


Usage by Time	Total Units	Total Spend
30 Day	146	$17,280
60 Day	511	$60,429
90 Day	680	$76,616
Search Results	1,414	$132,742



FIL05673A	FFF	$210,281	$399,914	$636,869	$2,142,281


Usage by Time	Total Units	Total Spend
30 Day	1,425	$210,298
60 Day	2,564	$399,927
90 Day	4,146	$636,878
Search Results	6,751	$1,144,411


datascience

/Shared/Buy Ins/1_DEV/01_BI_NDCSelection
/Shared/Buy Ins/1_DEV/02_BI_ModelBuild





FIL05673A	FFF	$210,281	$399,914	$636,869	$2,142,281

today 03/03/2022


sales totalspend
FIL05673A	FFF	$255,168	$471,349	$700,942	$2,150,828

sales

Overall Summary
Usage by Time	Total Units	Total Spend
30 Day	1,321	$252,287
60 Day	2,866	$471,362
90 Day	4,208	$700,950
Search Results	9,243	$1,488,935




UNKNOWN	DMS Pharmaceutical	$718	$966	$1,612	$19,883
FIL05673A	FFF	$255,168	$471,349	$700,942	$2,150,828


Overall Summary
Usage by Time	Total Units	Total Spend
30 Day	1,321	$252,287
60 Day	2,866	$471,362
90 Day	4,208	$700,950
Search Results	9,243	$1,488,935




100072600	AmerisourceBergen Drug Corporation	$18,440	$61,635	$77,158	$229,124



Usage by Time	Total Units	Total Spend
30 Day	155	$18,437
60 Day	520	$61,586
90 Day	652	$76,998
Search Results	1,401	$133,356



Overall Summary
Usage by Time	Total Units	Total Spend
30 Day	155	$18,437
60 Day	520	$61,586
90 Day	652	$76,998
Search Results	1,933	$242,066





Overall Summary
Usage by Time	Total Units	Total Spend
30 Day	6,510	$1,102,001
60 Day	13,755	$2,360,397
90 Day	20,349	$3,558,592
Search Results	88,615	$19,270,973


shortage trackings:

====================

"Fresenius Kabi had morphine injection on shortage due to increased demand.[1-2] ", "Astramorph injection has been unavailable since 2012. Fresenius Kabi changed manufacturing sites and cannot estimate if Astramorph will return.[2] ", "Hikma has morphine injection on shortage due to increased demand.[3] ", "Pfizer has morphine injection on shortage due to increased demand. Pfizer discontinued morphine iSecure syringes in February 2020. Pfizer discontinued morphine 25 mg/mL 1 mL preservative-free vials in late-2020.[4] ", "Piramal Critical Care has Mitigo injection available.[5] ", "", "", "", "", "", "", "", "", "", ""

"Fresenius Kabi has morphine 2 mg/mL 1 mL vials on back order and the company estimates a release date of late-February to early-March 2022. The 2 mg/mL 1 mL syringes are on back order and the company estimates a release date of early- to mid-March 2022. The 4 mg/mL 1 mL syringes are on back order and the company estimates a release date of late-March 2022.[2] ", "Hikma has 10 mg/mL 1 mL vials on back order and the company estimates a release date of late-February to early-March 2022.[3] ", "Pfizer has morphine 1 mg/mL 10 mL preservative-free vials available in limited supply. The 2 mg/mL 1 mL Carpuject syringes are on back order and the company estimates a release date of February 2022. The 50 mg/mL 20 mL and 50 mL vials are on back order and the company estimates a release date of March 2022. The 2 mg/mL 1 mL NexJect preservative-free syringes are on back order and the company estimates a release date of March 2022.[4] ", "", "", "", "", "", "", ""

The shortage details are coming from dbo.PharmacyItemShortage.

syncing from itemmaster database
[dbo].[ImportASHPShortages]

@{concat('ALTER TABLE [RawASHP].[ASHPShortageReason] DROP CONSTRAINT DF_ASHPShortageReason_PipelineRunId; ALTER TABLE [RawASHP].[ASHPShortageReason] ADD  CONSTRAINT [DF_ASHPShortageReason_PipelineRunId]  DEFAULT (','null',') FOR [PipelineRunId];')}



Usage by Time	Total Units	Total Spend
30 Day	6,172	$1,022,858
60 Day	12,607	$2,118,542
90 Day	19,779	$3,458,168
Search Results	44,469	$8,006,688



Usage by Time	Total Units	Total Spend
30 Day	68	$89,403
60 Day	112	$162,473
90 Day	112	$162,473
Search Results	112	$162,473


shortage link issue
============================
has shortage is updated in the following stored procedure -- [PriceDisruptions].[BuildResultsGpi]

shortages condition:
----------------------
 select distinct phi.GPIDrugNameCode
    from PharmacyItemShortage ps
    join PharmacyItem phi on phi.Ndc = ps.Ndc
    where ps.[isActive] = 1
	
	
	 ,convert(varchar, ashp.UpdatedDate, 23) as 'ShortUpdate'
	 
is active status is updated in itemmaster table based on below condition in sp [dbo].[ImportASHPShortages]
,[isActive] = (case when source.STATUS = 'R' or source.STATUS = 'D' then 0 else 1 end)

pro

status D = Affected product discontinued
status R = ('No Commercially Available Preparations','No Longer Available','Resolved')


We are receiving this shortage details from ASHP source. A product is considered as having shortage when the status received from ASHP is not equal to D or R.
we are also receiving shortage details from but for shortage details hyperlink we are considering only ashp as per current process

The status D and R is derived as shown below

Status D = when the Affected product discontinued flag is recevied as True the status is considered as D
Status R = when the staus  has any of the following reasons('No Commercially Available Preparations','No Longer Available','Resolved') then it will be considered as R

Under oxytocin gpi we are getting below ndc
63323001211
42023011625
42023011602
63323001210
63323001230
63323001207
63323001201

As we are not receiving any shortage related details from ASHP the shortage detail link is disable
Mapping.[PriceTypeGroupXref]

---centura issue

Server=tcp:sqlcogrxprodcommonspirit.database.windows.net;Initial Catalog=sqldbCogRxProdCentura;Persist Security Info=False;User ID=CogRx_Centura;Password=MgWX9g^t@CqZh;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;

-- sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref definition

-- Drop table

-- DROP TABLE sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref;

CREATE TABLE sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref (
	PriceTypeGroupXrefId int IDENTITY(1,1) NOT NULL,
	ClientId int NULL,
	PriceTypeGroupId int NULL,
	ClientPriceTypeCode varchar(150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	DateAdded datetime DEFAULT getdate() NULL,
	DateChanged datetime DEFAULT getdate() NULL,
	SysStartTime datetime2(0) DEFAULT sysutcdatetime() NOT NULL,
	SysEndTime datetime2(0) DEFAULT CONVERT([datetime2](0),'9999-12-31 23:59:59') NOT NULL,
	CONSTRAINT PK_PriceTypeGroupXref PRIMARY KEY (PriceTypeGroupXrefId)
);


https://cognitiverxclientdemo.azurewebsites.net/product/ 00955172050 /shortages

-- sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref foreign keys

ALTER TABLE sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref ADD CONSTRAINT FK_PriceTypeGroupXref_Client_ClientId FOREIGN KEY (ClientId) REFERENCES sqldbCogRxProdCentura.dbo.Client(ClientId);
ALTER TABLE sqldbCogRxProdCentura.Mapping.PriceTypeGroupXref ADD CONSTRAINT FK_PriceTypeGroupXref_PriceTypeId FOREIGN KEY (PriceTypeGroupId) REFERENCES sqldbCogRxProdCentura.dbo.PriceTypeGroup(PriceTypeGroupId);




[Raw].[Sales]  - add the additional columns

changes -- [Integrations].[InsertSalesRecordsUsingPremier]


	ReasonCodeDesc varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	OrderDate datetime NULL
	
	
	
	
----------------------load member-------------------------------

datafactory name :  hcp-DataReceiveStg

Related pipelines : HcpUtilization-Process,HcpUtilization-Process



Concatenation of BrandName,GenericName and LabelName



Premier Contract,Wholesaler Contract,WAC,340B,Other Contract,Private Contract,DSH,Non Contract

table:
[Premier].[WholesalerInvoices]
RAW.SALES
DBO.SALES
SP:
DailyMaintinance.RebuildFacilityStatus
[Integrations].[InsertSalesRecordsUsingPremier]
[Premier].[LoadInvoiceAndPO]

==================================completed=============================
ALTER TABLE Premier.WholesalerInvoices
add OrderDate datetime NULL,
	ReasonCodeDesc varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL;

ALTER TABLE dbo.sales 
ADD OrderDate datetime NULL,
	ReasonCodeDesc varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL;

ALTER TABLE raw.Sales 
add OrderDate datetime NULL,
	ReasonCodeDesc varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL;
	
	
	
	
ALTER PROCEDURE DailyMaintinance.RebuildFacilityStatus

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
--inactivating
with inactivecte as (
select
	c.customerid
from
	dbo.customer c
where
	not exists (
	select
		1
	from
		dbo.sales s
	where
		s.customerid = c.customerid
		and s.TransactionDate >= DATEADD(year,-3, GETDATE())))
update
	dbo.customer
set
	status = 'I',
	DateChanged = GETDATE()
where
	CustomerId in (
	select
		customerid
	from
		inactivecte);
--activating
with activecte as (
select
	c.customerid
from
	dbo.customer c
where
	 exists (
	select
		1
	from
		dbo.sales s
	where
		s.customerid = c.customerid
		and s.TransactionDate <= DATEADD(year,-3, GETDATE())))
update
	dbo.customer
set
	status = 'A',
	DateChanged = GETDATE()
where
	CustomerId in (
	select
		customerid
	from
		activecte);
		
END




=====BKP========
CREATE PROCEDURE [Premier].[LoadInvoiceAndPO]  @DatasetInvoice varchar(50), @DatasetPO varchar(50), @PipelineId varchar(50)

--[Premier].[LoadInvoiceAndPO_temp]  'PremierWholesaleInvoice', 'PremierWholesalePO', 'd2e85f2d-5a34-437b-9943-f7329e59fbc1'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

declare @MinDate datetime = (select min([InvoiceDate]) from [Premier].[WholesalerInvoices])

truncate table [Raw].[Sales]
truncate table [Raw].[PurchaseOrders]


INSERT INTO [Raw].[Sales]
           ([DataSource]
           ,[TransactionDate]
           ,[Ndc]
           ,[ItemDescription]
		   ,[HealthSystemID]
           ,[Account]
		   ,[AccountParent]
           ,[OrderNumber]
           ,[LineNumber]
           ,[OrderType]
           ,[Qty]
		   ,[QtyOrdered]
           ,[UnitCost]
           ,[UnitPrice]
		   ,[UOM]
           ,[InvoiceNumber]
		   ,[Address1]
		   ,[Address2]
		   ,[City]
		   ,[State]
		   ,[ZipCode]
		   ,[Wholesaler]
		   ,[WholesalerAccountAttribute]
		   ,[WholesalerAccountNumber]
		   ,[ChargeBackContractNumber]
		   ,[Markup/Markdown]
           ,[ImportedDate]
           ,[ProcessPipelineId])
(SELECT @DatasetInvoice 'DataSource',
      [InvoiceDate] 'TransactionDate',
      [NDC],
      isnull([BrandName],'n') + ' ' + isnull([GenericName],'n') + ' ' + isnull([LabelName],'n') 'Item Description',
      [HealthSystemID] 'HealthSystemID',
	  [FacilityID] 'Account',  --lookup from customer,
	  [FacilityDirectParentID] 'AccountParent',
      [InvoiceNumber] 'OrderNumber',
      [LineNumberfromInvoice] 'LineNumber',
	  [WholesalerPurchaseType] 'OrderType', --what is this
      [TotalUnits] 'Qty',
	  [QuantityOrdered] 'QtyOrdered',
	  [InvoicePrice] 'UnitCost',
      [InvoicePrice] 'UnitPrice',
	  [UnitofMeasure] 'UOM',
	  [InvoiceNumber] 'InvoiceNumber',
	  [FacilityAddress1] 'Address1',
	  [FacilityAddress2] 'Address2',
	  [FacilityCity] 'City',
	  [FacilityState] 'State',
	  [FacilityZipCode] 'ZipCode',
	  [Wholesaler] 'Wholesaler',
	  coalesce([WholesalerAccountAttribute],'UNK') 'WholesalerAccountAttribute',
	  [WholesalerAccountNumber] 'WholesalerAccountNumber',
	  [ChargeBackContractNumber] 'ChargeBackContractNumber',
	  [Markup/Markdown] 'Markup/Markdown',
	  [AddedDate] 'ImportedDate',
	  @PipelineId
  FROM [Premier].[WholesalerInvoices] 
  where ndc != '0')


INSERT INTO [Raw].[PurchaseOrders]
           ([DataSource]
           ,[ApprovalDateTime]
           ,[Ndc]
           ,[PurchaseOrderNumber]
           ,[LineNumber]
           ,[PriceList]
           ,[PurchaseOrderStatus]
           ,[LineStatus]
           ,[InvoiceNumber]
		   ,[SupplierId]
           ,[SupplierName]
           ,[ReceivedDateTime]
           ,[UnitPrice]
           ,[ExtendedPrice]
           ,[CurrentQuantityOrdered]
           ,[OriginalQuantityOrdered]
           ,[QuantityReceived]
           ,[QuantityOutstanding]
           ,[QuantityCancelled]
           ,[TotalQuantityBilled]
           ,[ImportedDate]
           ,[ClosedDateTime]
           ,[PipelineId]
           ,[ReportedDate])
(SELECT @DatasetPO 'DataSource',
	  [InvoiceDate] 'ApprovalDateTime',
      [NDC],
	  [InvoiceNumber] 'PurchaseOrderNumber',
	  [LineNumberfromInvoice] 'LineNumber',
	  [WholesalerPurchaseType] 'PriceList',
	  'CLOSED' 'PurchaseOrderStatus',
	  'CLOSED' 'LineStatus',
	  [InvoiceNumber] 'InvoiceNumber',
	  case when Wholesaler = ' ' then 'Not provided' else Wholesaler end 'SupplierId',
	  case when Wholesaler = ' ' then 'Not provided' else Wholesaler end 'SuplierName',
	  [ShippingDate] 'ReceivedDateTime',
	  [InvoicePrice] 'UnitPrice',
	  [TotalSpend] 'ExtendedPrice',
	  [QuantityOrdered] 'CurrentQuantityOrdered',
	  [QuantityOrdered] 'OriginalQuantityOrdered',
	  [TotalUnits] 'QuantityReceived',
	  case when [QuantityOrdered] = 0 and [TotalUnits] < 0 then 0 else [QuantityOrdered] - [TotalUnits] end 'QuantityOutstanding',
	  0 'QuantityCancelled',
	  [TotalUnits] 'TotalQuantityBilled',
	  [AddedDate] 'ImportedDate',
	  [InvoiceDate] 'ClosedDateTime',
	  @PipelineId 'PipelineId',
	  [AddedDate] 'ReportedDate'
  FROM [Premier].[WholesalerInvoices]
    where ndc != '0')

END



--[Integrations].[InsertSalesRecordsUsingPremier] 'PremierWholesaleInvoice'

CREATE PROCEDURE [Integrations].[InsertSalesRecordsUsingPremier] @DataSource varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--insert into [dbo].[Customer]
--(clientid, AccountNumber, CustomerName)
--select distinct ifm.clientid, s.Account, 'Unknown - ' + s.Account
--from [Raw].[Sales] s
--  inner join [dbo].[ImportFileIDMapping] ifm
--     on s.[DataSource] = ifm.[ClientImportCode]
--  left join [dbo].[Customer] c
--     on s.[Account] = c.[AccountNumber]
--	and ifm.ClientId = c.ClientId
--where c.AccountNumber is null
--  and s.[DataSource] = @DataSource


merge [dbo].[Customer] AS tar
USING (select distinct a.clientid, a.Account, a.CustomerName, a.Address1 'Address1',
						a.Address2 'Address2',
						a.city, a.state, a.zipcode,
						string_agg(a.WholesalerAccountAttribute,',') as WholesalerAccountAttribute
						from (select distinct ifm.clientid, s.Account, 'Unknown - ' + s.Account CustomerName, 
						s.Address1, s.Address2, s.city, s.state, s.zipcode, s.WholesalerAccountAttribute
					from [Raw].sales s
					inner join [dbo].[ImportFileIDMapping] ifm
     on s.[DataSource] = ifm.[ClientImportCode] and s.WholesalerAccountAttribute is not null
	 left join [dbo].[Customer] c
     on s.[Account] = c.[AccountNumber]
	and ifm.ClientId = c.ClientId where s.[DataSource] = @DataSource
	) a 
	group by clientid, Account, Address1, Address2, city, state, zipcode, CustomerName) AS src
		ON --tar.[OrganizationNumber] = src.[HealthSystemID] and
		tar.AccountNumber = src.Account
		WHEN MATCHED 
		     AND (((tar.AddrLine1 is null and src.Address1 is not null) or tar.AddrLine1 != src.Address1)
		       or ((tar.AddrLine2 is null and src.Address2 is not null) or tar.AddrLine2 != src.Address2)
			   or ((tar.city is null and src.city is not null) or src.city != tar.city)
			   or ((tar.state is null and src.state is not null) or tar.state != src.state)
		       or ((tar.zip is null and src.zipcode is not null) or src.zipcode != tar.zip)
			   or ((tar.PriceList is null and src.WholesalerAccountAttribute is not null) or src.WholesalerAccountAttribute != tar.PriceList))
		    THEN
		   UPDATE SET
			  tar.AddrLine1 = src.Address1,
			  tar.AddrLine2 = src.Address2,
			  tar.city = src.city,
			  tar.state = src.state,
			  tar.PriceList = src.WholesalerAccountAttribute,
			  tar.zip = src.zipcode,
			  tar.DateChanged = getdate()
		WHEN NOT MATCHED THEN
		   INSERT
		   (
				ClientId,
				AccountNumber,
				--[OrganizationNumber],
				CustomerName,
				AddrLine1,
				AddrLine2,
				city,
				state,
				zip,
				PriceList
		   )
		   VALUES
		   (
				src.ClientId,
				src.Account,
				--src.[HealthSystemID],
				src.CustomerName,
				src.Address1,
				src.Address2,
				src.city,
				src.state,
				src.zipcode,
				src.WholesalerAccountAttribute
		   );

--ALTER INDEX ALL ON [dbo].[Sales] DISABLE;

insert into [dbo].[Sales]
	([ClientId],
	 [CustomerId],
	 [SupplierId],
	 [SupplierName],
	 [ItemId],
	 [TransactionDate],
	 [Ndc],
	 [ItemDescription],
	 [OrderNumber],
	 [LineNumber],
	 [OrderType],
	 [Qty],
	 [QtyOrdered],
	 [UnitCost],
	 [UnitPrice],
	 [UOM],
	 [InvoiceNumber],
	 [WholesalerAccountNumber],
	 [WholesalerCBID],
	 [CostofDistribution],
	 [PriceTypeGroupId],
 	 [Address1],
	 [Address2],
	 [City],
	 [State],
	 [ZipCode],
	 [QuarterDate],
	 [ImportedDate],
	 [DataSourceId],
	 [ProcessPipelineId],
	 [RepackagedFlag])
select ifm.[ClientId],
	   c.[CustomerId],
	   su.SupplierId SupplierId,
	   su.SupplierName SupplierName,
	   pi.ItemId,
       s.[TransactionDate],
       s.[Ndc],
       s.[ItemDescription],
       s.[OrderNumber],
       s.[LineNumber],
       s.[OrderType],
       s.[Qty],
	   s.[QtyOrdered],
      s.[UnitCost],
 s.[UnitPrice],
       s.[UOM],
       s.[InvoiceNumber],
	   s.[WholesalerAccountNumber],
	   s.[ChargeBackContractNumber],
	   s.[Markup/Markdown],
	   ptx.[PriceTypeGroupId],
	   s.[Address1],
	   s.[Address2],
	   s.[City],
	   s.[State],
	   s.[ZipCode],
	   format(ca.FirstDateOfQuarter,'yyyyMMdd') QuarterDate,
       s.[ImportedDate],
	   ifm.[DataSourceId],
	   s.[ProcessPipelineId],
	   case when s.OrderType in ('CPAK Return', 'DOD Order', 'DOD Return', 'Order CPAK') then 1 else 0 end RepackagedFlag
from [Raw].[Sales] s
  inner join [dbo].[ImportFileIDMapping] ifm
     on s.[DataSource] = ifm.[ClientImportCode]
  inner join [dbo].[Customer] c
     on s.[Account] = c.[AccountNumber]
	and ifm.ClientId = c.ClientId
  left join [dbo].[PharmacyItem] pi
     on s.ndc = pi.Ndc
  inner join Calendar ca
     on ifm.[ClientId] = ca.ClientId
	and s.TransactionDate = ca.CalendarDate
  left join Mapping.[PriceTypeGroupXref] ptx
	on c.ClientId = ptx.clientid
	and s.WholesalerAccountAttribute = ptx.[ClientPriceTypeCode]		
  left join supplier su
	on s.Wholesaler = su.SupplierName
where su.SupplierTypeId= 2 and su.MfrId is null and  s.[DataSource] = @DataSource

--ALTER INDEX ALL ON [dbo].[Sales] REBUILD;

insert into [Raw].[SalesDrops]
	([TransactionDate],
	 [Ndc],
	 [ItemDescription],
	 [Account],
	 [OrderNumber],
	 [LineNumber],
	 [OrderType],
	 [Qty],
	 [UOM],
	 [UnitCost],
	 [UnitPrice],
	 [InvoiceNumber],
	 [ImportCode],
	 [ImportedDate],
	 [ClientId],
	 [CustomerId],
	 [SupplierId],
	 [SupplierName],
	 [ProcessPipelineId]
	 )
select s.[TransactionDate],
       s.[Ndc],
       s.[ItemDescription],
	   s.[Account],
       s.[OrderNumber],
       s.[LineNumber],
       s.[OrderType],
       s.[Qty],
       s.[UOM],
       s.[UnitCost],
       s.[UnitPrice],
       s.[InvoiceNumber],
	   s.[ImportCode],
       s.[ImportedDate],
	   cl.[ClientId],
	   c.[CustomerId],
	   2 SupplierId,
	   null SupplierName,
	   s.[ProcessPipelineId]
from [Raw].[Sales] s
  inner join [dbo].[Client] cl
     on s.[ImportCode] = cl.[ImportCode]
  left join [dbo].[Customer] c
     on s.[Account] = c.[AccountNumber]
	and cl.ClientId = c.ClientId
where c.[CustomerId] is null
	and s.[DataSource] = @DataSource

--Log data activity
declare @BeginDate datetime
declare @EndData datetime

select @BeginDate = min([TransactionDate]), @EndData = max([TransactionDate])
from [Raw].[Sales]

exec [Integrations].[LogDataFeed] @DataSource, 'CustUtilization', @BeginDate, @EndData;


END

adf-ItemMaster-CMS-Receive-prod

CMS_AppendixB_Pull--pipeline name

stcogrxexternalprod==>202201-cms-addendum-b.zip==>https://stcogrxexternalprod.blob.core.windows.net/cmsdata/202201-cms-addendum-b.zip

select top 100 *  from [dbo].[AspPriceAndLimits_SI] order by updatedatetime asc

yes we are getting the data



                    DashboardManagerServiceQueries.GET_USER_DASHBOARDS_SQL
                        .Replace("***PERMISSION_CLAUSE***", DashboardManagerServiceQueries.PERMISSION_CLAUSE.Replace(RoleServiceQueries.
						WHERE_PERMISSION_FOR_ENTITY_REPLACE, RoleServiceQueries.WHERE_PERMISSION_FOR_ENTITY_CLAUSE))
                    , new {clientId = user.ClientId, userDataId = user.UserDataId}).ToList();
					
					
MULTIPLE DATABASE TO SINGLE DATABASE
--------------------------------------
QUERIES TO BE CLARIFIED
------------------------
Q1.As centura is a subset of commonspirit do we really need to handle it or it can consume the data from common spirit load
USEFUL Query

Q2. how to retrieve the client id or to build it?? may be using a new lookup table???

Q3.lookup table to maintain the healthsytem and facility direct parent id details?? is it a replacement of sync table??

Sample solution:
-----------------------
step1.Check if the facilitydirectparent id is null or not.
Using the clientlookup derive the clientid--> raw.premiercustomerlist
=========================PREMIER HIERARCHY PULL=======================================
SELECT COUNT(*),[Health System ID] FROM
(select *
from [Raw].[PremierCustomerList]
where ([Health System ID] in ('NY5011','CO5012')
    and [Facility Direct Parent ID] IN  ('NY0024','838509'))
    or [Facility ID] IN  ('NY0024','838509')
union ALL
select *
from [Raw].[PremierCustomerList]
where [Health System ID] in  ('CO5012','PA0023','MN2013','743692','WI0013')) X
GROUP BY X.[Health System ID]
=========================PREMIER HIERARCHY PULL=======================================
step2.copy from nationalwholesaler to client database
================================================================================================
step3.merge the customer table using [Premier].[UpdateCustomersFromPremier] 
---> In this step the clientid is derived from the following table [dbo].[ImportFileIDMapping]
---> we might need to remove the join on [dbo].[ImportFileIDMapping] as it is specific to a client. As we are moving to multiclient database, we have to enforce a robust mechanism that ensures we are only importing the required hierarchy data from the national wholesaler database
---> Ensure we are adding all the clients in the client table as we have relationship to that table
================================================================================================	
step4.Check if the facilitydirectparent id is null or not.
=========================PREMIER WHOLESALER PULL=======================================
SELECT COUNT(*),[Health System ID] FROM
(
select *
from [Premier].[WholesalerInvoices]
where ([HealthSystemID] in ('NY5011','CO5012')
   and [FacilityDirectParentID] IN  ('NY0024','838509'))
union ALL
select *
from [Premier].[WholesalerInvoices]
where [HealthSystemID] in  ('CO5012','PA0023','MN2013','743692','WI0013')) X
GROUP BY X.[Health System ID]
=========================PREMIER WHOLESALER PULL=======================================

step5. Copy the wholesaler invoice details into the client database
---> In this case we are going to load the data for all the clients
=============================================================================================
step6. Actual processing starts - Clearout Purchase Orders and Invoices(sp-[Premier].[ClearPoAndInvoices])
---> Get min invoice data from wholesalerinvoice table and delete any data which is greater than that date from sales and purchaseorder table
================================================================================================================
step7. Load Invoice and PO into Raw(sp-[Premier].[LoadInvoiceAndPO])
---> Truncate the below listed table and load the data from wholesaler invoices
	truncate table [Raw].[Sales]
	truncate table [Raw].[PurchaseOrders]
---> Add new column to hold client id in [Raw].[Sales] and [Raw].[PurchaseOrders]
---> Make sure the clientid definition is not null
============================================================================================================================
step8. Process Invoices(sp-[Integrations].[InsertSalesRecordsUsingPremier])
--->See how can we remove [dbo].[ImportFileIDMapping].we may remove this by handling the predicates and handle client id from the prior step. As the merge is happening on account number possible conflict for customers like common spirit and centura 
--->Datasource values is PremierWholesaleInvoice and PremierWholesalePO
--->calendar table elimination change -FORMAT(DATEADD(qq, DATEDIFF(qq, 0, TRANSACTIONDATE), 0),'yyyyMMdd') AS FQUARTER,

insert into [dbo].[Sales]
	([ClientId],
	 [CustomerId],
	 [SupplierId],
	 [SupplierName],
	 [ItemId],
	 [TransactionDate],
	 [Ndc],
	 [ItemDescription],
	 [OrderNumber],
	 [LineNumber],
	 [OrderType],
	 [Qty],
	 [QtyOrdered],
	 [UnitCost],
	 [UnitPrice],
	 [UOM],
	 [InvoiceNumber],
	 [WholesalerAccountNumber],
	 [WholesalerCBID],
	 [CostofDistribution],
	 [PriceTypeGroupId],
 	 [Address1],
	 [Address2],
	 [City],
	 [State],
	 [ZipCode],
	 [QuarterDate],
	 [ImportedDate],
	 [DataSourceId],
	 [ProcessPipelineId],
	 [RepackagedFlag],
	 [OrderDate],
     [ReasonCodeDesc])
select ifm.[ClientId],
	   c.[CustomerId],
	   su.SupplierId SupplierId,
	   su.SupplierName SupplierName,
	   pi.ItemId,
       s.[TransactionDate],
       s.[Ndc],
       s.[ItemDescription],
       s.[OrderNumber],
       s.[LineNumber],
       s.[OrderType],
       s.[Qty],
	   s.[QtyOrdered],
      s.[UnitCost],
 s.[UnitPrice],
       s.[UOM],
       s.[InvoiceNumber],
	   s.[WholesalerAccountNumber],
	   s.[ChargeBackContractNumber],
	   s.[Markup/Markdown],
	   ptx.[PriceTypeGroupId],
	   s.[Address1],
	   s.[Address2],
	   s.[City],
	   s.[State],
	   s.[ZipCode],
	   format(ca.FirstDateOfQuarter,'yyyyMMdd') QuarterDate,
       s.[ImportedDate],
	   ifm.[DataSourceId],
	   s.[ProcessPipelineId],
	   case when s.OrderType in ('CPAK Return', 'DOD Order', 'DOD Return', 'Order CPAK') then 1 else 0 end RepackagedFlag,
	   s.[OrderDate],
       s.[ReasonCodeDesc]
from [Raw].[Sales] s
  inner join [dbo].[ImportFileIDMapping] ifm
     on s.[DataSource] = ifm.[ClientImportCode]  (purpose--can we remove this or leaveit like that)
  inner join [dbo].[Customer] c
     on s.[Account] = c.[AccountNumber]
	and ifm.ClientId = c.ClientId (possible replace it with clientid from raw sales table)
  left join [dbo].[PharmacyItem] pi
     on s.ndc = pi.Ndc
  inner join Calendar ca
     on ifm.[ClientId] = ca.ClientId  (replace this join with FORMAT(DATEADD(qq, DATEDIFF(qq, 0, TRANSACTIONDATE), 0),'yyyyMMdd') AS FQUARTER)
	and s.TransactionDate = ca.CalendarDate
  left join Mapping.[PriceTypeGroupXref] ptx
	on c.ClientId = ptx.clientid
	and s.WholesalerAccountAttribute = ptx.[ClientPriceTypeCode]		
  left join supplier su
	on s.Wholesaler = su.SupplierName
where su.SupplierTypeId= 2 and su.MfrId is null and  s.[DataSource] = @DataSource   (passed value -PremierWholesaleInvoice)

--ALTER INDEX ALL ON [dbo].[Sales] REBUILD;

insert into [Raw].[SalesDrops]
	([TransactionDate],
	 [Ndc],
	 [ItemDescription],
	 [Account],
	 [OrderNumber],
	 [LineNumber],
	 [OrderType],
	 [Qty],
	 [UOM],
	 [UnitCost],
	 [UnitPrice],
	 [InvoiceNumber],
	 [ImportCode],
	 [ImportedDate],
	 [ClientId],
	 [CustomerId],
	 [SupplierId],
	 [SupplierName],
	 [ProcessPipelineId]
	 )
select s.[TransactionDate],
       s.[Ndc],
       s.[ItemDescription],
	   s.[Account],
       s.[OrderNumber],
       s.[LineNumber],
       s.[OrderType],
       s.[Qty],
       s.[UOM],
       s.[UnitCost],
       s.[UnitPrice],
       s.[InvoiceNumber],
	   s.[ImportCode],
       s.[ImportedDate],
	   cl.[ClientId],
	   c.[CustomerId],
	   2 SupplierId,
	   null SupplierName,
	   s.[ProcessPipelineId]
from [Raw].[Sales] s
  inner join [dbo].[Client] cl
     on s.[ImportCode] = cl.[ImportCode]
  left join [dbo].[Customer] c
     on s.[Account] = c.[AccountNumber]
	and cl.ClientId = c.ClientId
where c.[CustomerId] is null
	and s.[DataSource] = @DataSource   (passed value -PremierWholesaleInvoice)
=========================================================================================================
	
step9. Process supplier records(sp-[Integrations].[MergeSuppierRecordsFromPo])

---> datesource = PremierWholesalePO
---> client id can be introducted from raw.purchaseorder
---> This process updates the customersupplier table with merge process. 
join happens on puchaseorder and clientimportcode field. We might need to pass the client id globally
-------------------------------------------------------------------------------------------------------
|ImportFileMapId|ClientImportCode              |Description             |ClientId|DataSourceId|PayerId|
|---------------|------------------------------|------------------------|--------|------------|-------|
|1              |PremierWholesaleInvoice       |PremierWholesaleInvoice |5       |17          |       |
|2              |PremierWholesalePO            |PremierWholesalePO      |5       |17          |       |
|3              |PA0023                        |Premier Health System Id|5       |17          |       |
|4              |FdaRecall                     |                        |        |1           |       |
|5              |WoltersKluwerManufacturer     |                        |        |10          |       |
|6              |WoltersKluwerItem             |                        |        |10          |       |
|7              |WoltersKluwerAhfs             |                        |        |10          |       |
|8              |WoltersKluwerPharmItemAhfs    |                        |        |10          |       |
|9              |WoltersKluwerNationalItemPrice|                        |        |10          |       |
|10             |WoltersKluwerFedGovItemPrice  |                        |        |10          |       |
|11             |WoltersKluwerASPItemPrice     |                        |        |10          |       |
|12             |WoltersKluwerGPI              |                        |        |10          |       |
|15             |FdaShortages                  |                        |        |1           |       |
|16             |FdaExclusivityCodes           |                        |        |1           |       |
|17             |FdaPatentUseCodes             |                        |        |1           |       |
|18             |FdaProductApplication         |                        |        |1           |       |
|19             |FdaProductExclusivity         |                        |        |1           |       |
|20             |FdaProductPatent              |                        |        |1           |       |
|21             |ASHPShortages                 |                        |        |19          |       |
|22             |FdaProductCode                |                        |        |1           |       |
=================================================================================================================
step10.Process Customer Item Records(sp-[Integrations].[MergeCustomerItemRecordsFromPo])
---> similar merge process as step 9
---> [dbo].[CustomerItem]--impacted table. might need to bring the cliendid from the top
=====================================================================================================
step11.Merge Purchase Orders(sp-[Integrations].[MergePurchaseOrderRecords])
---> Need to make change to the following table [Mapping].[PriceTypeGroupXref]
---> possible handle the clientid from raw.purchaseorder
================================================================================================================
step12.Insert Customer Item Price(sp-[Integrations].[MergeAquisitionCost_Premier])

----> getting the clientid and datasource details from ImportFileIDMapping?? how to fix?
----> using premier.wholeslarinvoice cte is written

--[Integrations].[MergeAquisitionCost_Premier] 'PremierWholesaleInvoice'

CREATE PROCEDURE [Integrations].[MergeAquisitionCost_Premier] @DataSource varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

declare @clientid int = (select clientid from [ImportFileIDMapping] where [ClientImportCode] = @DataSource);
declare @DataSourceId int = (select DataSourceId from [ImportFileIDMapping] where [ClientImportCode] = @DataSource);

Drop table if exists #temp_Premier_Pricing;

with Prices AS 
(
  Select FacilityID, 
        Wholesaler, 
		WholesalerPurchaseType, 
		su.[SupplierId] 'SupplierId', 
		--CASE WholesalerPurchaseType  
		--	WHEN 'Premier Contract' THEN 3  
		--	WHEN 'Wholesaler Contract' THEN 3  
		--	WHEN 'Other Contract' THEN 3  
		--	WHEN 'Private Contract' THEN 3  
		--	WHEN 'Non Contract' THEN 3  
		--	WHEN 'DSH' THEN 2  
		--	WHEN '340B' THEN 2  
		--	WHEN 'WAC' THEN 11  	
		--	ELSE null
		--END 'PriceListId',
		p.PriceListId as PriceListId,
		Ndc, 
		InvoiceDate, 
		InvoicePrice, 
		wi.Wholesaler 'DistributorAccountNo'
from [Premier].[WholesalerInvoices] wi
		inner join supplier su
	on wi.Wholesaler = su.SupplierName
			left join PriceList p on p.PriceListDescription=coalesce(wi.WholesalerAccountAttribute,'UNK')
 where su.SupplierTypeId= 2 and su.MfrId is null and ndc != '0'),
PriceRank AS (
select FacilityID, 
        Wholesaler, 
		SupplierId,
		WholesalerPurchaseType, 
		Ndc, 
		InvoiceDate, 
		InvoicePrice,
		PriceListId,
		rank() over (partition by FacilityID, SupplierId, PriceListId, Ndc order by InvoiceDate desc) rnk,
		DistributorAccountNo
from Prices),
PriceCodes as ( 
select FacilityID, 
       Wholesaler,
	   SupplierId,
	   WholesalerPurchaseType,
	   Ndc,
	   InvoiceDate,
	   InvoicePrice,
	   PriceListId,
	   ROW_NUMBER() over (partition by SupplierId, FacilityID, Ndc, PriceListId order by InvoiceDate desc) Seq,
	   DistributorAccountNo
from PriceRank
where rnk = 1)
select @clientid 'clientid', 
	   SupplierId 'CpSupplierID',
	   c.CustomerId 'CustomerId',	    
	   pc.Ndc 'NDC',
	   pi.itemid 'ItemId',
	   pc.InvoicePrice 'PriceAmount',
	   InvoiceDate 'PriceStartDate',
	   PriceListId,
	   @DataSourceId 'DataSourceId',
	   DistributorAccountNo
into #temp_Premier_Pricing
from PriceCodes pc
	inner join customer c
		on c.ClientId = @clientid
		and pc.FacilityID = c.AccountNumber
	inner join [dbo].[PharmacyItem] pi
		on pc.ndc = pi.ndc
where seq = 1;


Insert into [dbo].[CustomerItemPricingHistory]
	(ActionType,
	 CustomerItemPriceId,
	 ClientId,
	 CpSupplierID,
	 ItemId,
	 PriceAmount,
	 PriceStartDate,
	 CustomerId,
	 PriceListId,
	 DataSourceId,
	 DateChanged,
	 [Status],
	 PriceChangeDate, 
	 OldPrice, 
	 PercentageChange,
	 DistributorAccountNo
)
select m.ActionType,
	   m.CustomerItemPriceId,
	   m.ClientId,
	   m.CpSupplierID,
	   m.ItemId,
	   m.PriceAmount,
	   m.PriceStartDate,
	   m.CustomerId,
	   m.PriceListId,
	   m.DataSourceId,
	   m.DateChanged,
	   m.[Status],
	   m.PriceChangeDate, 
	   m.OldPrice, 
	   m.PercentageChange,
	   m.DistributorAccountNo
From
	(MERGE [dbo].[CustomerItemPricing] AS tar
		USING (select clientid,
					   CpSupplierID,
					   CustomerId,
					   Ndc,
					   ItemId,
					   PriceAmount,
					   PriceStartDate,
					   PriceListId,
					   DataSourceId,
					   DistributorAccountNo
				from #temp_Premier_Pricing) AS src
		ON tar.[ClientId] = src.[ClientId]
		and tar.[CpSupplierID] = src.[CpSupplierID] 
		and tar.[ItemId] = src.[ItemId]
		and tar.[CustomerId] = src.[CustomerId]
		and tar.[PriceListId] = src.[PriceListId]
		and tar.[DataSourceId] = src.[DataSourceId]
		WHEN MATCHED 
		     AND (tar.PriceAmount != src.PriceAmount
		       or tar.PriceStartDate != src.PriceStartDate
			   or tar.DistributorAccountNo != src.DistributorAccountNo
  			   or (src.DistributorAccountNo is null and tar.DistributorAccountNo is not null)
			   or (src.DistributorAccountNo is not null and tar.DistributorAccountNo is null)
			   or tar.[status] = 'I')
		    THEN
		   UPDATE SET
			  tar.PriceChangeDate = case when tar.PriceAmount != src.PriceAmount then GetDate() else tar.PriceChangeDate end,
			  tar.OldPrice = case when tar.PriceAmount != src.PriceAmount then tar.PriceAmount else tar.OldPrice end,
			  tar.PercentageChange = case when (tar.PriceAmount != src.PriceAmount) and (tar.PriceAmount != 0) then [Integrations].[CalculatePriceChangePercentage](src.PriceAmount,tar.PriceAmount)  else tar.PercentageChange end,
			  tar.PriceAmount = src.PriceAmount,
			  tar.PriceStartDate = src.PriceStartDate,
			  tar.DateChanged = getdate(),
			  tar.[Status] = 'A',
			  tar.DistributorAccountNo = src.DistributorAccountNo
		WHEN NOT MATCHED THEN
		   INSERT
		   (
				ClientId, 
				CpSupplierID,
				ItemId,
				PriceAmount,
				PriceStartDate,
				CustomerId,
				PriceListId, 
				DataSourceId,
				[Status],
				ndc,
				DistributorAccountNo
		   )
		   VALUES
		   (
				src.ClientId, 
				src.CpSupplierID,
				src.ItemId,
				src.PriceAmount,
				src.PriceStartDate,
				src.CustomerId,
				src.PriceListId, 
				src.DataSourceId,
				'A',
				src.ndc,
				src.DistributorAccountNo
		   )
		WHEN NOT MATCHED BY SOURCE
		  and tar.clientid in (select clientid from [dbo].[ImportFileIDMapping] where ClientImportCode = @DataSource)
		  and tar.CpSupplierID in (select CpSupplierID from [dbo].[ImportFileIDMapping] where ClientImportCode = @DataSource)
		  and tar.[CustomerId] in (select [CustomerId] from [dbo].[ImportFileIDMapping] where ClientImportCode = @DataSource)
		  and tar.PriceListId in (select PriceListId from [dbo].[ImportFileIDMapping] where ClientImportCode = @DataSource)
		  and tar.DataSourceId in (select DataSourceId from [dbo].[ImportFileIDMapping] where ClientImportCode = @DataSource)
   	      AND tar.[status] = 'A' THEN
		UPDATE SET
			  tar.[status] = 'I'
		OUTPUT
		   CASE WHEN deleted.[status] = 'A' and inserted.[status] = 'I' Then 'DELETED' 
		        WHEN deleted.[status] = 'I' and inserted.[status] = 'A' Then 'REACTIVATED'
				WHEN $action = 'UPDATE' Then 'UPDATED'
				WHEN $action = 'INSERT' Then 'INSERTED'
		        ELSE $action End as ActionType,
		   CASE WHEN $action = 'INSERT' then null else deleted.CustomerItemPriceId End as CustomerItemPriceId,
		   CASE WHEN $action = 'INSERT' then inserted.ClientId else deleted.ClientId End as ClientId,
		   CASE WHEN $action = 'INSERT' then inserted.CpSupplierID else deleted.CpSupplierID End as CpSupplierID,
		   CASE WHEN $action = 'INSERT' then inserted.ItemId else deleted.ItemId End as ItemId,
		   CASE WHEN $action = 'INSERT' then inserted.PriceAmount else deleted.PriceAmount End as PriceAmount,
		   CASE WHEN $action = 'INSERT' then inserted.PriceStartDate else deleted.PriceStartDate End as PriceStartDate,
		   CASE WHEN $action = 'INSERT' then inserted.CustomerId else deleted.CustomerId End as CustomerId,
		   CASE WHEN $action = 'INSERT' then inserted.PriceListId else deleted.PriceListId End as PriceListId,
		   CASE WHEN $action = 'INSERT' then inserted.DataSourceId else deleted.DataSourceId End as DataSourceId,
		   CASE WHEN $action = 'INSERT' then inserted.DateChanged else deleted.DateChanged End as DateChanged,
		   CASE WHEN $action = 'INSERT' then inserted.Status else deleted.Status End as [Status],
		   CASE WHEN $action = 'INSERT' then inserted.PriceChangeDate else deleted.PriceChangeDate End as PriceChangeDate,
		   CASE WHEN $action = 'INSERT' then inserted.OldPrice else deleted.OldPrice End as OldPrice,
		   CASE WHEN $action = 'INSERT' then inserted.PercentageChange else deleted.PercentageChange End as PercentageChange,
		   CASE WHEN $action = 'INSERT' then inserted.DistributorAccountNo else deleted.DistributorAccountNo End as DistributorAccountNo
	) as M; 

	if @@error = 0
	begin
		--Log data activity
		declare @BeginDate datetime
		declare @EndData datetime

		select @BeginDate = min([BeginDate]), @EndData = max([EndDate])
		from [Raw].[AcquisitionCost]
		where [DataSource] = @DataSource

		exec [Integrations].[LogDataFeed] @DataSource, 'PriceList', @BeginDate, @EndData;
	end

END

build price disruptions:
=========================


	exec [PriceDisruptions].[BuildWacPricekey]    --seems no impact, what will happen if we run with full data??

	exec [PriceDisruptions].[BuildTransform] -- client id as null is referenced in the calendar table. Healthsytemid is used

	exec [PriceDisruptions].[BuildAvgPrices]  -- no impact

	exec [PriceDisruptions].[BuildRawInvoices]  -- no impact

	exec [PriceDisruptions].[BuildFilledUnitsGpi]  -- no impact

	exec [PriceDisruptions].[BuildContractCount] -- no impact

	exec [PriceDisruptions].[BuildIncidentsGpi] -- no impact, healthsytem id is used

	exec [PriceDisruptions].[BuildIncidentsNdc] -- no impact, healthsytem id is used

	exec [PriceDisruptions].[BuildIncidentsGpiMfr] -- no impact, healthsytem id is used

	exec [PriceDisruptions].[BuildResultsGpi] -- no impact, healthsytem id is used

	EXEC [PriceDisruptions].[BuildResultsNdc] -- no impact, healthsytem id is used


daily cognitive process:
===========================
[DailyMaintinance].[RebuildCustomerPriceList]  ---> clientid is involved. seems no impact
[DailyMaintinance].[MergeCurrentNationalPricing] ---> National details
[DailyMaintinance].[RebuildPharmacyItemEqKey] ---> item master details update
[DailyMaintinance].[RebuildSalesTotal] ---> clientid is involved. seems no impact
[DailyMaintinance].[ReBuildMonthlyCustomerItemPrice] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[RebuildSalesPercentile] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[RebuildLeadTimes] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildLeadTimeSummaryMV] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildOrganizationProductTop5MV]  ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildAcctProductsTop5MV]   ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildAcctSummaryMV] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildSupplierSummaryMV] ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[ReBuildOrganizationSummaryMV]  ---> client id is involved but through out the process it is is handled.
[DailyMaintinance].[AssignItemIdsForNewItems]   ---> No impact
[DailyMaintinance].[ReBuildMarginViewsMV]  ---> impacted. how to allow all client id
DailyMaintinance.RebuildTrackingBuyIns ---> client id . possibly can impact
[DailyMaintinance].[TrackedProjectCompletionByDate]  ---> no clientid. no impact
[DailyMaintinance].[RecalculateContractPriceAmount] ---> no clientid. no impact
[DailyMaintinance].[ReCalculateShortageCost] ---> ensure all the client details are available in CustomerDrugShortage
[DailyMaintinance].[LoadSignalsToNationalWatchController]  ---> internally calls LoadSignalsToNationalWatch, No clientid usage
[DailyMaintinance].[DeactivateExpiredWatched]  ---> No impact
[DailyMaintinance].[LoadNationalWatchToClientWatch] ---> clientid involved. seems no issues as they in predicates
[DailyMaintinance].[DemoDataDateThingy]   ---> No impact
[DailyMaintinance].[DemoDataMasking] ---> No impact
[DailyMaintinance].[UpdateSupplierWithMfr] ---> No impact. supplier details update
[dbo].[CreatePriceOpps_HCPharm]  ---> Not sure if this is still used?
[dbo].[CreatePriceOpps_Premier]   ---> Not sure if this is still used?
DailyMaintinance.RebuildFacilityStatus"  ---> No impact
DailyMaintinance.RebuildHcpcsStatus  ---> No impact


prod issues:
==========================


Execution fail against sql server. Sql error number: 515. Error Message: Cannot insert the value NULL into column 'OrderType', table 'sqldbCogRxProdCommonSpirit.Raw.Sales'; column does not allow nulls. INSERT fails.
The statement has been terminated.

503b issue:
--------------



Wholesaler masking process:
==================================

Hierarchy:
----------
step 1 : load the hierarchy data into a temp/new table
step 2 : Create a SP to mask the hierarchy data and assign the client id
step 3 : Pass in the data to the downstream like any other hierarchy data

Wholesaler feed:
-----------

step 1 : create the below two table in national wholesaler database
truncate table xrefwanload;
truncate table xrefcbidload;
step 2 : load the sales data into temp table ,apply the masking using a sp,assign clientid and finally load into the main table like any other wholesaler data.
step 3 : Mask the facility id of the sales data.


["1e56ee8a-4d6d-4a7d-a8f1-5595fdbf2685","6f1de5d2-8553-42eb-8b32-bac1349edf6f","587e9216-0a97-4314-af69-dc8039e44540","ad1a0165-bcd0-4c07-b24e-fb65bb231e66","6ed00f30-dfc8-4767-9b88-92aaaf9eae50","00a21348-d6e3-45e4-b837-ad57969166bd","bfe17258-50f9-421d-badf-95f190000f96","1a29b973-41f6-4ed3-aad6-eb8353d88520","c4a12614-f42c-4f5d-8037-a6712878e602","2acfc7b0-a1dd-48d9-b35c-37d103d63e07"]
e:\akenned2\source\repos\marginanalysis\api\MA_Common\Services\Product\Queries\ProductSearchQueries.cs



e:\akenned2\source\repos\marginanalysis\api\MA_Common\Services\Product\Queries\ProductQueries.cs




itemmaster sync:
---------------------------
-- SyncControl.SecretsByDataFactory_vw source



CREATE VIEW SyncControl.SecretsByDataFactory_vw
AS
SELECT DISTINCT 
			SyncControl.SyncList.Secret, 
			SyncControl.SyncDataFactoryList.DataFactoyName, 
			SyncControl.SyncDataFactoryList.PiplineName
FROM            SyncControl.SyncDataFactoryList INNER JOIN SyncControl.SyncList 
				ON SyncControl.SyncDataFactoryList.ListName = SyncControl.SyncList.ListName;

use this and replicate in synccontrol.synclist and add combined db secret
SyncListId	Application	Enviroment	ListName	Secret
10	CognitiveRx	Prod	NationalPriceDisruptions	Secret-CogRX-DB-CommonSpirit

changing hierarchy:
--------------------

with DemoCustomers as (
select * from raw.democustomerlist ),
IndirectCustomers as (
select *
from
	[Raw].[PremierCustomerList]
where
	([Health System ID] in ('NY5011', 'CO5012')
and [Facility Direct Parent ID] IN ('NY0024', '838509'))
or  [Facility ID] IN ('NY0024', '838509')),
DirectCustomers as (
select *
from [Raw].[PremierCustomerList]
where [Health System ID] in  ('CO5012','PA0023','MN2013','743692','WI0013')),

DistinctDirectParent as (
select * from DemoCustomers


CENTURA - 8  -- 838509
AA - 7 - WI0013
COMMONSPIRIT -2  -- CO5012
PRODDEMO -1  -- NC9999
NORTHWELL - 4  -- NY0024
FAIRVIEW - 3  -- MN2013
STLUKES - 5  -- PA0023
UPMC - 6  -- 743692


BEFORE JOIN
82	PA0023
145	MN2013
553	WI0013
1833	CO5012
56	NY5011
88	743692

	0
1	3
2	1723
3	145
4	55
5	82
6	88
7	553
8	109



---------------------------
customer data load



https://management.azure.com/subscriptions/d0521c58-92af-4b80-9809-8cd793aa9393/resourceGroups/rg-CognitiveRx-CommonSpirit-Prod/providers/Microsoft.Sql/servers/sqlcogrxprodcommonspirit/databases/sqldbCogRxDevAppCombined?api-version=2017-10-01-preview




sqlcogrxprodcommonspirit.database.windows.net


dbcc checkident ('dbo.CustomerPriceList', reseed, 0);


create a serviceprincipal
create a user in sql with same name with name as external
create user {name} from external provider





tenant id - 08a55b34-bb83-493c-912d-6cf771262b6a


Name: SP_APP_CogRx_NP
Client ID: 9816452e-bb13-4210-9348-e11a321be7f0
Secret: tS78Q~w_McZS7vENKTWH4cUezuhV7nSH3ZcmpadE


sqlcogrxdevdemodev50ft 

wk-medispan changes:
====================

adf-ItemMaster-MasterData-Receive-prod

---sp changes

-----

changes in progress:

9_SyncItemMasterCognativeRxFDA_Configurable_Mem_Tenant

parameters:

dburl
dbname
dbtenant
dbserviceprincipal
dbsecret - Secret-CogRX-DB-CombinedApp-Member-Dev


dsdburl
dsdbname
dsdbtenant
dsdbserviceprincipal
dsdbsecret


pldburl
pldbname
pldbtenant
pldbserviceprincipal
pldbsecret

@dataset().dsdburl
@dataset().dsdbname

@pipeline().parameters.pldburl
@pipeline().parameters.pldbname
@pipeline().parameters.pldbtenant
@pipeline().parameters.pldbserviceprincipal
@pipeline().parameters.pldbsecret


@dataset().dsdburl
@dataset().dsdbname
@dataset().dsdbtenant
@dataset().dsdbserviceprincipal
@dataset().dsdbsecret





            "lsdburl":  "sqlcogrxdevdemodev50ft.database.windows.net"
            },
            "lsdbname":  "sqldbcogrxdevdemo"
            },
            "lsdbtenant":  "08a55b34-bb83-493c-912d-6cf771262b6a"
            },
            "lsdbserviceprincipal":  "9816452e-bb13-4210-9348-e11a321be7f0"
            },
            "lsdbsecret": "Secret-CogRX-DB-CombinedApp-Member-Dev"
            }
			
			
COGRX-1569 - discuss with michael




--delete the roi_check_date

--need to rename the colums of roi tracking
delete from dbo.CustomerPriceList where CustomerId in (66,67,68)


select * from dbo.ROI_Tracking

select * from dbo.PurchaseOrderHistory
-------------------------------
--actual quantity - backend unit qty field from dbo.sales(include the start and end date), dollar value =  qty * unitprice
select  distinct qty,qtyordered,* from dbo.sales

-----------------------------------------------------------------------------------------
Medispan analysis

Approx 35 file are landing in medispan directory
========> customer organization 



from premiercustomerlist
				fm.ClientId, 
                [Facility Direct Parent ID] 'OrganizationNumber', 
				[Facility Direct Parent] 'OrganizationName' ,
				1 'IsActive'
					   

				src.ClientId,
				src.OrganizationNumber,
				src.OrganizationName,
				src.IsActive

========> customer table

from premiercustomerlist

fm.ClientId 'clientid', 
					pcl.[Facility ID] 'AccountNumber', 
					pcl.[Facility Name] 'CustomerName', 
					pcl.[Facility AddrLine1] 'Address1', 
					pcl.[Facility AddrLine2] 'Address2', 
 					pcl.[Facility City]      'City',
					pcl.[Facility State]     'State', 
					pcl.[Facility Zip]       'Zip',
					pcl.[Facility DEA]       'DEA',
					pcl.[Premier_Relation]       'Premier_Relation',
					pcl.[SPC]       'SPC',
					pcl.[Division Name]       'Division Name',
					pcl.[DivisionId]       'DivisionId',
					co.CustomerOrganizationId 'CustomerOrganizationId', 
					case when fm.ClientImportCode='NY5011' or fm.ClientId = 8 then pcl.[Facility Direct Parent ID] else pcl.[Health System ID] end 'OrganizationNumber',
					case when fm.ClientImportCode='NY5011' or fm.ClientId = 8  then pcl.[Facility Direct Parent] else pcl.[Health System] end 'OrganizationName'
					

2021-03-02 00:00:00.000

				ClientId,
				AccountNumber,
				CustomerName,
				CustomerOrganizationId,
				OrganizationNumber,
				OrganizationName,
				AddrLine1,
				AddrLine2,
				City,
				State,
				Zip,
				DEA,
				Premier_relation,
				SPC,
				[DivisionName],
				DivisionId
				
				
---building customer table using sales records
USING (select distinct a.clientid, a.Account, a.CustomerName, a.Address1 'Address1',
						a.Address2 'Address2',
						a.city, a.state, a.zipcode,
						string_agg(a.WholesalerAccountAttribute,',') as WholesalerAccountAttribute
						from (select distinct ifm.clientid, s.Account, 'Unknown - ' + s.Account CustomerName, 
						s.Address1, s.Address2, s.city, s.state, s.zipcode, s.WholesalerAccountAttribute
					from [Raw].sales s
					
					
|name                          |type_desc           |is_updated|
|------------------------------|--------------------|----------|
|Demasking                     |SQL_STORED_PROCEDURE|1         | ACTIVE
|InsertSalesRecordsUsingPremier|SQL_STORED_PROCEDURE|1         | ACTIVE
|Masking                       |SQL_STORED_PROCEDURE|1         | ACTIVE
|RebuildFacilityStatus         |SQL_STORED_PROCEDURE|1         | ACTIVE
|UpdateCustomerAccount         |SQL_STORED_PROCEDURE|1         | OBSOLTE
|UpdateCustomersFromPremier    |SQL_STORED_PROCEDURE|1         | ACTIVE
|UpdateCustomersFromPremierTest|SQL_STORED_PROCEDURE|1         | OBSOLETE



SELECT  
        SCHEMA_NAME(sysobject.schema_id),
        OBJECT_NAME(stats.object_id), 
        stats.last_execution_time
    FROM   
        sys.dm_exec_procedure_stats stats
        INNER JOIN sys.objects sysobject ON sysobject.object_id = stats.object_id 
    WHERE  
        sysobject.type = 'P'
    ORDER BY
           stats.last_execution_time DESC  
		   
		   
blob storage detail : stcogrxexternalprod
Container 		    : premierdata
Folderpath  		: /ShortageAlerts/{currentdate}_Alerts.Done	   
/subscriptions/ec3351ae-ee07-42d6-9b13-6a4c8ff6eda2/resourceGroups/CogRxDEV_East/providers/Microsoft.Sql/servers/sqlcogrxdevdevoapd/databases/sqldbCogRxDevApp


Dev details:
================
adls gen2 : cogrxpremierdatastore
Container and path : /premierdata/IPDpatent/2022/09/16/IPDpatent.csv

2022 - current day year
08    - current day month
16   - current day

Trigger setup :  After writing the above data file, below mentioned trigger file has to be written in the mentioned path

Blob storage : cogrxpremierdatastore
Container and path : /premierdata/IPDpatent/Trigger/{currentdate}_IPDpatent.Done
currentdate - 20220816





Prod details
===================

Blob storage : stcogrxexternalprod
Container and path : /premierdata/IPDpatent/2022/09/16/IPDpatent.csv

2022 - current day year
08    - current day month
16   - current day

Trigger setup :  After writing the above data file, below mentioned trigger file has to be written in the mentioned path

Blob storage : stcogrxexternalprod
Container and path : /premierdata/IPDpatent/Trigger/{currentdate}_IPDpatent.Done
currentdate - 20220816


NDC,
FACILITY,
WHOLESALER,
ACCOUNT TYPE,
CLIENTID,
USERID,
USERNAME,
STATUS



server--sqlcogrxdevdevoapd.database.windows.net
db --sqldbCogRxDevApp
tenant - 08a55b34-bb83-493c-912d-6cf771262b6a
serviceprinciapl - 9816452e-bb13-4210-9348-e11a321be7f0
keyvault secret - Secret-CogRX-DB-CombinedApp-Member-Dev


ItemMasterSync.ManufacturerType

Manufacturer


[ItemMasterSync].[ManufacturerLabeler]

ItemMasterSync.ManufacturerLabelerType
ManufacturerLabeler


cogrx-1473
------------
Deployment of client and api changes
Deploy app services from corporate tenant to dev region of member tenant. cogrx-1473

Re-base/Fast-forward/or cherry-pick branch "feature/eboykin_appconfig" to the current master branch of MarginAnalysis. Then build and deploy to 2.0 app service.

cogrx-1469
-------------
cicd for sqldb from corporate tenant to member tenant(dev, test, preprod,prod) 



delete  from dbo.Manufacturer
		delete from dbo.ManufacturerLabeler
	delete from dbo.Supplier
	delete from dbo.ImportFileIDMapping
	delete from dbo.DataFeedLog
     

|clientid|       |
|--------|-------|
|3       |4248211|
|4       |1439486|
|5       |705731 |
|2       |6718733|
|8       |799119 |
|7       |5006974|
|1       |318304 |
|6       |2089127|


|clientid|        |
|--------|--------|
|1       |636608  |
|2       |13437466|
|3       |8496422 |
|4       |2878972 |
|5       |1411462 |
|6       |4178254 |
|7       |10013948|
|8       |1598238 |


{
    "count": 1,
    "value": [
        {
            "Member_Environment": "Dev",
            "Member_azure_sql_url": "sqlcogrxdevdevoapd.database.windows.net",
            "Member_azure_db": "sqldbCogRxDevApp",
            "Member_Tenant": "08a55b34-bb83-493c-912d-6cf771262b6a",
            "Member_Service_Principal": "9816452e-bb13-4210-9348-e11a321be7f0",
            "Member_Secret": "Secret-CogRX-DB-CombinedApp-Member-Dev"
        }
    ],
    "effectiveIntegrationRuntime": "AutoResolveIntegrationRuntime (East US)",
    "billingReference": {
        "activityType": "PipelineActivity",
        "billableDuration": [
            {
                "meterType": "AzureIR",
                "duration": 0.016666666666666666,
                "unit": "DIUHours"
            }
        ]
    },
    "durationInQueue": {
        "integrationRuntimeQueue": 0
    }
}


truncate table xrefwanload;
truncate table xrefcbidload;

with distinctWan
as (select distinct WholesalerAccountNumber from Sales where clientid = 1)
   , xrefWan
as (select 'WAN-' + cast(row_number() over (order by WholesalerAccountNumber asc) as varchar(25)) as Maskwan
         , WholesalerAccountNumber
    from distinctWan) 
insert into dbo.xrefwanload
		(Maskedwan ,
		WholesalerAccountNumber) 
 select Maskwan,
 		WholesalerAccountNumber 
 		from xrefwan;
 	
 	
with distinctCbid
as (select distinct WholesalerCBID from Sales where clientid = 1)
   , xrefCbid
as ((select 'CBID-' + cast(row_number() over (order by WholesalerCBID asc) as varchar(25)) as maskcbid
          , WholesalerCBID
     from distinctCbid))
insert into dbo.xrefcbidload
		(Maskedcbid ,
		WholesalerCBID) 
 select maskcbid,
 		WholesalerCBID 
 		from xrefCbid;

update sa 
set sa.WholesalerAccountNumber = wa.maskedwan
from dbo.sales sa join xrefwanload wa on sa.WholesalerAccountNumber = wa.WholesalerAccountNumber
where sa.clientid = 1;
    
update sa 
set sa.WholesalerCBID = wa.Maskedcbid
from dbo.sales sa join xrefcbidload wa on sa.WholesalerCBID = wa.WholesalerCBID    
where sa.clientid = 1

"PA5036",
"NJ5062/809162",
"NJ5061/809161",
"655027",
"PA2196",
"PA2586",
"PA5025",
"730437",
"PA1151",
"PA1152",
"742292",
"PA2033",
"691507",
"PA0025",
"PA2108",
"619908",


PA5036,
NJ5062/809162,
NJ5061/809161,
655027,
PA2196,
PA2586,
PA5025,
730437,
PA1151,
PA1152,
742292,
PA2033,
691507,
PA0025,
PA2108,
619908,


update dbo.customer 
set status = 'I'
where accountnumber not in 
(
'PA5036',
'NJ5062','809162',
'NJ5061','809161',
'655027',
'PA2196',
'PA2586',
'PA5025',
'730437',
'PA1151',
'PA1152',
'742292',
'PA2033',
'691507',
'PA0025',
'PA2108',
'619908')


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [DailyMaintinance].[UpdatingRoiActualQty]
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
-- updating quantity
    WITH Ndcwithenddate
    AS (
        SELECT NDC
            , ROI_Start_Date
            , Roi_end_date
        FROM dbo.ROI_information i
        WHERE i.roi_end_date IS NOT NULL
        )
        , RoiSales
    AS (
        SELECT sum(qty) AS ActualQuanitycalculated
           -- , sum(qty * UnitCost) AS dollarvalue
            , sa.ndc
            , sa.clientid
        FROM dbo.sales AS sa
        JOIN Ndcwithenddate AS ra
            ON sa.ndc = ra.ndc
        WHERE sa.transactiondate >= ra.ROI_Start_Date
            AND sa.transactiondate <= ra.ROI_end_Date
        GROUP BY sa.ndc
            , sa.clientid
        )
    UPDATE track
    SET track.Actual_Quantity = s.ActualQuanitycalculated,
        track.Status = 'Pending ROI',
        track.Actual_Percentage_Increase = s.Actual_Percentage_Increase
    FROM dbo.ROI_tracking track
    JOIN RoiSales s
        ON track.ndc = s.ndc
            AND track.clientid = s.clientid;

-- updating status

/*WITH Ndcwithenddate
    AS (
        SELECT NDC
            , ROI_Start_Date
            , Roi_end_date
            , Actual_Percentage_Increase
        FROM dbo.ROI_information i
        WHERE i.roi_end_date IS NOT NULL
        )
    UPDATE dbo.ROI_tracking
    SET r.Status = 'Pending ROI',
        r.Actual_Percentage_Increase = s.Actual_Percentage_Increase
    FROM dbo.ROI_tracking r
    JOIN Ndcwithenddate s
        ON r.ndc = s.ndc
            AND r.clientid = s.clientid;*/

END
GO

sqlcogrxtsttstu2kn.database.windows.net
sqldbcogrxtstapp


--mdd2.5

LoadWoltersKluwerMF2Files



-- sqldbCogRxProdItemMaster.dbo.IPD_Patent definition

-- Drop table

-- DROP TABLE sqldbCogRxProdItemMaster.dbo.IPD_Patent;


	[Brand Drug Name] ,
	[Generic Name] ,
	[Brand Company] ,
	[Therapeutic Area] ,
	[US Brand Sales ($bln)] ,
	[Orange Book Patents] ,
	[Pediatric Exclusivity] ,
	[Patent Comments] ,
	[Related Litigation Comments] ,
	[Paragraph IV Certification] ,
	[First ANDA Filer(s)] ,
	[Other ANDA Filer(s)] ,
	[DMF Filers] ,
	[Litigation Status] ,
	[30-Month Stay Expirations] ,
	[Earliest Possible Generic Entrants(s)] ,
	[Triggering Event] ,
	[Earliest Possible Launch] ,
	[Earliest Launch Probability] ,
	[Expected Outlook for Generic Entry] ,
	[Comments on Generic Entry] ,
	[Estimated LOE] 

INSERT INTO DBO.IPD_Patent_History
   ( [Brand Drug Name] ,
	[Generic Name] ,
	[Brand Company] ,
	[Therapeutic Area] ,
	[US Brand Sales ($bln)] ,
	[Orange Book Patents] ,
	[Pediatric Exclusivity] ,
	[Patent Comments] ,
	[Related Litigation Comments] ,
	[Paragraph IV Certification] ,
	[First ANDA Filer(s)] ,
	[Other ANDA Filer(s)] ,
	[DMF Filers] ,
	[Litigation Status] ,
	[30-Month Stay Expirations] ,
	[Earliest Possible Generic Entrants(s)] ,
	[Triggering Event] ,
	[Earliest Possible Launch] ,
	[Earliest Launch Probability] ,
	[Expected Outlook for Generic Entry] ,
	[Comments on Generic Entry] ,
	[Estimated LOE],
    [Last_Updated_Timestamp	)
from 



https://docs.microsoft.com/en-us/answers/questions/959104/aadsts1002016-mvc-ad-auth.html


rawWK.ddaauom_AlternateUnitOfMeasure

 rawWK.ddacite_CitationFile
 
 
 	Line  751:                         "preCopyScript": "truncate table  rawWK.ddaauom_AlternateUnitOfMeasureFile"
	Line  810:                         "preCopyScript": "truncate table rawWK.ddacopy_CopyrightFile"
	Line  865:                         "preCopyScript": "truncate table rawWK.ddadict_DataDictionaryFile"
	Line  928:                         "preCopyScript": "truncate table rawWK.ddadose_GpiDoseFile"
	Line 1019:                         "preCopyScript": "truncate table rawWK.ddadpp_DosingPatientProfile"
	Line 1091:                         "preCopyScript": "truncate table rawWK.ddaread_ReadMeFile"
	Line 1146:                         "preCopyScript": "truncate table rawWK.ddarte_RouteFile"
	Line 1205:                         "preCopyScript": "truncate table rawWK.ddasum_SummaryFile"
	Line 1265:                         "preCopyScript": "truncate table rawWK.ddauom_UnitOfMeasureFile"
	Line 1324:                         "preCopyScript": "truncate table rawWK.ddaval_ValidationTranslationFile"
	Line 1395:                         "preCopyScript": "truncate table rawWK.ddacite_CitationFile"
	Line 1467:                         "preCopyScript": "truncate table rawWK.ddadtxt_GpiDoseTextFile"
	Line 1542:                         "preCopyScript": "truncate table rawWK.ddatcit_TextCitationFile"
	Line 1614:                         "preCopyScript": "truncate table rawWK.ddatext_TextFile"


[RawFda].[MergeFDAShortages]  -  
RawFda.FDAShortage


[RawFda].[ImportRawFDAShortageNDCs]  - 11 digit format conversion


[RawFda].[MergeFDAShortages]  -- 


Fda product code 
	1. [rawFDAProductCode].[ProductCode]
	
https://portal.azure.com/#view/Microsoft_Azure_Support/SupportRequestDetails.ReactView/id/%2Fsubscriptions%2Fd0521c58-92af-4b80-9809-8cd793aa9393%2Fproviders%2Fmicrosoft.support%2Fsupporttickets%2F2208290040006386	
	
1. [Fda].[FDAShortage]

2. using [Fda].[FDAShortage] the following table is derived[dbo].[PharmacyItemShortage]


[dbo].[AHFS]
[dbo].[ManufacturerLabeler]
[WoltersKluwer].[WkGpiDescriptions]
[dbo].[PharmacyItemAhfs]
[dbo].[NationalPharmacyItemPrice]
[WoltersKluwer].[MarketingCategory]
[dbo].[PharmacyItem]
[dbo].[NationalPharmacyItemPrice]
[dbo].[AspPriceAndLimits]
[dbo].[NdcToPatentApplicationXref]
[dbo].[PharmacyItemShortage]



[itemmaster].[AHFS]
[dbo].[ManufacturerLabeler]
[itemmaster].[WkGpiDescriptions]
[dbo].[PharmacyItemAhfs]
[dbo].[PharmacyItem]
[dbo].[NationalPharmacyItemPrice]
[dbo].[AspPriceAndLimits]
[dbo].[PharmacyItemShortage]
[dbo].[PharmacyItemShortage]


[itemmaster].[AHFS]
[dbo].[ManufacturerLabeler]
[itemmaster].[WkGpiDescriptions]
[dbo].[PharmacyItemAhfs]
[dbo].[PharmacyItem]
[dbo].[NationalPharmacyItemPrice]
[dbo].[AspPriceAndLimits]
[dbo].[PharmacyItemShortage]

wk medispan 2.5
=============================

Trigger details --> stcogrxexternalprod --> wkdata(container) ---> eoffiles.done

targer path - /prod/ItemMaster/WoltersKluwer/Pharmacy

Triggerfile details
wkdata/2022/08/26"



FDA
https://www.accessdata.fda.gov/scripts/drugshortages/Drugshortages.cfm


ASHP

Base URL
https://ahfs.firebaseio.com

Relative URL
/drugShortages.json?print=pretty&auth=DH3QE0iadND9hwPN8XsmP6vK16n0fQPWN7njBxQA



 [Predictive].[LoadNationalPricePredictionFromRaw]
 
 Predictive.NationalPricePrediction
 
 
 truncate table Predictive.NationalPricePrediction
 
 
 select * from dbo.Customer WHERE accountnumber in ('NU2044','781393','743695')
 
 Shortages outdated issues:
 ==================================
 
 
 
 ALTER TABLE CogRxDemo.Raw.Sales ADD PremierContractNumber varchar(25) NULL;
 
 
 AD4719
 AB1648

 
MDDB 2.5 CHANGES:
===================
	Line  18:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerAhfs]"
	Line  44:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerManufacturers]"--
	Line  70:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerItem]"--
	Line  96:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerPharmacyItemAhfs]"
	Line 122:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerNationalItemPrice]"--
	Line 148:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerFedGovItemPrice]"
	Line 174:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerAspItemPrice]"
	Line 200:                     "storedProcedureName": "[Integrations].[WkGpiDescriptions]" --
	Line 226:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerNdcToApplicationXref]"
	Line 252:                     "storedProcedureName": "[Integrations].[MergeWoltersKluwerMarketingCategory]"
 



2147483647



SELECT Member_Environment, Member_azure_sql_url, Member_azure_db, Member_Tenant, Member_Service_Principal, 
Member_Secret
FROM sqldbCogRxProdMasterdataSync.SyncControl.MemberCustomerSync;



select * from GxImport gi 

INSERT INTO SyncControl.MemberCustomerSync (
Member_Environment,
Member_azure_sql_url,
Member_azure_db,
Member_Tenant,
Member_Service_Principal,Member_Secret) VALUES
	 (N'Dev',N'sqlcogrxdevdevoapd.database.windows.net',N'sqldbCogRxDevApp',N'08a55b34-bb83-493c-912d-6cf771262b6a',N'9816452e-bb13-4210-9348-e11a321be7f0',N'Secret-CogRX-DB-CombinedApp-Member-Dev');


{"sku":{"name":"GP_Gen5","tier":"GeneralPurpose","family":"Gen5","capacity":16},"location":"East US"}



Hi [~mwacht], I have updated the mapping sheet between medispan and mddb 2.5. 
I can find some of the details by going through the documents and reference excel sheet, 
but for some of the field I am not able to map properly as the description are bit different. 
The blank and questionmark(?????)in column d of mapping sheet, I am yet to figure out the mapping 
column in the new feed, Can you take a look and help me on the next step?



Hi Team, I will miss the standup. Please find my updates

1.Fixed facility count discrepancy between 1.0 prod and 2.0 dev(Reported by QA as part of dev validation story)
2.Progressing on the following NBL COGRX-1798 based on prioritization from Kelly
3.Will be discussing with Michael regarding 1297 in dev huddle call.


Secret-CogRX-DB-CommonSpirit,
Secret-CogRX-DB-Fairview,
Secret-CogRX-DB-northwell,
Secret-CogRX-DB-stluke,
Secret-CogRX-DB-Demo,
Secret-CogRX-DB-upmc
,Secret-CogRX-DB-JeffersonHealth,Secret-CogRX-DB-Centura,Secret-CogRX-DB-AdvocateAurora

Secret-CogRX-DB-CommonSpirit,
Secret-CogRX-DB-Fairview,
Secret-CogRX-DB-northwell,
Secret-CogRX-DB-stluke,
Secret-CogRX-DB-Demo,Secret-CogRX-DB-upmc

{}



Msg 8672, Level 16, State 1, Procedure Integrations.MergePurchaseOrderRecords, Line 8
The MERGE statement attempted to UPDATE or DELETE the same row more than once. 
This happens when a target row matches more than one source row. A MERGE statement 
cannot UPDATE/DELETE the same row of the target table multiple times. Refine the ON 
clause to ensure a target row matches at most one source row, or use the GROUP BY 
clause to group the source rows.
Warning: Null value is eliminated by an aggregate or other SET operation.
Total execution time: 00:00:25.793



SP_APP_CogRx_NP

Hi Michael,

Can you help in submitting a request for getting the below service principal added to the database
1: SP_APP_CogRx_NP
2: I don't have previlege to view the service principal which is added under the 
following service connection SC_CogRx_SP_APP_CogRx_Np,


stlukes
258587
44161

2022-10-25	2018-03-01
2022-10-25	2019-09-01

ABOVE 2019 - select count(*),clientid from CustomerItemPricing
WHERE PriceStartDate-- > '2019-09-01'
group by ClientId 
115147





216-prod

2089-tst

---46947 
---39831 

status = a

5142 
39831 



parameters": {
            "pldburl": "sqlcogrxdevdevoapd.database.windows.net",
            "pldbname": "sqldbCogRxDevApp",
            "pldbtenant": "08a55b34-bb83-493c-912d-6cf771262b6a",
			"pldbserviceprincipal": "9816452e-bb13-4210-9348-e11a321be7f0",
            "pldbsecret": "Secret-CogRX-DB-CombinedApp-Member-Dev",
            "Secret": ""
            }
			
			
			
adf-CognitiveRx-Daily-prod_Pipe
-----------------------------------		
			
PowerBI-Daily-Refresh
DataCheck_SI
DataCheck
PowerBI-Daily-Refresh-Loop
CognitiveRx-Daily-Processes
CognitiveRx-Daily-Processes_Loop
CognitiveRx-Daily-Processes_Loop_mem_sp
Scale Up for Client DBs
Cognitive-Monthly-Processes_Loop
Cognitive-Monthly-Processes



adf-ItemMaster-Drug-Shortage
-------------------------------------------

ASHPShortage_Process
ASHPShortage_Pull
FDAShortage_Process
FDAShortage_Pull


adf-ItemMaster-FDA-Receive-prod
---------------------------------------------
FDARecall_V2_Process
FDARecall_V2_Receive
FdaProductCodeImportRaw
FdaProductCode_Process
FdaProductCode_Pull
FdaOrangeBookFiles_Process
FdaOrangeBookFiles_Pull


adf-ItemMaster-MasterData-Receive
-------------------------------------------
CallItemMasterIntegrations
LoadWoltersKluwerAhfsSupplementalFile
LoadWoltersKluwerDrugApp
LoadWoltersKluwerDrugDosingAdminDatabase
LoadWoltersKluwerFedGovPricing
LoadWoltersKluwerPaymentAllowanceLimitPartBv2
FormatWoltersKluwerMf2Data
LoadWoltersKluwerMF2Files
ProcessWoltersKluwer
ReceiveWoltersKluwerPharmacyPipeline




adf-Premier-DataReceive-prod_Pi
---------------------------------------------

Customer Data Load
Sync Price Disruptions
Customer Data Load combine_Mem_Tenant
Sync Price Disruptions Loop
Customer Data Load Loop
Customer data Load Loop_Mem_Tenant
Customer Data Load Prod Demo
Premier pharmacyspend product import
Premier pharmacyspend product import_Mem_Tenant
Premier pharmacyspend product import loop__Mem_Tenant
Premier pharmacyspend product import loop
PremierWholesaleData_Process
PremierHierarchyReport_Receive
PremierWholesaleData_Receive


adf-ItemMasterDataSync-prod_Pip
---------------------------------------

12_SyncItemMasterCognativeShortages_Configurable
12_SyncItemMasterCognativeShortages_Configurable_Mem_Tenant
11_SyncItemMasterToCognativeRxRecallInfo_Configurable
11_SyncItemMasterToCognativeRxRecallInfo_Configurable_Mem_Tenant
10_SyncItemMasterToCognativeRxCms_Configurable
10_SyncItemMasterToCognativeRxCms_Configurable_Mem_Tenant
9_SyncItemMasterCognativeRxFDA_Configurable
9_SyncItemMasterCognativeRxFDA_Configurable_Mem_Tenant
8_SyncItemMasterToCognativeRxItemTables_Configurable_Mem_Tenant
8_SyncItemMasterToCognativeRxItemTables_Configurable
7_SyncItemMasterCognativeRxDBO_Configurable
7_SyncItemMasterCognativeRxDBO_Configurable_Mem_Tenant
6_SyncItemMasterCognativeRxUNSPSC_Configurable
6_SyncItemMasterCognativeRxUNSPSC_Configurable_FreshCopy
5_SyncItemMasterCognativeRxOrangeBook_Configurable
5_SyncItemMasterCognativeRxOrangeBook_Configurable_Mem_Tenant
4_SyncItemMasterCognativeRxWoltersKluwers_Configurable_Mem_Tenant
4_SyncItemMasterCognativeRxWoltersKluwers_Configurable
3_SyncItemMasterToCognativeRxLog_Configurable
3_SyncItemMasterToCognativeRxLog_Configurable_Mem_Tenant
2_SyncItemMasterToCognativeRxMasterJob_Configurable
2_SyncItemMasterToCognativeRxMasterJob_Configurable_Mem_Tenant
1_SyncItemMasterCognativeRx_Mem_Tenant
1_SyncItemMasterCognativeRx
Drug_shortage_alerts_sync_process
Drug_shortage_alerts_sync_process_Mem_Tenant
Buyins_sync_process_Mem_Tenant
SyncItemMasterNationalPricePrediction




